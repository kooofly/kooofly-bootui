{"version":3,"sources":["webpack:///vuec.js","webpack:///webpack/bootstrap 1f9e0fe23156f975f8d4?388e","webpack:///./vuec.js","webpack:///./assets/vue.skuEditor.js","webpack:///./assets/vue.upload.js","webpack:///./~/.npminstall/process/0.11.9/process/browser.js","webpack:///./~/vue/dist/vue.common.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","window","Vue","SkuEditor","Upload","13","component","template","props","value","index","rowData","type","Object","watch","rowData.traceList","deep","handler","newVal","stock","forEach","v","st","Math","round","this","$set","ready","$","document","data","on","json","JSON","parse","val","isExist","result","currentSource","traceList","farmerProductId","util","alert","methods","delete","self","$root","$get","delSkuTraceIdList","push","$remove","sourceData","currentPage","ajax","url","pageSize","search","done","res","html","Handlebars","compile","addSource","strWrap","$wrap","strTable","find","dialog","bootbox","title","message","buttons","cancel","label","success","callback","array","each","i","o","concat","Pagination","element","maxPagerCount","render","total","count","size","current","e","length","innerHTML","twoWay","farmerSplitFee","postSplitFee","villageSplitFee","field","V_price","toFixed","V_number","V_source","V_price1","V_price2","V_price3","V_routing","VRender","extend","default","currentCom","getCurrentCom","components","VBatch","volSet","key","$parent","model","checked","map","temp","sku","columns","unshift","name","text","addSkuAttr","limit","prompt","isRepeat","addSku","item","it","changeModel","isSkuZero","isChecked","rNotChecked","rChecked","sk","j","singleSKUMain","getRowData","isExsitColumn","obj","undefined","addRowData","prototype","toString","r","multiSKUMain","addRows","isSKUExist","deleteRow","deleteCol","addTh","isExistTH","_dataHandler2","smp","k","len","isFirst","flg","d","searchModel","createRowData","_dataHandler1","watingForComb","combination","keys","_search","condition","shift","isSingleSKU","combArray","heads","addNewType","choices","n","14","UploadManager","attrs","selectedAll","selected","q","searchOption","pictureName","show","group","parentImages","renderImages","renderGroup","initUpload","initPagination","dropzone","Dropzone","clickable","previewTemplate","previewsContainer","paramName","sending","fie","xhr","formData","append","pictureFileId","info","pagination","close","batchGroup","filesName","className","list","stringify","batchDelete","confirm","selectedImage","selectDone","isHas","$dispatch","editImage","editState","oldName","deleteImage","image","searchImagesByQ","selectGroup","deleteGroup","addGroup","growl","addClass","removeClass","remove","editGroup","events","modal","images","$appendTo","UploadButton","replace","onSelect","upManager","$broadcast","onRemove","select-done","upload-manager","25","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","run","Item","noop","process","nextTick","args","Array","arguments","apply","browser","env","argv","version","versions","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","26","global","set","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","vm","_proxy","_digest","del","_unproxy","hasOwnProperty","isLiteral","exp","literalValueRE","test","isReserved","str","charCodeAt","_toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","a","b","slice","camelize","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","toLowerCase","classify","classifyRE","bind","fn","ctx","l","toArray","start","ret","to","from","isObject","isPlainObject","OBJECT_STRING","def","enumerable","defineProperty","writable","configurable","_debounce","func","wait","context","timestamp","later","last","Date","now","indexOf","arr","cancellable","cb","cancelled","looseEqual","Cache","head","tail","_keymap","create","pushFilter","filter","lastFilterIndex","trim","tokens","match","filterTokenRE","processFilterArg","filters","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","get","inSingle","inDouble","curly","square","paren","prev","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","config","delimiters","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","join","single","$eval","inlineFilters","filterRE","appendWithTransition","el","target","applyTransition","appendChild","beforeWithTransition","before","removeWithTransition","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","action","query","selector","querySelector","NODE_ENV","warn","inDoc","node","doc","ownerDocument","documentElement","parent","parentNode","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","event","useCapture","addEventListener","removeEventListener","getClass","classname","baseVal","setClass","cls","isIE9","namespaceURI","setAttribute","classList","add","cur","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","createElement","isTrimmable","lastChild","tagName","createAnchor","persist","anchor","debug","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attributes","refRE","mapNodeRange","end","next","removeNodeRange","frag","onRemoved","removed","nodes","getOuterHTML","outerHTML","container","cloneNode","checkComponentAttr","options","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","expectedTag","_componentNameMap","isUnknownElement","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","guardArrayAssets","guardComponents","ids","guardProps","isArray","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","propsData","mixins","mixin","mixinOptions","warnMissing","camelizedId","charAt","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","initMixin","_init","$el","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","$options","constructor","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","path","trimmed","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","warnNonExistent","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","literalValueRE$1","resetBatcherState","userQueue","has","circular","waiting","flushBatcherQueue","_again","runBatcherQueue","devtools","watcher","_maxUpdateCount","pushWatcher","user","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","commentMatch","commentRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","callHook","attach","shouldCallRemove","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","floor","getTrackByKey","trackByKey","getValue","multi","init","_value","indexOf$1","keyFilter","codes","charCode","parseInt","keyCodes","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","style","kebab","camelPrefixes","normalize$1","_key","split","callActivateHooks","called","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","settablePathRE","parentPath","lowerCaseName","required","makePropsLinkFn","_props","inlineProps","initProp","_bindDir","propDef","Boolean","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","valid","expectedTypes","assertedType","assertType","expectedType","formatType","formatValue","validator","coerce","String","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","TYPE_TRANSITION","TYPE_ANIMATION","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","onRE","plural","selfDirs","compileTextNode","compileElement","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","some","transitionRE","bindRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","update","computed","userDef","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","register","onAttached","callAttach","onDetached","callDetach","_initDOMHooks","hook","$emit","noop$1","Directive","_locked","_bound","_listeners","_host","_vue_directives","lifecycleMixin","_ref","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","reason","dataAPI","clean","asStatement","$arguments","$delete","$watch","sync","immediate","filterRE$1","$interpolate","$log","console","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","beforeWithCb","removeWithCb","$nextTick","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","hookRE","$once","splice","isSource","shouldPropagate","hasParentCbs","source","lifecycleAPI","$compile","limitBy","filterBy","delimiter","convertArray","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","use","plugin","installed","install","definition","inBrowser","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isIE","isAndroid","isIos","iosVersionMatch","iosVersion","hasMutationObserverBug","indexedDB","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","setImmediate","counter","observer","textNode","characterData","Set","entry","newer","older","returnEntry","freeze","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","formatComponentName","hasConsole","msg","error","HTMLUnknownElement","HTMLElement","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","tmp","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","params","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","__v_model","forceUpdate","staggerAmount","getStagger","warnDuplicate","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","select","_this","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","cssText","handleObject","reduce","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","setAttributeNS","cloak","for","if","vClass","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","indent","capitalize","uppercase","lowercase","currency","_currency","decimals","parseFloat","isFinite","stringified","abs","_int","_float","sign","pluralize","delay"],"mappings":"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","file":"vuec.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\twindow.Vue = __webpack_require__(26)\r\n\twindow.SkuEditor = __webpack_require__(13)\r\n\twindow.Upload = __webpack_require__(14)\n\n/***/ },\n\n/***/ 13:\n/***/ function(module, exports) {\n\n\tVue.component('V_source', {\r\n\t    template: '<div class=\"source\"><div class=\"media\" v-for=\"v in value\"><div class=\"pull-right\"><a class=\"delete\" @click=\"delete(v)\" href=\"javascript:;\">删除</a></div><div class=\"pull-left\"><span class=\"name\">{{v.farmerName}}</span></div><div class=\"media-body\"><span class=\"proName\">{{v.proName}}</span><div>库存：<input type=\"text\" digits=\"true\" mi=\"true\" required :name=\\'\"stock\" + index + $index\\' class=\"stock-input\" v-model=\"v.stock\" /></div></div></div><a class=\"add\" @click=\"addSource()\" href=\"javascript:;\">设置商品来源</a></div>',\r\n\t    props: {\r\n\t        value: {},\r\n\t        index: {},\r\n\t        rowData: {\r\n\t            type: Object\r\n\t        }\r\n\t    },\r\n\t    watch: {\r\n\t        'rowData.traceList': {\r\n\t            deep: true,\r\n\t            handler: function (newVal) {\r\n\t                var stock = 0\r\n\t                newVal.forEach(function (v) {\r\n\t                    var st = +v.stock\r\n\t                    if( typeof st === 'number' && st === st) {\r\n\t                        stock = Math.round((stock + st) * 100) / 100\r\n\t                    }\r\n\t                })\r\n\t                this.$set('rowData.stock', stock)\r\n\t            }\r\n\t        }\r\n\t    },\r\n\t    ready: function () {\r\n\t        if(!$(document).data('sourceReady')) {\r\n\t            $(document).data('sourceReady', true)\r\n\t            $(document).on('click', '.source-sel', function () {\r\n\t                var json = JSON.parse($(this).val())\r\n\t                var isExist = (function () {\r\n\t                    var result = false\r\n\t                    window.currentSource.rowData.traceList.forEach(function (v) {\r\n\t                        if(json.farmerProductId === v.farmerProductId) {\r\n\t                            result = true\r\n\t                        }\r\n\t                    })\r\n\t                    return result\r\n\t                })()\r\n\t                if (isExist){\r\n\t                    util.alert('此来源已存在，请不要重复添加哦')\r\n\t                }\r\n\t            })\r\n\t        }\r\n\t    },\r\n\t    methods: {\r\n\t        delete: function (v) {\r\n\t            var self = this\r\n\t            if (v.id) {\r\n\t                if (!this.$root.$get('delSkuTraceIdList')) {\r\n\t                    this.$root.$set('delSkuTraceIdList', [])\r\n\t                }\r\n\t                ///////////////////////////////delSkuTraceIdList\r\n\t                this.$root.delSkuTraceIdList.push(v.id)\r\n\t            }\r\n\t            this.rowData.traceList.$remove(v)\r\n\t            var stock = 0\r\n\t            self.rowData.traceList.forEach(function (v) {\r\n\t                stock = Math.round((stock + v.stock) * 100) / 100\r\n\t            })\r\n\t            self.$set('rowData.stock', stock)\r\n\t        },\r\n\t        sourceData: function (currentPage) {\r\n\t            return util.ajax({\r\n\t                url: '../trace/farmerProductListData.json',\r\n\t                data: {\r\n\t                    pageSize: 5,\r\n\t                    currentPage: currentPage\r\n\t                }\r\n\t            })\r\n\t        },\r\n\t        search: function (currentPage, template) {\r\n\t            this.sourceData(currentPage).done(function (res) {\r\n\t                var html = Handlebars.compile(template)(res.result)\r\n\t                $('#source_table').html(html)\r\n\t            })\r\n\t        },\r\n\t        addSource: function () {\r\n\t            window.currentSource = this\r\n\t\r\n\t            window.currentSource.sourceData(1).done(function(res) {\r\n\t                var strWrap = '<div id=\"source_main\" class=\"bootbox-body-inner\"><div id=\"source_table\"></div><div id=\"pagination-source\" class=\"table-footer table-footer-noborder clearfix\"></div></div>'\r\n\t                var $wrap = $(strWrap)\r\n\t                var strTable = '<table class=\"table table-condensed table-hover\" id=\"table-list\"><thead><tr><th>农户姓名</th><th>农产品名称</th><th>农产品数量</th><th>收购价(元)</th></tr></thead><tbody>        {{\\#if this}}        {{#each this}}<tr><td><label><input class=\"source-sel\" data-count=\"{{productCount}}\" value=\\'{\"farmerName\": \"{{farmerName}}\", \"farmerId\": {{farmerId}},\"farmerProductId\": {{id}}, \"proName\": \"{{productName}}\", \"stock\": {{productCount}} }\\' type=\"checkbox\" name=\"farmer\"/>{{farmerName}}</label></td><td>{{productName}}</td><td>{{productCount}}</td><td>{{productBuyPrice}}</td></tr>        {{/each}}        {{else}}<tr><td colspan=\\'4\\'>暂无数据</td></tr>        {{/if}}</tbody></table>'\r\n\t                var html = Handlebars.compile(strTable)(res.result)\r\n\t                $wrap.find('#source_table').html(html)\r\n\t                window.currentSource.dialog = bootbox.dialog({\r\n\t                    title: '商品来源',\r\n\t                    message: $wrap.html(),\r\n\t                    buttons: {\r\n\t                        cancel: {\r\n\t                            label: '取消'\r\n\t                        },\r\n\t                        success: {\r\n\t                            label: '确定',\r\n\t                            callback: function () {\r\n\t                                var array = []\r\n\t                                $('.source-sel:checked').each(function (i, v) {\r\n\t                                    var o = JSON.parse($(this).val())\r\n\t                                    array.push(o)\r\n\t                                })\r\n\t                                window.currentSource.rowData.traceList = window.currentSource.rowData.traceList.concat(array)\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                })\r\n\t                new Pagination({\r\n\t                    element: '#pagination-source',\r\n\t                    maxPagerCount: 7,\r\n\t                }).render({\r\n\t                    total: res.count,\r\n\t                    size: 5,\r\n\t                    current: 1\r\n\t                })\r\n\t                $('#pagination-source').on('change', function(e, current, size) {\r\n\t                    window.currentSource.search(current, strTable);\r\n\t                })\r\n\t            })\r\n\t\r\n\t\r\n\t            /*bootbox.dialog({\r\n\t                message: '<div id=\"source_select\" class=\"bootbox-body-inner\"><div class=\"media\"><div class=\"pull-left\"><label class=\"control-label\">商品来源</label></div><div class=\"pull-right\"><a id=\"btn-source\" class=\"btn\" href=\"javascript:;\">选择来源</a></div><div class=\"media-body\"><input id=\"source-text\" class=\"form-control\" readonly type=\"text\"/></div></div><input id=\"source-val\" type=\"hidden\"/><div class=\"media\"><div class=\"pull-left\"><label class=\"control-label\">商品库存</label></div><div class=\"media-body\"><input id=\"source-stock\" class=\"form-control\" type=\"text\"/></div></div></div>',\r\n\t                buttons: {\r\n\t                    success: {\r\n\t                        label: '确定',\r\n\t                        className: 'btn-primary',\r\n\t                        callback: function () {\r\n\t                            var o = $('#source-val').data('value')\r\n\t                            var st = +$('#source-stock').val()\r\n\t                            if (typeof st !== 'number' || st !== st){\r\n\t                                util.alert('库存必须是数字')\r\n\t                                return false\r\n\t                            }\r\n\t                            if(!o) {\r\n\t                                util.alert('请选择来源')\r\n\t                                return false\r\n\t                            }\r\n\t                            o.stock = st\r\n\t                            self.rowData.traceList.forEach(function (v) {\r\n\t                                if(v.productSkuId) {\r\n\t                                    o.productSkuId = v.productSkuId\r\n\t                                }\r\n\t                            })\r\n\t                            self.rowData.traceList.push(o)\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            })*/\r\n\t\r\n\t        }\r\n\t    }\r\n\t})\r\n\tVue.component('V_routing', {\r\n\t    template: $('#template_routing').length ?  $('#template_routing')[0].innerHTML : '<div class=\"routing\"><div class=\"row \"><div class=\"col-md-4\"><div class=\"lbl\">农户</div><input class=\"form-control\" decimal=\"true\" required :name=\"\\'farmerSplitFee\\' + index\" placeholder=\"农户\" v-model=\"value.farmerSplitFee\" type=\"text\"/></div><div class=\"col-md-4\"><div class=\"lbl\">邮政</div><input class=\"form-control\" decimal=\"true\" required :name=\"\\'postSplitFee\\' + index\" placeholder=\"邮政\" v-model=\"value.postSplitFee\" type=\"text\"/></div><div class=\"col-md-4\"><div class=\"lbl\">村站</div><input class=\"form-control\" decimal=\"true\" required :name=\"\\'villageSplitFee\\' + index\" placeholder=\"村站\" v-model=\"value.villageSplitFee\" type=\"text\"/></div></div></div>',\r\n\t    props: {\r\n\t        value: {\r\n\t            twoWay: true,\r\n\t            type: Object\r\n\t        },\r\n\t        index: {},\r\n\t        rowData: {\r\n\t            type: Object\r\n\t        }\r\n\t    },\r\n\t    watch: {\r\n\t        value: {\r\n\t            deep: true,\r\n\t            handler: function (newVal) {\r\n\t                var v\r\n\t                if (newVal.farmerSplitFee && newVal.postSplitFee && newVal.villageSplitFee) {\r\n\t                    v = +newVal.farmerSplitFee + +newVal.postSplitFee + +newVal.villageSplitFee\r\n\t                    this.$set('rowData.salePrice', Math.round(v * 100) / 100)\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t})\r\n\tVue.component('V_price1', {\r\n\t    template: '<input class=\"form-control text\" than=\"[\\'<\\', \\'[name=salePrice{{index}}]\\']\" decimal=\"true\" required data-msg-required=\"请输入商品批发价\" data-msg-than=\"批发价不能大于售价哦\" :name=\"field + index\" v-model=\"value\" type=\"text\"/>',\r\n\t    props: {\r\n\t        value: {\r\n\t            twoWay: true\r\n\t        },\r\n\t        index: {},\r\n\t        field: {},\r\n\t        rowData: {\r\n\t            type: Object\r\n\t        }\r\n\t    }\r\n\t})\r\n\tVue.component('V_price2', {\r\n\t    template: '<input class=\"form-control text\" than=\"[\\'>\\', \\'[name=wholesalePrice{{index}}]\\']\" decimal=\"true\" required data-msg-required=\"请输入建议最低售价\" data-msg-than=\"建议最低售价需要大于或等于批发价哦\" :name=\"field + index\" v-model=\"value\" type=\"text\"/>',\r\n\t    props: {\r\n\t        value: {\r\n\t            twoWay: true\r\n\t        },\r\n\t        index: {},\r\n\t        field: {},\r\n\t        rowData: {\r\n\t            type: Object\r\n\t        }\r\n\t    }\r\n\t})\r\n\tVue.component('V_price3', {\r\n\t    template: '<input class=\"form-control text\" than=\"[\\'>\\', \\'[name=minSuggestPrice{{index}}]\\']\" required data-msg-required=\"请输入建议最高售价\" data-msg-than=\"建议最高售价需要大于或等于建议最低售价哦\" :name=\"field + index\" v-model=\"value\" type=\"text\"/>',\r\n\t    props: {\r\n\t        value: {\r\n\t            twoWay: true\r\n\t        },\r\n\t        index: {},\r\n\t        field: {},\r\n\t        rowData: {\r\n\t            type: Object\r\n\t        }\r\n\t    }\r\n\t})\r\n\tvar V_price = Vue.component('V_price', {\r\n\t    template: $('#template_price').length ? $('#template_price')[0].innerHTML : '<input class=\"form-control\" min=\"0.01\" number=\"true\" required :name=\"field + index\" v-model=\"value\" type=\"text\"/>',\r\n\t    props: {\r\n\t        value: {\r\n\t            twoWay: true\r\n\t        },\r\n\t        index: {},\r\n\t        field: {},\r\n\t        rowData: {\r\n\t            type: Object\r\n\t        }\r\n\t    },\r\n\t    ready: function () {\r\n\t        if (typeof this.value === 'number') {\r\n\t            this.value = this.value.toFixed(2)\r\n\t        }\r\n\t    }\r\n\t})\r\n\tvar V_number = Vue.component('V_number', {\r\n\t    template: '<input class=\"form-control\" digits=\"true\" required :name=\"field + index\" v-model=\"value\" type=\"text\"/>',\r\n\t    props: {\r\n\t        value: {\r\n\t            twoWay: true\r\n\t        },\r\n\t        index: {},\r\n\t        field: {},\r\n\t        rowData: {\r\n\t            type: Object\r\n\t        }\r\n\t    }\r\n\t})\r\n\tvar V_source = Vue.component('V_source')\r\n\tvar V_price1 = Vue.component('V_price1')\r\n\tvar V_price2 = Vue.component('V_price2')\r\n\tvar V_price3 = Vue.component('V_price3')\r\n\tvar V_routing = Vue.component('V_routing')\r\n\tvar VRender = Vue.extend({\r\n\t    template: '<component v-if=\"render\" :value.sync=\"value\" :field=\"field\" :index=\"index\" :row-data.sync=\"rowData\" :is=\"currentCom\"></component><span v-else=\"render\">{{value}}<input :name=\"field + index\" :value=\"value\" type=\"hidden\"/></span>',\r\n\t    props: {\r\n\t        rowData: {\r\n\t            type: Object,\r\n\t            default: function () {\r\n\t                return {}\r\n\t            }\r\n\t        },\r\n\t        value: {},\r\n\t        index: {},\r\n\t        field: {},\r\n\t        render: {}\r\n\t    },\r\n\t    data: function () {\r\n\t        return {\r\n\t            currentCom: ''\r\n\t        }\r\n\t    },\r\n\t    ready: function () {\r\n\t        this.currentCom = this.getCurrentCom()\r\n\t    },\r\n\t    methods: {\r\n\t        getCurrentCom: function () {\r\n\t            return 'V_' + this.render\r\n\t        }\r\n\t    },\r\n\t    components: {\r\n\t        V_source: V_source,\r\n\t        V_price1: V_price1,\r\n\t        V_price2: V_price2,\r\n\t        V_price3: V_price3,\r\n\t        V_routing: V_routing,\r\n\t        V_price: V_price,\r\n\t        V_number:V_number\r\n\t    }\r\n\t})\r\n\tvar VBatch = Vue.extend({\r\n\t    template: '<div class=\"vol clearfix\"><div class=\"col-md-4\"><div class=\"media\"><div class=\"pull-left\"><label class=\"control-label\">批设置批发价</label></div><div class=\"media-body\"><div class=\"media\"><div class=\"pull-right\"><a href=\"javascript:;\" @click=\"volSet(\\'wholesalePrice\\', volWholesalePrice)\" class=\"btn\" data-id=\"{{id}}\">确定</a></div><div class=\"media-body\"><input v-model=\"volWholesalePrice\" class=\"form-control\" type=\"text\"/></div></div></div></div></div><div class=\"col-md-4\"><div class=\"media\"><div class=\"pull-left\"><label class=\"control-label\">批设置建议最低售价</label></div><div class=\"media-body\"><div class=\"media\"><div class=\"pull-right\"><a href=\"javascript:;\" @click=\"volSet(\\'minSuggestPrice\\', volMinSuggestPrice)\" class=\"btn\" data-id=\"{{id}}\">确定</a></div><div class=\"media-body\"><input v-model=\"volMinSuggestPrice\" class=\"form-control\" type=\"text\"/></div></div></div></div></div><div class=\"col-md-4\"><div class=\"media\"><div class=\"pull-left\"><label class=\"control-label\">批设置建议最高售价</label></div><div class=\"media-body\"><div class=\"media\"><div class=\"pull-right\"><a href=\"javascript:;\" @click=\"volSet(\\'maxSuggestPrice\\', volMaxSuggestPrice)\" class=\"btn\">确定</a></div><div class=\"media-body\"><input v-model=\"volMaxSuggestPrice\" class=\"form-control\" type=\"text\"/></div></div></div></div></div></div>',\r\n\t    methods: {\r\n\t        volSet: function (key, val) {\r\n\t            this.$parent.model.forEach(function (v) {\r\n\t                if (!v.checked) {\r\n\t                    v[key] = val\r\n\t                }\r\n\t            })\r\n\t        }\r\n\t    }\r\n\t})\r\n\t/*var sku = [\r\n\t    {\r\n\t        text: '颜色',\r\n\t        key: 'firstStandard',\r\n\t        data: [\r\n\t            {\r\n\t                value: 'a',\r\n\t                checked: true\r\n\t            },\r\n\t            {\r\n\t                value: 'b',\r\n\t                checked: true\r\n\t            }\r\n\t        ],\r\n\t    }\r\n\t]\r\n\tvar model = [\r\n\t    {\r\n\t        /!*firstStandard: 'a',*!/\r\n\t        stock: 324,\r\n\t        wholesalePrice: 45,\r\n\t        minSuggestPrice: 234,\r\n\t        maxSuggestPrice: 334,\r\n\t        skuSplit: {farmerSplitFee: 32, postSplitFee: 111, villageSplitFee: 11 },\r\n\t        traceList: []\r\n\t    }\r\n\t]*/\r\n\twindow.SkuEditor = Vue.extend({\r\n\t    template: '<div><a @click=\"addSkuAttr()\" class=\"control-desc\" href=\"javascript:;\"><i class=\" fa fa-plus\"></i> 新增规格</a><div class=\"attrs\"><div class=\"media attr\" v-for=\"item in sku\"><div class=\"pull-left\"><span class=\"control-label\">{{item.text}}</span></div><div class=\"media-body\"><div class=\"check-group\"><label class=\"checkbox-inline\" v-for=\"k in item.data\"><input value=\"k.value\" type=\"checkbox\" v-model.sync=\"k.checked\" name=\"item.key\" @change=\"changeModel(k, item)\"><span>{{k.value}}</span></label><a @click=\"addSku(item.data, item)\" href=\"javascript:;\">添加{{item.text}}</a></div></div></div></div><table class=\"table table-bordered table-hover\"><thead><tr><th v-for=\"key in columns\" class=\"{{key.className}}\" :class=\"{active: sortKey == key.field}\" >{{key.name}}</th></tr></thead><tbody><tr v-for=\"(index, entry) in model\" v-if=\"!entry.checked\"><td v-for=\"key in columns\" :class=\"key.className\"><v-render :value.sync=\"entry[key.field]\" :field=\"key.field\" :index=\"index\" :row-data.sync=\"entry\" :render=\"key.render\"></v-render></td></tr></tbody></table></div>',\r\n\t    props: ['model', 'columns', 'map', 'sku', 'limit'],\r\n\t    data: function () {\r\n\t        return {\r\n\t            map: {},\r\n\t            //用于搜索\r\n\t            temp: null,\r\n\t            sku: [],\r\n\t            columns: [],\r\n\t            //注： model 中 checked 为 true 表示删除的数据\r\n\t            model: []\r\n\t        }\r\n\t    },\r\n\t    ready: function () {\r\n\t        var self = this\r\n\t        this.sku.forEach(function (v) {\r\n\t            self.columns.unshift({\r\n\t                name: v.text,\r\n\t                field: v.key\r\n\t            })\r\n\t        })\r\n\t    },\r\n\t    methods: {\r\n\t        volSet: function (key, val) {\r\n\t            this.model.forEach(function (v) {\r\n\t                if (!v.checked) {\r\n\t                    v[key] = val\r\n\t                }\r\n\t            })\r\n\t        },\r\n\t        // 支持map\r\n\t        key: function (index) {\r\n\t            return this.map[index + 1] || '_' + (index + 1)\r\n\t        },\r\n\t        // 添加SKU属性名\r\n\t        addSkuAttr: function () {\r\n\t            var self = this\r\n\t            if (self.sku.length >= self.limit) {\r\n\t                util.alert('最多添加' + self.limit + '个规格哦')\r\n\t                return\r\n\t            }\r\n\t            util.prompt({\r\n\t                title: \"规格名称\",\r\n\t                success: function(result) {\r\n\t                    var isRepeat = false\r\n\t                    self.sku.forEach(function (v) {\r\n\t                        if (v.text === result) {\r\n\t                            isRepeat = true\r\n\t                            return\r\n\t                        }\r\n\t                    })\r\n\t                    if (!isRepeat) {\r\n\t\r\n\t                        var index = self.sku.length\r\n\t                        self.sku.push({\r\n\t                            text: result,\r\n\t                            key: self.key(index),\r\n\t                            data: []\r\n\t                        })\r\n\t                        self.columns.unshift({\r\n\t                            name: result,\r\n\t                            field: self.key(index)\r\n\t                        })\r\n\t                    } else {\r\n\t                        util.alert('相同的规格已添加，请勿重复添加')\r\n\t                    }\r\n\t                }\r\n\t            })\r\n\t        },\r\n\t        // 添加SKU值\r\n\t        addSku: function (v, item) {\r\n\t            var self = this\r\n\t            util.prompt({\r\n\t                title: \"规格值\",\r\n\t                success: function(result) {\r\n\t                    if(result.length > 10) {\r\n\t                        util.alert('规格名称过长')\r\n\t                        return\r\n\t                    }\r\n\t                    var isExist = false\r\n\t                    item.data.forEach(function (it) {\r\n\t                        it.value === result && (isExist = true)\r\n\t                    })\r\n\t\r\n\t                    if(!isExist) {\r\n\t                        var o = {\r\n\t                            value: result,\r\n\t                            checked: true\r\n\t                        }\r\n\t                        v.push(o)\r\n\t                        self.changeModel(o, item)\r\n\t                    } else {\r\n\t                        util.alert('您设置的值已存在，请勿重复添加');\r\n\t                    }\r\n\t\r\n\t                },\r\n\t            });\r\n\t\r\n\t        },\r\n\t        // === 单SKU处理Start\r\n\t        isSkuZero: function (isChecked) {\r\n\t            // 从0个sku到1个sku临界值判断\r\n\t            var self = this\r\n\t            var result = (function () {\r\n\t                var rNotChecked = true\r\n\t                var rChecked = 0\r\n\t                self.sku.forEach(function (sk) {\r\n\t                    for (var i = 0, j = sk.data.length; i < j; i++) {\r\n\t                        var v = sk.data[i];\r\n\t                        if (v.checked) {\r\n\t                            rNotChecked = false\r\n\t                            rChecked ++\r\n\t                        }\r\n\t                    }\r\n\t                })\r\n\t\r\n\t                return isChecked ? rChecked === 1 : rNotChecked\r\n\t            })()\r\n\t            return result\r\n\t        },\r\n\t        singleSKUMain: function (v, item) {\r\n\t            var self = this\r\n\t            var rowData = this.getRowData(v.value, item.key)[0]\r\n\t            // 单SKU处理\r\n\t            if (v.checked) {\r\n\t                // 0个SKU到1个SKU\r\n\t                if (self.isSkuZero(true)) {\r\n\t                    var o = {}\r\n\t                    o[item.key] = v.value\r\n\t                    var isExsitColumn = (function () {\r\n\t                        var result = false\r\n\t                        for (var i = 0, j = self.columns.length; i < j; i++) {\r\n\t                            var obj = self.columns[i];\r\n\t                            if (item.key === obj.field) {\r\n\t                                result = true\r\n\t                                break\r\n\t                            }\r\n\t                        }\r\n\t                        return result\r\n\t                    })()\r\n\t                    if (!isExsitColumn) {\r\n\t                        self.columns.unshift({\r\n\t                            name: item.text,\r\n\t                            field: item.key\r\n\t                        })\r\n\t                    }\r\n\t                    this.$set('model[' + 0 + ']', $.extend({}, this.model[0], o))\r\n\t\r\n\t                } else {\r\n\t                    rowData ? (rowData.rowData.checked = undefined) : this.addRowData(v.value, item)\r\n\t                }\r\n\t\r\n\t            } else {\r\n\t                if (self.isSkuZero(false)) {\r\n\t                    this.model.forEach(function (v, i) {\r\n\t                        if (!i) {\r\n\t                            self.sku.forEach(function (sk) {\r\n\t                                if (v[sk.key]) {\r\n\t                                    for (var m = 0, j = self.columns.length; m < j; m++) {\r\n\t                                        var o = self.columns[m];\r\n\t                                        if (o.field === sk.key) {\r\n\t                                            self.columns.$remove(o)\r\n\t                                            break\r\n\t                                        }\r\n\t                                    }\r\n\t                                    v[sk.key] = undefined\r\n\t                                }\r\n\t                            })\r\n\t                            v.checked = undefined\r\n\t                        } else {\r\n\t                            v.checked = true\r\n\t                        }\r\n\t                    })\r\n\t                } else {\r\n\t                    // 单sku删除\r\n\t                    this.$set('model[' + rowData.index + '].checked', true)\r\n\t                }\r\n\t\r\n\t            }\r\n\t        },\r\n\t        // 单个sku添加\r\n\t        addRowData: function (value, item) {\r\n\t            var columns = this.columns\r\n\t            var result = {}\r\n\t            columns.forEach(function (v) {\r\n\t                if (v.field === item.key) {\r\n\t                    result[v.field] = value\r\n\t                } else {\r\n\t                    if (Object.prototype.toString.call(v.default) === '[object Array]') {\r\n\t                        result[v.field] = [].concat(v.default)\r\n\t                    } else if (Object.prototype.toString.call(v.default) === \"[object Object]\") {\r\n\t                        result[v.field] = $.extend({}, v.default)\r\n\t                    } else {\r\n\t                        result[v.field] = v.default || ''\r\n\t                    }\r\n\t                }\r\n\t            })\r\n\t            this.model.push(result)\r\n\t        },\r\n\t        // === 单SKU处理END\r\n\t\r\n\t        // 获取 行数据和行号\r\n\t        getRowData: function (value, key) {\r\n\t            var result = []\r\n\t            this.model.forEach(function (v, i) {\r\n\t                var r = {}\r\n\t                if (v[key] === value) {\r\n\t                    r.index = i\r\n\t                    r.rowData = v\r\n\t                    result.push(r)\r\n\t                }\r\n\t            })\r\n\t            return result\r\n\t        },\r\n\t\r\n\t        // === 多SKU处理Start\r\n\t        multiSKUMain: function (v, item) {\r\n\t            // 多sku添加\r\n\t            if (v.checked) {\r\n\t                this.addRows(v.value, item)\r\n\t            } else {\r\n\t                // 多sku删除\r\n\t                // 判断是否删除单行内的全部sku\r\n\t                var isSKUExist = (function () {\r\n\t                    var result = false\r\n\t                    item.data.forEach(function (v) {\r\n\t                        if (v.checked) {\r\n\t                            result = true\r\n\t                            return\r\n\t                        }\r\n\t                    })\r\n\t                    return result\r\n\t                })()\r\n\t                if (isSKUExist) {\r\n\t                    // 多SKU删除行\r\n\t                    this.deleteRow(v.value, item)\r\n\t                } else {\r\n\t                    // 多SKU删除列\r\n\t                    this.deleteCol(v.value, item)\r\n\t                }\r\n\t            }\r\n\t        },\r\n\t\r\n\t        deleteRow: function (value, item) {\r\n\t            var self = this\r\n\t            var rowData = this.getRowData(value, item.key)\r\n\t            rowData.forEach(function (v, i) {\r\n\t                v.rowData.checked = true\r\n\t\r\n\t                self.$set('model[' + v.index + ']', $.extend({}, v.rowData))\r\n\t            })\r\n\t        },\r\n\t        deleteCol: function (value, item) {\r\n\t            var self = this\r\n\t            this.columns.forEach(function (v) {\r\n\t                if (v['field'] === item.key) {\r\n\t                    self.columns.$remove(v)\r\n\t                }\r\n\t            })\r\n\t            this.model.forEach(function (v, i) {\r\n\t                self.$set('model[' + i + '].' + item.key, 'undefined')\r\n\t            })\r\n\t        },\r\n\t        addTh: function (item) {\r\n\t            var isExistTH = false\r\n\t            this.columns.forEach(function (v) {\r\n\t                if (item.key === v['field']) {\r\n\t                    isExistTH = true\r\n\t                }\r\n\t            })\r\n\t            if (isExistTH) return\r\n\t            this.columns.unshift({\r\n\t                name: item.text,\r\n\t                field: item.key\r\n\t            })\r\n\t        },\r\n\t        addRows: function (value, item) {\r\n\t            var self = this\r\n\t            var data = this._dataHandler2()\r\n\t            var smp = data[0]\r\n\t            var index = (function () {\r\n\t                var i = 0\r\n\t                for (var k in smp) {\r\n\t                    i++\r\n\t                }\r\n\t                return i\r\n\t            })()\r\n\t            // 添加列\r\n\t            this.addTh(item)\r\n\t            var len = self.sku.length\r\n\t            self.temp = [].concat(self.model)\r\n\t            // 新增sku 第一个sku添加 需要保留之前的数据\r\n\t            var isFirst = self.sku[len - 1].data.length === 1 || (function () {\r\n\t                    var result = true\r\n\t                    var flg = false\r\n\t                    self.sku[len - 1].data.forEach(function (v) {\r\n\t                        if (v.checked) {\r\n\t                            if (flg) {\r\n\t                                result = false\r\n\t                            }\r\n\t                            flg = true\r\n\t                        }\r\n\t                    })\r\n\t                    return result\r\n\t                })()\r\n\t            if (isFirst) {\r\n\t                self.$set('model', [])\r\n\t                data.forEach(function (d, i) {\r\n\t                    var res = self.searchModel(d, index)\r\n\t                    if (res) {\r\n\t                        if (res.checked) {\r\n\t                            res.checked = undefined\r\n\t                        }\r\n\t                        self.model.push($.extend({}, res, d))\r\n\t                    } else {\r\n\t                        self.model.push(self.createRowData(d))\r\n\t                    }\r\n\t                })\r\n\t            } else {\r\n\t                data.forEach(function (d, i) {\r\n\t                    var res = self.searchModel(d, index + 1)\r\n\t                    if (!res) {\r\n\t                        self.model.push(self.createRowData(d))\r\n\t                    } else {\r\n\t                        res.checked = undefined\r\n\t                        //self.$set('model[' + i + '].checked', undefined)\r\n\t                    }\r\n\t                })\r\n\t            }\r\n\t        },\r\n\t        /*\r\n\t         * 处理数据成\r\n\t         * [\r\n\t         *   [{ firstStandard:'xxx', checked: false}, { secondStandard:'xxx'}],\r\n\t         * ...] 用来后期处理数据使用\r\n\t         * */\r\n\t        _dataHandler1: function () {\r\n\t            var result\r\n\t            var watingForComb = []\r\n\t            this.sku.forEach(function (sk) {\r\n\t                var r = []\r\n\t                sk.data.forEach(function (v) {\r\n\t                    var o = {}\r\n\t                    o[sk.key] = v.value\r\n\t                    if (v.checked) {\r\n\t                        r.push(o)\r\n\t                    }\r\n\t                    /* else {\r\n\t                     o['checked'] = false\r\n\t                     r.push(o)\r\n\t                     }*/\r\n\t                })\r\n\t                watingForComb.push(r)\r\n\t            })\r\n\t\r\n\t            result = this.combination(watingForComb)\r\n\t            return result\r\n\t        },\r\n\t        /*\r\n\t         * 处理数据成\r\n\t         * [\r\n\t         *   { firstStandard:'xxx', secondStandard: 'yyy'},\r\n\t         *   { firstStandard:'xxx', secondStandard: 'yzy' },\r\n\t         * ...] 用于mix rowData\r\n\t         * */\r\n\t        _dataHandler2: function () {\r\n\t            var result = []\r\n\t            var array = this._dataHandler1()\r\n\t            array.forEach(function (keys) {\r\n\t                var o = {}\r\n\t                keys.forEach(function (v) {\r\n\t                    $.extend(o, v)\r\n\t                })\r\n\t                result.push(o)\r\n\t            })\r\n\t            return result\r\n\t        },\r\n\t        searchModel: function (d, index) {\r\n\t            var result\r\n\t            var condition = this.condition(d, index)\r\n\t            result = _search(this.temp, condition)\r\n\t            return result\r\n\t            // 递归搜索\r\n\t            function _search(data, condition) {\r\n\t                var d = []\r\n\t                var c = condition[0]\r\n\t                data.forEach(function (v) {\r\n\t                    for (var k in c) {\r\n\t                        if (v[k] === c[k]) {\r\n\t                            d.push(v)\r\n\t                        }\r\n\t                    }\r\n\t                })\r\n\t                condition.shift()\r\n\t                if (d.length) {\r\n\t                    if (condition.length) {\r\n\t                        return _search(d, condition)\r\n\t                    } else {\r\n\t                        return d[0]\r\n\t                    }\r\n\t                } else {\r\n\t                    return null\r\n\t                }\r\n\t            }\r\n\t        },\r\n\t        /*\r\n\t         * 处理数据成\r\n\t         * [\r\n\t         *   { firstStandard:'xxx'},\r\n\t         *   { secondStandard:'xxx'},\r\n\t         * ...] 用于model搜索\r\n\t         * */\r\n\t        condition: function (o, index) {\r\n\t            var result = []\r\n\t            for (var i = 0; i < index - 1; i++) {\r\n\t                var r = {}\r\n\t                var k = this.key(i)\r\n\t                r[k] = o[k]\r\n\t                result.push(r)\r\n\t            }\r\n\t            return result\r\n\t        },\r\n\t\r\n\t        /*\r\n\t         * 处理数据成\r\n\t         * { firstStandard: 'a', stock: 324, price: '',  a: '', b: '', c: '', routing: {farmer: '', zip: '', village: ''}, source: [] },\r\n\t         * 用来后期处理数据使用\r\n\t         * */\r\n\t        createRowData: function (o) {\r\n\t            var columns = this.columns\r\n\t            var result = {}\r\n\t            columns.forEach(function (v) {\r\n\t                if (o[v.field]) {\r\n\t                    result[v.field] = o[v.field]\r\n\t                } else {\r\n\t                    if (Object.prototype.toString.call(v.default) === '[object Array]') {\r\n\t                        result[v.field] = [].concat(v.default)\r\n\t                    } else if (Object.prototype.toString.call(v.default) === \"[object Object]\") {\r\n\t                        result[v.field] = $.extend({}, v.default)\r\n\t                    } else {\r\n\t                        result[v.field] = v.default || ''\r\n\t                    }\r\n\t                }\r\n\t            })\r\n\t            return result\r\n\t        },\r\n\t        // === 多SKU处理END\r\n\t        changeModel: function (v, item) {\r\n\t            var self = this\r\n\t            var isSingleSKU = this.sku.length === 1 || (function () {\r\n\t                    var index = 0\r\n\t                    self.sku.forEach(function (it) {\r\n\t                        for (var i = 0, j = it.data.length; i < j; i++) {\r\n\t                            var d = it.data[i];\r\n\t                            if (d.checked) {\r\n\t                                index++\r\n\t                                break\r\n\t                            }\r\n\t                        }\r\n\t                    })\r\n\t                    // 多个SKU变成单个SKU的临界值\r\n\t                    var flg = false\r\n\t                    item.data.forEach(function (r) {\r\n\t                        if (r.checked) {\r\n\t                            flg = true\r\n\t                        }\r\n\t                    })\r\n\t\r\n\t                    return !flg ? index !== 1 : index <= 1\r\n\t                })()\r\n\t            if (isSingleSKU) {\r\n\t                this.singleSKUMain(v, item)\r\n\t            } else {\r\n\t                this.multiSKUMain(v, item)\r\n\t            }\r\n\t        },\r\n\t        //\r\n\t        combination: function (combArray) {\r\n\t            var heads = combArray[0];\r\n\t            for (var i = 1, j = combArray.length; i < j; i++) {\r\n\t                heads = this.addNewType(heads, combArray[i]);\r\n\t            }\r\n\t            return heads;\r\n\t        },\r\n\t        addNewType: function (heads, choices) {\r\n\t            var result = [];\r\n\t            for (var i = 0, j = heads.length; i < j; i++) {\r\n\t                for (var m = 0, n = choices.length; m < n; m++) {\r\n\t                    result.push([heads[i]].concat([choices[m]]))\r\n\t                }\r\n\t            }\r\n\t            return result;\r\n\t        }\r\n\t    },\r\n\t    components: {\r\n\t        VRender: VRender,\r\n\t        VBatch: VBatch\r\n\t    }\r\n\t})\r\n\t// delSkuTraceIdList\n\n/***/ },\n\n/***/ 14:\n/***/ function(module, exports) {\n\n\tvar UploadManager = Vue.extend({\r\n\t    template: '<div id=\"upload-modal\" v-if=\"show\"><div class=\"layer\"></div><div class=\"uploadManager\"><div class=\"panel\"><div class=\"panel-heading\"><span class=\"title\">{{selected ? selected : \\'所有文件\\'}}</span><div class=\"input-group search\"><input type=\"text\" v-model=\"q\" class=\"form-control\">\t\t\t\t\t\t\t<span class=\"input-group-btn\">\t\t\t\t\t\t\t\t<button class=\"btn\" @click=\"searchImagesByQ()\" type=\"button\">搜索</button>\t\t\t\t\t\t\t</span></div><i @click=\"close()\" class=\"close icon icon-error\"></i></div><div class=\"panel-body wrap\"><div class=\"clearix\"><ul class=\"groups pull-left\"><li class=\"item all\" :class=\"!selected && \\'active\\'\" @click=\"selectGroup(\\'all\\')\">所有</li><li @click=\"selectGroup($index)\" class=\"item\" :class=\"v.selected && \\'active\\'\" v-for=\"v in group\"><span class=\"name\">{{v.filesName}}</span></li></ul><div class=\"pull-left main\"><ul id=\"dz-list\" class=\"list clearfix\"><li class=\"item\"><a class=\"control-add\" href=\"javascript:;\"><i class=\"icon icon-add\"></i></a></li><li id=\"previewsContainer\"></li><li v-for=\"image in model\" class=\"item\" :class=\"image.selected && \\'selected\\'\"><img @click=\"selectedImage($index)\" :src=\"image.compressFilePath\" alt=\"\"><span class=\"ratio\">{{image.width}} * {{image.height}}</span><div class=\"name tof\"><span>{{image.pictureName}}</span></div></li></ul><div id=\"pagination-upload\" class=\"clearfix wrap-p\"></div></div></div></div><div class=\"panel-footer text-center\"><button @click=\"selectDone()\" class=\"btn btn-primary\">确定</button></div></div></div></div>',\r\n\t    props: {\r\n\t        attrs: {\r\n\t            type: Object\r\n\t        }\r\n\t    },\r\n\t    data: function () {\r\n\t        return {\r\n\t            selectedAll: false, // 图片选择全部\r\n\t            selected: '', // 组选择\r\n\t            q: '', // 查询关键字\r\n\t            searchOption: {\r\n\t                pageSize: 17,\r\n\t                currentPage: 1,\r\n\t                pictureName: null // 查询关键字\r\n\t            },\r\n\t            show: false, // 是否显示\r\n\t            model: [], // 图片渲染列表\r\n\t            group: [], // 图片分组\r\n\t            limit: false, // 最多选择图片数量\r\n\t            parentImages: [] // 当此组件作为弹窗使用时，父组件的已有图片\r\n\t        }\r\n\t    },\r\n\t    watch: {\r\n\t        searchOption: {\r\n\t            deep: true,\r\n\t            handler: function () {\r\n\t                this.renderImages()\r\n\t            }\r\n\t        },\r\n\t        selectedAll: function (newVal) {\r\n\t            var self = this\r\n\t            this.model.forEach(function (v, i) {\r\n\t                self.$set('model[' + i + '].selected', !!newVal)\r\n\t            })\r\n\t        },\r\n\t        show: function (newVal) {\r\n\t            if (newVal) {\r\n\t                this.renderGroup()\r\n\t                this.renderImages()\r\n\t                this.initUpload()\r\n\t                this.initPagination()\r\n\t            }\r\n\t        }\r\n\t    },\r\n\t    ready: function () {\r\n\t        if (this.show) {\r\n\t            this.renderGroup()\r\n\t            this.renderImages()\r\n\t            this.initUpload()\r\n\t            this.initPagination()\r\n\t        }\r\n\t    },\r\n\t    methods: {\r\n\t        initUpload: function () {\r\n\t            var self = this\r\n\t            self.dropzone = new Dropzone('#dz-list', {\r\n\t                url: '../fileUtil/saveUploadImageFile.do',\r\n\t                clickable: '.control-add',\r\n\t                previewTemplate: '<li class=\"item\"><img class=\"preview\" data-dz-thumbnail><div class=\"name tof\" data-dz-name></div><div class=\"handler\"><div class=\"progress\"><div class=\"progress-bar progress-bar-success\" data-dz-uploadprogress></div></div></div></li>',\r\n\t                previewsContainer: '#previewsContainer',\r\n\t                paramName: \"fileData\", // The name that will be used to transfer the file\r\n\t                sending: function (fie, xhr, formData) {\r\n\t                    formData.append('pictureFileId', self.searchOption.pictureFileId || '')\r\n\t                },\r\n\t                success: function (e, res) {\r\n\t                    if (!res.success) {\r\n\t                        util.alert(res.info)\r\n\t                    } else {\r\n\t                        self.renderImages()\r\n\t                        /*var data = res.result\r\n\t                         $(e.previewElement).remove()\r\n\t                         self.model.unshift({\r\n\t                         compressFileId: data.compressFileId,\r\n\t                         compressFilePath: data.compressFilePath,\r\n\t                         height: data.height,\r\n\t                         id: data.pictureId,\r\n\t                         pictureName: data.fileName,\r\n\t                         sourceId: data.sourceId,\r\n\t                         webpFileId: data.webpFileId,\r\n\t                         sourceFilePath: data.sourceFilePath,\r\n\t                         width: data.width\r\n\t                         })\r\n\t                         if(self.model.length === self.searchOption.pageSize) {\r\n\t                         self.model.pop()\r\n\t                         }*/\r\n\t                    }\r\n\t                }\r\n\t            })\r\n\t        },\r\n\t        initPagination: function () {\r\n\t            var self = this\r\n\t            self.pagination = new Pagination({\r\n\t                element: '#pagination-upload'\r\n\t            })\r\n\t            $('#pagination-upload').on('change', function(e, i, pageSize) {\r\n\t                self.searchOption.currentPage = i\r\n\t            })\r\n\t        },\r\n\t        close: function () {\r\n\t            this.$remove()\r\n\t        },\r\n\t        batchGroup: function () {\r\n\t            var self = this\r\n\t            var selected = (function () {\r\n\t                var result = []\r\n\t                self.model.forEach(function (v) {\r\n\t                    if (v.selected) {\r\n\t                        result.push(v.id)\r\n\t                    }\r\n\t                })\r\n\t                return result\r\n\t            })()\r\n\t            if (!selected.length) {\r\n\t                util.alert('请选择需要修改分组的图片')\r\n\t            } else  {\r\n\t                bootbox.dialog({\r\n\t                    title: '选择分组',\r\n\t                    message: (function () {\r\n\t                        var result = '<select id=\"batchGroup\" class=\"form-control\"><option value=\"\">取消分组</option>'\r\n\t                        self.group.forEach(function (v) {\r\n\t                            result += '<option value=\"' + v.id + '\">' + v.filesName + '</option>'\r\n\t                        })\r\n\t                        result += '</select>'\r\n\t                        return result\r\n\t                    })(),\r\n\t                    className: 'bootbox-sm',\r\n\t                    buttons: {\r\n\t                        success: {\r\n\t                            label: '确认',\r\n\t                            className: 'btn-success',\r\n\t                            callback: function () {\r\n\t                                var v = $('#batchGroup').val()\r\n\t                                util.ajax({\r\n\t                                    url: '../imageDetail/batchUpdate.do',\r\n\t                                    data: {\r\n\t                                        pictureFileId: v,\r\n\t                                        list: JSON.stringify(selected)\r\n\t                                    }\r\n\t                                }).done(function () {\r\n\t                                    self.renderImages()\r\n\t                                })\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                })\r\n\t\r\n\t            }\r\n\t        },\r\n\t        batchDelete: function () {\r\n\t            var self = this\r\n\t            var selected = (function () {\r\n\t                var result = []\r\n\t                self.model.forEach(function (v) {\r\n\t                    if (v.selected) {\r\n\t                        result.push(v.id)\r\n\t                    }\r\n\t                })\r\n\t                return result\r\n\t            })()\r\n\t            if (!selected.length) {\r\n\t                util.alert('请选择需要删除的图片')\r\n\t            } else  {\r\n\t                util.confirm({\r\n\t                    message: '确认要删除选中的图片吗？',\r\n\t                    success: function () {\r\n\t                        util.ajax({\r\n\t                            url: '../imageDetail/batchDelete.do',\r\n\t                            data: {\r\n\t                                list: JSON.stringify(selected)\r\n\t                            }\r\n\t                        }).done(function () {\r\n\t                            self.renderImages()\r\n\t                        })\r\n\t                    }\r\n\t                })\r\n\t            }\r\n\t        },\r\n\t        selectedImage: function (i) {\r\n\t            this.$set('model[' + i + '].selected', !this.model[i].selected)\r\n\t        },\r\n\t        selectDone: function () {\r\n\t            var self = this\r\n\t            var selected = (function () {\r\n\t                var result = []\r\n\t                self.model.forEach(function (v) {\r\n\t                    if (v.selected) {\r\n\t                        var isHas = false\r\n\t                        self.parentImages.forEach(function (item) {\r\n\t                            if (v.id === item.id) {\r\n\t                                isHas = true\r\n\t                            }\r\n\t                        })\r\n\t                        !isHas && result.push(v)\r\n\t                    }\r\n\t\r\n\t                })\r\n\t                return result\r\n\t            })()\r\n\t\r\n\t            if (selected.length > this.limit) {\r\n\t                util.alert('超过图片限制，请删除后再添加')\r\n\t            } else {\r\n\t                this.$dispatch('select-done', selected)\r\n\t                this.model.forEach(function (v, i) {\r\n\t                    self.$set('model[' + i + '].selected', false)\r\n\t                })\r\n\t                this.close()\r\n\t            }\r\n\t        },\r\n\t        editImage: function (v) {\r\n\t            if (typeof v === 'number') {\r\n\t                this.$set('model[' + v + '].editState', true)\r\n\t                this.$set('model[' + v + '].oldName', this.model[v].pictureName)\r\n\t            } else {\r\n\t                if (v.pictureName) {\r\n\t                    util.ajax({\r\n\t                        url: '../imageDetail/update.do',\r\n\t                        data: {\r\n\t                            id: v.id,\r\n\t                            pictureName: v.pictureName\r\n\t                        }\r\n\t                    }).done(function (res) {\r\n\t                        v.editState = false\r\n\t                    })\r\n\t                } else {\r\n\t                    v.pictureName = v.oldName\r\n\t                    v.editState = false\r\n\t                }\r\n\t\r\n\t            }\r\n\t        },\r\n\t        deleteImage: function (image) {\r\n\t            var self = this\r\n\t            util.ajax({\r\n\t                url: '../imageDetail/delete.do',\r\n\t                data: {\r\n\t                    id: image.id\r\n\t                }\r\n\t            }).done(function (res) {\r\n\t                self.model.$remove(image)\r\n\t            })\r\n\t        },\r\n\t        searchImagesByQ: function () {\r\n\t            this.$set('searchOption.pictureName', this.q)\r\n\t            this.$set('searchOption.currentPage', 1)\r\n\t        },\r\n\t        renderImages: function (o) {\r\n\t            var self = this\r\n\t            self.selectedAll = false\r\n\t            util.ajax({\r\n\t                url: '../imageDetail/queryList.do',\r\n\t                data: $.extend({}, self.searchOption, o || {})\r\n\t            }).done(function (res) {\r\n\t                self.model = res.list\r\n\t                self.pagination.render({\r\n\t                    size:self.searchOption.pageSize,\r\n\t                    total: res.count,\r\n\t                    currentPage: self.searchOption.currentPage\r\n\t                })\r\n\t            })\r\n\t        },\r\n\t        renderGroup: function () {\r\n\t            var self = this\r\n\t            util.ajax({\r\n\t                url: '../imageResource/queryList.do'\r\n\t            }).done(function (res) {\r\n\t                self.group = res.list\r\n\t            })\r\n\t        },\r\n\t        selectGroup: function (index) {\r\n\t            var self = this\r\n\t            this.$set('searchOption.pictureName', '')\r\n\t            this.$set('searchOption.currentPage', 1)\r\n\t            if (index === 'all') {\r\n\t                this.selected = ''\r\n\t                this.group.forEach(function (v, i) {\r\n\t                    self.$set('group[' + i + '].selected', false)\r\n\t                    self.$set('searchOption.pictureFileId', '')\r\n\t                })\r\n\t            } else {\r\n\t\r\n\t                this.group.forEach(function (v, i) {\r\n\t                    if (index === i) {\r\n\t                        self.$set('group[' + i + '].selected', true)\r\n\t                        self.$set('searchOption.pictureFileId', v.id)\r\n\t                        self.selected = v.filesName\r\n\t                    } else {\r\n\t                        self.$set('group[' + i + '].selected', false)\r\n\t                    }\r\n\t                })\r\n\t            }\r\n\t        },\r\n\t        deleteGroup: function (o) {\r\n\t            var self = this\r\n\t            util.ajax({\r\n\t                url: '../imageResource/delete.do',\r\n\t                data: {\r\n\t                    id: o.id\r\n\t                }\r\n\t            }).done(function (res) {\r\n\t                self.group.$remove(o)\r\n\t            })\r\n\t        },\r\n\t        addGroup: function () {\r\n\t            var self = this\r\n\t            bootbox.prompt({\r\n\t                title: \"分组名称\",\r\n\t                callback: function(result) {\r\n\t                    if (result) {\r\n\t                        util.ajax({\r\n\t                            url: '../imageResource/add.do',\r\n\t                            data: {\r\n\t                                filesName: result\r\n\t                            }\r\n\t                        }).done(function (res) {\r\n\t                            self.renderGroup()\r\n\t                            $.growl({ title: \"添加成功\", message: '' })\r\n\t                        })\r\n\t                    } else {\r\n\t                        if (result !== null) {\r\n\t                            $('.bootbox-form').addClass('has-error')\r\n\t                            $('.bootbox-form').append('<div class=\"help-block\">请填写分组名称</div>')\r\n\t                            $('.bootbox-input-text').on('blur', function () {\r\n\t                                if ($(this).val()) {\r\n\t                                    $('.bootbox-form').removeClass('has-error')\r\n\t                                    $('.bootbox-form .help-block').remove()\r\n\t                                }\r\n\t                            })\r\n\t                            return false;\r\n\t                        }\r\n\t                    }\r\n\t                },\r\n\t                className: \"bootbox-sm\"\r\n\t            })\r\n\t        },\r\n\t        editGroup: function (o) {\r\n\t            bootbox.prompt({\r\n\t                title: \"分组名称\",\r\n\t                callback: function(result) {\r\n\t                    if (result) {\r\n\t                        util.ajax({\r\n\t                            url: '../imageResource/update.do',\r\n\t                            data: {\r\n\t                                id: o.id,\r\n\t                                filesName: result\r\n\t                            }\r\n\t                        }).done(function (res) {\r\n\t                            o.filesName = result\r\n\t                        })\r\n\t                    }\r\n\t                },\r\n\t                className: \"bootbox-sm\"\r\n\t            })\r\n\t        }\r\n\t    },\r\n\t    events: {\r\n\t        modal: function (limit, images) {\r\n\t            this.limit = limit\r\n\t            this.show = true\r\n\t            this.parentImages = images\r\n\t\r\n\t            this.$appendTo('body')\r\n\t        }\r\n\t    }\r\n\t})\r\n\twindow.UploadManager = UploadManager\r\n\tvar UploadButton = Vue.extend({\r\n\t    template: '<div class=\"uploadM\"><div class=\"model\"><span v-for=\"image in images\" class=\"pull-left item\"><img :src=\"image.compressFilePath\" alt=\"\"><i @click=\"deleteImage(image)\" class=\"fa fa-times-circle text-danger\"></i></span></div><a class=\"control-upload-btn\" @click=\"upManager()\" href=\"javascript:;\"><i class=\"icon icon-add\"></i></a><upload-manager></upload-manager></div>',\r\n\t    props: {\r\n\t        attrs: {\r\n\t            type: Object\r\n\t        }\r\n\t    },\r\n\t    data: function () {\r\n\t        return {\r\n\t            limit: false, // 最大选择图片数量\r\n\t            replace: false, // 选择图片后替换之前选中的图片\r\n\t            images: [], // 选中的图片\r\n\t            onSelect: null\r\n\t        }\r\n\t    },\r\n\t    watch: {\r\n\t\r\n\t    },\r\n\t    methods: {\r\n\t        upManager: function () {\r\n\t            if (this.replace) {\r\n\t                this.modal()\r\n\t            } else if (this.limit) {\r\n\t                if (this.limit === this.images.length) {\r\n\t                    util.alert('超过图片限制，请删除后再添加')\r\n\t                } else {\r\n\t                    this.modal()\r\n\t                }\r\n\t            } else {\r\n\t                this.modal()\r\n\t            }\r\n\t        },\r\n\t        modal: function () {\r\n\t            if (this.replace) {\r\n\t                this.$broadcast('modal', this.limit, this.images)\r\n\t            } else {\r\n\t                this.$broadcast('modal', this.limit - this.images.length, this.images)\r\n\t            }\r\n\t        },\r\n\t        deleteImage: function (image) {\r\n\t            this.images.$remove(image)\r\n\t            typeof this.onRemove === 'function' && this.onRemove(image)\r\n\t        }\r\n\t    },\r\n\t    events: {\r\n\t        'select-done': function (images) {\r\n\t            if (this.replace) {\r\n\t                this.images = images\r\n\t            } else {\r\n\t                this.images = this.images.concat(images)\r\n\t            }\r\n\t            typeof this.onSelect === 'function' && this.onSelect(this.images)\r\n\t        }\r\n\t    },\r\n\t    components: {\r\n\t        'upload-manager': UploadManager\r\n\t    }\r\n\t})\r\n\tmodule.exports = UploadButton\n\n/***/ },\n\n/***/ 25:\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n\n/***/ 26:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {/*!\n\t * Vue.js v1.0.26\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE = UA && UA.indexOf('trident') > 0;\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n\tvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\n\tvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\t\n\t// detecting iOS UIWebView by indexedDB\n\tvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    if (this.size === this.limit) {\n\t      removed = this.shift();\n\t    }\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: process.env.NODE_ENV !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (process.env.NODE_ENV !== 'production') {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  if (!node) return false;\n\t  var doc = node.ownerDocument.documentElement;\n\t  var parent = node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (process.env.NODE_ENV !== 'production') {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        // Firefox returns unknown for some \"Interactive elements.\"\n\t        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (process.env.NODE_ENV !== 'production') {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (process.env.NODE_ENV !== 'production') {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (process.env.NODE_ENV !== 'production') {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      var mixin = child.mixins[i];\n\t      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n\t      parent = mergeOptions(parent, mixinOptions, vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE: isIE,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIos: isIos,\n\t\tiosVersionMatch: iosVersionMatch,\n\t\tiosVersion: iosVersion,\n\t\thasMutationObserverBug: hasMutationObserverBug,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (process.env.NODE_ENV !== 'production') {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here because the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      /* istanbul ignore if */\n\t      if (e.toString().match(/unsafe-eval|CSP/)) {\n\t        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n\t      } else {\n\t        warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t      }\n\t    }\n\t    return noop;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat literal values as paths\n\t  !literalValueRE$1.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  var _again = true;\n\t\n\t  _function: while (_again) {\n\t    _again = false;\n\t\n\t    runBatcherQueue(queue);\n\t    runBatcherQueue(userQueue);\n\t    // user watchers triggered more watchers,\n\t    // keep flushing until it depletes\n\t    if (queue.length) {\n\t      _again = true;\n\t      continue _function;\n\t    }\n\t    // dev tool hook\n\t    /* istanbul ignore if */\n\t    if (devtools && config.devtools) {\n\t      devtools.emit('flush');\n\t    }\n\t    resetBatcherState();\n\t  }\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  queue.length = 0;\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (process.env.NODE_ENV !== 'production' && config.debug) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if ((isA || isO) && Object.isExtensible(val)) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\tvar commentRE = /<!--/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t  var commentMatch = commentRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch && !commentMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (process.env.NODE_ENV !== 'production') {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * watcher's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (process.env.NODE_ENV !== 'production') {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    // #3029 only update when the value changes. This prevent\n\t    // browsers from overwriting values like selectionStart\n\t    value = _toString(value);\n\t    if (value !== this.el.value) this.el.value = value;\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var _this = this;\n\t\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', function () {\n\t      nextTick(_this.forceUpdate);\n\t    });\n\t    if (!inDoc(el)) {\n\t      nextTick(this.forceUpdate);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (process.env.NODE_ENV !== 'production') {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (process.env.NODE_ENV !== 'production') {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (process.env.NODE_ENV !== 'production') {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value, vm);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value, vm) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  if (typeof coerce === 'function') {\n\t    return coerce(value);\n\t  } else {\n\t    process.env.NODE_ENV !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n\t    return value;\n\t  }\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (process.env.NODE_ENV !== 'production') {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    oldId = oldId || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    removeClass(el, oldId + '-transition');\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (process.env.NODE_ENV === 'production') {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (process.env.NODE_ENV !== 'production' && !destroying) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = _toString(value);\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (process.env.NODE_ENV !== 'production') {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node, true);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (process.env.NODE_ENV !== 'production') {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (process.env.NODE_ENV !== 'production' && this.el) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop$1;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (process.env.NODE_ENV !== 'production') {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (process.env.NODE_ENV !== 'production' && this.el) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    var length = args.length;\n\t    if (length > 1) {\n\t      var index = value % 10 - 1;\n\t      return index in args ? args[index] : args[length - 1];\n\t    } else {\n\t      return args[0] + (value === 1 ? '' : 's');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (process.env.NODE_ENV !== 'production') {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          if (!definition.name) {\n\t            definition.name = id;\n\t          }\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.26';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(25)))\n\n/***/ }\n\n/******/ });\n\n\n/** WEBPACK FOOTER **\n ** vuec.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1f9e0fe23156f975f8d4\n **/","window.Vue = require('vue')\r\nwindow.SkuEditor = require('./assets/vue.skuEditor')\r\nwindow.Upload = require('./assets/vue.upload')\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./vuec.js\n ** module id = 0\n ** module chunks = 1\n **/","Vue.component('V_source', {\r\n    template: '<div class=\"source\"><div class=\"media\" v-for=\"v in value\"><div class=\"pull-right\"><a class=\"delete\" @click=\"delete(v)\" href=\"javascript:;\">删除</a></div><div class=\"pull-left\"><span class=\"name\">{{v.farmerName}}</span></div><div class=\"media-body\"><span class=\"proName\">{{v.proName}}</span><div>库存：<input type=\"text\" digits=\"true\" mi=\"true\" required :name=\\'\"stock\" + index + $index\\' class=\"stock-input\" v-model=\"v.stock\" /></div></div></div><a class=\"add\" @click=\"addSource()\" href=\"javascript:;\">设置商品来源</a></div>',\r\n    props: {\r\n        value: {},\r\n        index: {},\r\n        rowData: {\r\n            type: Object\r\n        }\r\n    },\r\n    watch: {\r\n        'rowData.traceList': {\r\n            deep: true,\r\n            handler: function (newVal) {\r\n                var stock = 0\r\n                newVal.forEach(function (v) {\r\n                    var st = +v.stock\r\n                    if( typeof st === 'number' && st === st) {\r\n                        stock = Math.round((stock + st) * 100) / 100\r\n                    }\r\n                })\r\n                this.$set('rowData.stock', stock)\r\n            }\r\n        }\r\n    },\r\n    ready: function () {\r\n        if(!$(document).data('sourceReady')) {\r\n            $(document).data('sourceReady', true)\r\n            $(document).on('click', '.source-sel', function () {\r\n                var json = JSON.parse($(this).val())\r\n                var isExist = (function () {\r\n                    var result = false\r\n                    window.currentSource.rowData.traceList.forEach(function (v) {\r\n                        if(json.farmerProductId === v.farmerProductId) {\r\n                            result = true\r\n                        }\r\n                    })\r\n                    return result\r\n                })()\r\n                if (isExist){\r\n                    util.alert('此来源已存在，请不要重复添加哦')\r\n                }\r\n            })\r\n        }\r\n    },\r\n    methods: {\r\n        delete: function (v) {\r\n            var self = this\r\n            if (v.id) {\r\n                if (!this.$root.$get('delSkuTraceIdList')) {\r\n                    this.$root.$set('delSkuTraceIdList', [])\r\n                }\r\n                ///////////////////////////////delSkuTraceIdList\r\n                this.$root.delSkuTraceIdList.push(v.id)\r\n            }\r\n            this.rowData.traceList.$remove(v)\r\n            var stock = 0\r\n            self.rowData.traceList.forEach(function (v) {\r\n                stock = Math.round((stock + v.stock) * 100) / 100\r\n            })\r\n            self.$set('rowData.stock', stock)\r\n        },\r\n        sourceData: function (currentPage) {\r\n            return util.ajax({\r\n                url: '../trace/farmerProductListData.json',\r\n                data: {\r\n                    pageSize: 5,\r\n                    currentPage: currentPage\r\n                }\r\n            })\r\n        },\r\n        search: function (currentPage, template) {\r\n            this.sourceData(currentPage).done(function (res) {\r\n                var html = Handlebars.compile(template)(res.result)\r\n                $('#source_table').html(html)\r\n            })\r\n        },\r\n        addSource: function () {\r\n            window.currentSource = this\r\n\r\n            window.currentSource.sourceData(1).done(function(res) {\r\n                var strWrap = '<div id=\"source_main\" class=\"bootbox-body-inner\"><div id=\"source_table\"></div><div id=\"pagination-source\" class=\"table-footer table-footer-noborder clearfix\"></div></div>'\r\n                var $wrap = $(strWrap)\r\n                var strTable = '<table class=\"table table-condensed table-hover\" id=\"table-list\"><thead><tr><th>农户姓名</th><th>农产品名称</th><th>农产品数量</th><th>收购价(元)</th></tr></thead><tbody>        {{\\#if this}}        {{#each this}}<tr><td><label><input class=\"source-sel\" data-count=\"{{productCount}}\" value=\\'{\"farmerName\": \"{{farmerName}}\", \"farmerId\": {{farmerId}},\"farmerProductId\": {{id}}, \"proName\": \"{{productName}}\", \"stock\": {{productCount}} }\\' type=\"checkbox\" name=\"farmer\"/>{{farmerName}}</label></td><td>{{productName}}</td><td>{{productCount}}</td><td>{{productBuyPrice}}</td></tr>        {{/each}}        {{else}}<tr><td colspan=\\'4\\'>暂无数据</td></tr>        {{/if}}</tbody></table>'\r\n                var html = Handlebars.compile(strTable)(res.result)\r\n                $wrap.find('#source_table').html(html)\r\n                window.currentSource.dialog = bootbox.dialog({\r\n                    title: '商品来源',\r\n                    message: $wrap.html(),\r\n                    buttons: {\r\n                        cancel: {\r\n                            label: '取消'\r\n                        },\r\n                        success: {\r\n                            label: '确定',\r\n                            callback: function () {\r\n                                var array = []\r\n                                $('.source-sel:checked').each(function (i, v) {\r\n                                    var o = JSON.parse($(this).val())\r\n                                    array.push(o)\r\n                                })\r\n                                window.currentSource.rowData.traceList = window.currentSource.rowData.traceList.concat(array)\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n                new Pagination({\r\n                    element: '#pagination-source',\r\n                    maxPagerCount: 7,\r\n                }).render({\r\n                    total: res.count,\r\n                    size: 5,\r\n                    current: 1\r\n                })\r\n                $('#pagination-source').on('change', function(e, current, size) {\r\n                    window.currentSource.search(current, strTable);\r\n                })\r\n            })\r\n\r\n\r\n            /*bootbox.dialog({\r\n                message: '<div id=\"source_select\" class=\"bootbox-body-inner\"><div class=\"media\"><div class=\"pull-left\"><label class=\"control-label\">商品来源</label></div><div class=\"pull-right\"><a id=\"btn-source\" class=\"btn\" href=\"javascript:;\">选择来源</a></div><div class=\"media-body\"><input id=\"source-text\" class=\"form-control\" readonly type=\"text\"/></div></div><input id=\"source-val\" type=\"hidden\"/><div class=\"media\"><div class=\"pull-left\"><label class=\"control-label\">商品库存</label></div><div class=\"media-body\"><input id=\"source-stock\" class=\"form-control\" type=\"text\"/></div></div></div>',\r\n                buttons: {\r\n                    success: {\r\n                        label: '确定',\r\n                        className: 'btn-primary',\r\n                        callback: function () {\r\n                            var o = $('#source-val').data('value')\r\n                            var st = +$('#source-stock').val()\r\n                            if (typeof st !== 'number' || st !== st){\r\n                                util.alert('库存必须是数字')\r\n                                return false\r\n                            }\r\n                            if(!o) {\r\n                                util.alert('请选择来源')\r\n                                return false\r\n                            }\r\n                            o.stock = st\r\n                            self.rowData.traceList.forEach(function (v) {\r\n                                if(v.productSkuId) {\r\n                                    o.productSkuId = v.productSkuId\r\n                                }\r\n                            })\r\n                            self.rowData.traceList.push(o)\r\n                        }\r\n                    }\r\n                }\r\n            })*/\r\n\r\n        }\r\n    }\r\n})\r\nVue.component('V_routing', {\r\n    template: $('#template_routing').length ?  $('#template_routing')[0].innerHTML : '<div class=\"routing\"><div class=\"row \"><div class=\"col-md-4\"><div class=\"lbl\">农户</div><input class=\"form-control\" decimal=\"true\" required :name=\"\\'farmerSplitFee\\' + index\" placeholder=\"农户\" v-model=\"value.farmerSplitFee\" type=\"text\"/></div><div class=\"col-md-4\"><div class=\"lbl\">邮政</div><input class=\"form-control\" decimal=\"true\" required :name=\"\\'postSplitFee\\' + index\" placeholder=\"邮政\" v-model=\"value.postSplitFee\" type=\"text\"/></div><div class=\"col-md-4\"><div class=\"lbl\">村站</div><input class=\"form-control\" decimal=\"true\" required :name=\"\\'villageSplitFee\\' + index\" placeholder=\"村站\" v-model=\"value.villageSplitFee\" type=\"text\"/></div></div></div>',\r\n    props: {\r\n        value: {\r\n            twoWay: true,\r\n            type: Object\r\n        },\r\n        index: {},\r\n        rowData: {\r\n            type: Object\r\n        }\r\n    },\r\n    watch: {\r\n        value: {\r\n            deep: true,\r\n            handler: function (newVal) {\r\n                var v\r\n                if (newVal.farmerSplitFee && newVal.postSplitFee && newVal.villageSplitFee) {\r\n                    v = +newVal.farmerSplitFee + +newVal.postSplitFee + +newVal.villageSplitFee\r\n                    this.$set('rowData.salePrice', Math.round(v * 100) / 100)\r\n                }\r\n            }\r\n        }\r\n    }\r\n})\r\nVue.component('V_price1', {\r\n    template: '<input class=\"form-control text\" than=\"[\\'<\\', \\'[name=salePrice{{index}}]\\']\" decimal=\"true\" required data-msg-required=\"请输入商品批发价\" data-msg-than=\"批发价不能大于售价哦\" :name=\"field + index\" v-model=\"value\" type=\"text\"/>',\r\n    props: {\r\n        value: {\r\n            twoWay: true\r\n        },\r\n        index: {},\r\n        field: {},\r\n        rowData: {\r\n            type: Object\r\n        }\r\n    }\r\n})\r\nVue.component('V_price2', {\r\n    template: '<input class=\"form-control text\" than=\"[\\'>\\', \\'[name=wholesalePrice{{index}}]\\']\" decimal=\"true\" required data-msg-required=\"请输入建议最低售价\" data-msg-than=\"建议最低售价需要大于或等于批发价哦\" :name=\"field + index\" v-model=\"value\" type=\"text\"/>',\r\n    props: {\r\n        value: {\r\n            twoWay: true\r\n        },\r\n        index: {},\r\n        field: {},\r\n        rowData: {\r\n            type: Object\r\n        }\r\n    }\r\n})\r\nVue.component('V_price3', {\r\n    template: '<input class=\"form-control text\" than=\"[\\'>\\', \\'[name=minSuggestPrice{{index}}]\\']\" required data-msg-required=\"请输入建议最高售价\" data-msg-than=\"建议最高售价需要大于或等于建议最低售价哦\" :name=\"field + index\" v-model=\"value\" type=\"text\"/>',\r\n    props: {\r\n        value: {\r\n            twoWay: true\r\n        },\r\n        index: {},\r\n        field: {},\r\n        rowData: {\r\n            type: Object\r\n        }\r\n    }\r\n})\r\nvar V_price = Vue.component('V_price', {\r\n    template: $('#template_price').length ? $('#template_price')[0].innerHTML : '<input class=\"form-control\" min=\"0.01\" number=\"true\" required :name=\"field + index\" v-model=\"value\" type=\"text\"/>',\r\n    props: {\r\n        value: {\r\n            twoWay: true\r\n        },\r\n        index: {},\r\n        field: {},\r\n        rowData: {\r\n            type: Object\r\n        }\r\n    },\r\n    ready: function () {\r\n        if (typeof this.value === 'number') {\r\n            this.value = this.value.toFixed(2)\r\n        }\r\n    }\r\n})\r\nvar V_number = Vue.component('V_number', {\r\n    template: '<input class=\"form-control\" digits=\"true\" required :name=\"field + index\" v-model=\"value\" type=\"text\"/>',\r\n    props: {\r\n        value: {\r\n            twoWay: true\r\n        },\r\n        index: {},\r\n        field: {},\r\n        rowData: {\r\n            type: Object\r\n        }\r\n    }\r\n})\r\nvar V_source = Vue.component('V_source')\r\nvar V_price1 = Vue.component('V_price1')\r\nvar V_price2 = Vue.component('V_price2')\r\nvar V_price3 = Vue.component('V_price3')\r\nvar V_routing = Vue.component('V_routing')\r\nvar VRender = Vue.extend({\r\n    template: '<component v-if=\"render\" :value.sync=\"value\" :field=\"field\" :index=\"index\" :row-data.sync=\"rowData\" :is=\"currentCom\"></component><span v-else=\"render\">{{value}}<input :name=\"field + index\" :value=\"value\" type=\"hidden\"/></span>',\r\n    props: {\r\n        rowData: {\r\n            type: Object,\r\n            default: function () {\r\n                return {}\r\n            }\r\n        },\r\n        value: {},\r\n        index: {},\r\n        field: {},\r\n        render: {}\r\n    },\r\n    data: function () {\r\n        return {\r\n            currentCom: ''\r\n        }\r\n    },\r\n    ready: function () {\r\n        this.currentCom = this.getCurrentCom()\r\n    },\r\n    methods: {\r\n        getCurrentCom: function () {\r\n            return 'V_' + this.render\r\n        }\r\n    },\r\n    components: {\r\n        V_source: V_source,\r\n        V_price1: V_price1,\r\n        V_price2: V_price2,\r\n        V_price3: V_price3,\r\n        V_routing: V_routing,\r\n        V_price: V_price,\r\n        V_number:V_number\r\n    }\r\n})\r\nvar VBatch = Vue.extend({\r\n    template: '<div class=\"vol clearfix\"><div class=\"col-md-4\"><div class=\"media\"><div class=\"pull-left\"><label class=\"control-label\">批设置批发价</label></div><div class=\"media-body\"><div class=\"media\"><div class=\"pull-right\"><a href=\"javascript:;\" @click=\"volSet(\\'wholesalePrice\\', volWholesalePrice)\" class=\"btn\" data-id=\"{{id}}\">确定</a></div><div class=\"media-body\"><input v-model=\"volWholesalePrice\" class=\"form-control\" type=\"text\"/></div></div></div></div></div><div class=\"col-md-4\"><div class=\"media\"><div class=\"pull-left\"><label class=\"control-label\">批设置建议最低售价</label></div><div class=\"media-body\"><div class=\"media\"><div class=\"pull-right\"><a href=\"javascript:;\" @click=\"volSet(\\'minSuggestPrice\\', volMinSuggestPrice)\" class=\"btn\" data-id=\"{{id}}\">确定</a></div><div class=\"media-body\"><input v-model=\"volMinSuggestPrice\" class=\"form-control\" type=\"text\"/></div></div></div></div></div><div class=\"col-md-4\"><div class=\"media\"><div class=\"pull-left\"><label class=\"control-label\">批设置建议最高售价</label></div><div class=\"media-body\"><div class=\"media\"><div class=\"pull-right\"><a href=\"javascript:;\" @click=\"volSet(\\'maxSuggestPrice\\', volMaxSuggestPrice)\" class=\"btn\">确定</a></div><div class=\"media-body\"><input v-model=\"volMaxSuggestPrice\" class=\"form-control\" type=\"text\"/></div></div></div></div></div></div>',\r\n    methods: {\r\n        volSet: function (key, val) {\r\n            this.$parent.model.forEach(function (v) {\r\n                if (!v.checked) {\r\n                    v[key] = val\r\n                }\r\n            })\r\n        }\r\n    }\r\n})\r\n/*var sku = [\r\n    {\r\n        text: '颜色',\r\n        key: 'firstStandard',\r\n        data: [\r\n            {\r\n                value: 'a',\r\n                checked: true\r\n            },\r\n            {\r\n                value: 'b',\r\n                checked: true\r\n            }\r\n        ],\r\n    }\r\n]\r\nvar model = [\r\n    {\r\n        /!*firstStandard: 'a',*!/\r\n        stock: 324,\r\n        wholesalePrice: 45,\r\n        minSuggestPrice: 234,\r\n        maxSuggestPrice: 334,\r\n        skuSplit: {farmerSplitFee: 32, postSplitFee: 111, villageSplitFee: 11 },\r\n        traceList: []\r\n    }\r\n]*/\r\nwindow.SkuEditor = Vue.extend({\r\n    template: '<div><a @click=\"addSkuAttr()\" class=\"control-desc\" href=\"javascript:;\"><i class=\" fa fa-plus\"></i> 新增规格</a><div class=\"attrs\"><div class=\"media attr\" v-for=\"item in sku\"><div class=\"pull-left\"><span class=\"control-label\">{{item.text}}</span></div><div class=\"media-body\"><div class=\"check-group\"><label class=\"checkbox-inline\" v-for=\"k in item.data\"><input value=\"k.value\" type=\"checkbox\" v-model.sync=\"k.checked\" name=\"item.key\" @change=\"changeModel(k, item)\"><span>{{k.value}}</span></label><a @click=\"addSku(item.data, item)\" href=\"javascript:;\">添加{{item.text}}</a></div></div></div></div><table class=\"table table-bordered table-hover\"><thead><tr><th v-for=\"key in columns\" class=\"{{key.className}}\" :class=\"{active: sortKey == key.field}\" >{{key.name}}</th></tr></thead><tbody><tr v-for=\"(index, entry) in model\" v-if=\"!entry.checked\"><td v-for=\"key in columns\" :class=\"key.className\"><v-render :value.sync=\"entry[key.field]\" :field=\"key.field\" :index=\"index\" :row-data.sync=\"entry\" :render=\"key.render\"></v-render></td></tr></tbody></table></div>',\r\n    props: ['model', 'columns', 'map', 'sku', 'limit'],\r\n    data: function () {\r\n        return {\r\n            map: {},\r\n            //用于搜索\r\n            temp: null,\r\n            sku: [],\r\n            columns: [],\r\n            //注： model 中 checked 为 true 表示删除的数据\r\n            model: []\r\n        }\r\n    },\r\n    ready: function () {\r\n        var self = this\r\n        this.sku.forEach(function (v) {\r\n            self.columns.unshift({\r\n                name: v.text,\r\n                field: v.key\r\n            })\r\n        })\r\n    },\r\n    methods: {\r\n        volSet: function (key, val) {\r\n            this.model.forEach(function (v) {\r\n                if (!v.checked) {\r\n                    v[key] = val\r\n                }\r\n            })\r\n        },\r\n        // 支持map\r\n        key: function (index) {\r\n            return this.map[index + 1] || '_' + (index + 1)\r\n        },\r\n        // 添加SKU属性名\r\n        addSkuAttr: function () {\r\n            var self = this\r\n            if (self.sku.length >= self.limit) {\r\n                util.alert('最多添加' + self.limit + '个规格哦')\r\n                return\r\n            }\r\n            util.prompt({\r\n                title: \"规格名称\",\r\n                success: function(result) {\r\n                    var isRepeat = false\r\n                    self.sku.forEach(function (v) {\r\n                        if (v.text === result) {\r\n                            isRepeat = true\r\n                            return\r\n                        }\r\n                    })\r\n                    if (!isRepeat) {\r\n\r\n                        var index = self.sku.length\r\n                        self.sku.push({\r\n                            text: result,\r\n                            key: self.key(index),\r\n                            data: []\r\n                        })\r\n                        self.columns.unshift({\r\n                            name: result,\r\n                            field: self.key(index)\r\n                        })\r\n                    } else {\r\n                        util.alert('相同的规格已添加，请勿重复添加')\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        // 添加SKU值\r\n        addSku: function (v, item) {\r\n            var self = this\r\n            util.prompt({\r\n                title: \"规格值\",\r\n                success: function(result) {\r\n                    if(result.length > 10) {\r\n                        util.alert('规格名称过长')\r\n                        return\r\n                    }\r\n                    var isExist = false\r\n                    item.data.forEach(function (it) {\r\n                        it.value === result && (isExist = true)\r\n                    })\r\n\r\n                    if(!isExist) {\r\n                        var o = {\r\n                            value: result,\r\n                            checked: true\r\n                        }\r\n                        v.push(o)\r\n                        self.changeModel(o, item)\r\n                    } else {\r\n                        util.alert('您设置的值已存在，请勿重复添加');\r\n                    }\r\n\r\n                },\r\n            });\r\n\r\n        },\r\n        // === 单SKU处理Start\r\n        isSkuZero: function (isChecked) {\r\n            // 从0个sku到1个sku临界值判断\r\n            var self = this\r\n            var result = (function () {\r\n                var rNotChecked = true\r\n                var rChecked = 0\r\n                self.sku.forEach(function (sk) {\r\n                    for (var i = 0, j = sk.data.length; i < j; i++) {\r\n                        var v = sk.data[i];\r\n                        if (v.checked) {\r\n                            rNotChecked = false\r\n                            rChecked ++\r\n                        }\r\n                    }\r\n                })\r\n\r\n                return isChecked ? rChecked === 1 : rNotChecked\r\n            })()\r\n            return result\r\n        },\r\n        singleSKUMain: function (v, item) {\r\n            var self = this\r\n            var rowData = this.getRowData(v.value, item.key)[0]\r\n            // 单SKU处理\r\n            if (v.checked) {\r\n                // 0个SKU到1个SKU\r\n                if (self.isSkuZero(true)) {\r\n                    var o = {}\r\n                    o[item.key] = v.value\r\n                    var isExsitColumn = (function () {\r\n                        var result = false\r\n                        for (var i = 0, j = self.columns.length; i < j; i++) {\r\n                            var obj = self.columns[i];\r\n                            if (item.key === obj.field) {\r\n                                result = true\r\n                                break\r\n                            }\r\n                        }\r\n                        return result\r\n                    })()\r\n                    if (!isExsitColumn) {\r\n                        self.columns.unshift({\r\n                            name: item.text,\r\n                            field: item.key\r\n                        })\r\n                    }\r\n                    this.$set('model[' + 0 + ']', $.extend({}, this.model[0], o))\r\n\r\n                } else {\r\n                    rowData ? (rowData.rowData.checked = undefined) : this.addRowData(v.value, item)\r\n                }\r\n\r\n            } else {\r\n                if (self.isSkuZero(false)) {\r\n                    this.model.forEach(function (v, i) {\r\n                        if (!i) {\r\n                            self.sku.forEach(function (sk) {\r\n                                if (v[sk.key]) {\r\n                                    for (var m = 0, j = self.columns.length; m < j; m++) {\r\n                                        var o = self.columns[m];\r\n                                        if (o.field === sk.key) {\r\n                                            self.columns.$remove(o)\r\n                                            break\r\n                                        }\r\n                                    }\r\n                                    v[sk.key] = undefined\r\n                                }\r\n                            })\r\n                            v.checked = undefined\r\n                        } else {\r\n                            v.checked = true\r\n                        }\r\n                    })\r\n                } else {\r\n                    // 单sku删除\r\n                    this.$set('model[' + rowData.index + '].checked', true)\r\n                }\r\n\r\n            }\r\n        },\r\n        // 单个sku添加\r\n        addRowData: function (value, item) {\r\n            var columns = this.columns\r\n            var result = {}\r\n            columns.forEach(function (v) {\r\n                if (v.field === item.key) {\r\n                    result[v.field] = value\r\n                } else {\r\n                    if (Object.prototype.toString.call(v.default) === '[object Array]') {\r\n                        result[v.field] = [].concat(v.default)\r\n                    } else if (Object.prototype.toString.call(v.default) === \"[object Object]\") {\r\n                        result[v.field] = $.extend({}, v.default)\r\n                    } else {\r\n                        result[v.field] = v.default || ''\r\n                    }\r\n                }\r\n            })\r\n            this.model.push(result)\r\n        },\r\n        // === 单SKU处理END\r\n\r\n        // 获取 行数据和行号\r\n        getRowData: function (value, key) {\r\n            var result = []\r\n            this.model.forEach(function (v, i) {\r\n                var r = {}\r\n                if (v[key] === value) {\r\n                    r.index = i\r\n                    r.rowData = v\r\n                    result.push(r)\r\n                }\r\n            })\r\n            return result\r\n        },\r\n\r\n        // === 多SKU处理Start\r\n        multiSKUMain: function (v, item) {\r\n            // 多sku添加\r\n            if (v.checked) {\r\n                this.addRows(v.value, item)\r\n            } else {\r\n                // 多sku删除\r\n                // 判断是否删除单行内的全部sku\r\n                var isSKUExist = (function () {\r\n                    var result = false\r\n                    item.data.forEach(function (v) {\r\n                        if (v.checked) {\r\n                            result = true\r\n                            return\r\n                        }\r\n                    })\r\n                    return result\r\n                })()\r\n                if (isSKUExist) {\r\n                    // 多SKU删除行\r\n                    this.deleteRow(v.value, item)\r\n                } else {\r\n                    // 多SKU删除列\r\n                    this.deleteCol(v.value, item)\r\n                }\r\n            }\r\n        },\r\n\r\n        deleteRow: function (value, item) {\r\n            var self = this\r\n            var rowData = this.getRowData(value, item.key)\r\n            rowData.forEach(function (v, i) {\r\n                v.rowData.checked = true\r\n\r\n                self.$set('model[' + v.index + ']', $.extend({}, v.rowData))\r\n            })\r\n        },\r\n        deleteCol: function (value, item) {\r\n            var self = this\r\n            this.columns.forEach(function (v) {\r\n                if (v['field'] === item.key) {\r\n                    self.columns.$remove(v)\r\n                }\r\n            })\r\n            this.model.forEach(function (v, i) {\r\n                self.$set('model[' + i + '].' + item.key, 'undefined')\r\n            })\r\n        },\r\n        addTh: function (item) {\r\n            var isExistTH = false\r\n            this.columns.forEach(function (v) {\r\n                if (item.key === v['field']) {\r\n                    isExistTH = true\r\n                }\r\n            })\r\n            if (isExistTH) return\r\n            this.columns.unshift({\r\n                name: item.text,\r\n                field: item.key\r\n            })\r\n        },\r\n        addRows: function (value, item) {\r\n            var self = this\r\n            var data = this._dataHandler2()\r\n            var smp = data[0]\r\n            var index = (function () {\r\n                var i = 0\r\n                for (var k in smp) {\r\n                    i++\r\n                }\r\n                return i\r\n            })()\r\n            // 添加列\r\n            this.addTh(item)\r\n            var len = self.sku.length\r\n            self.temp = [].concat(self.model)\r\n            // 新增sku 第一个sku添加 需要保留之前的数据\r\n            var isFirst = self.sku[len - 1].data.length === 1 || (function () {\r\n                    var result = true\r\n                    var flg = false\r\n                    self.sku[len - 1].data.forEach(function (v) {\r\n                        if (v.checked) {\r\n                            if (flg) {\r\n                                result = false\r\n                            }\r\n                            flg = true\r\n                        }\r\n                    })\r\n                    return result\r\n                })()\r\n            if (isFirst) {\r\n                self.$set('model', [])\r\n                data.forEach(function (d, i) {\r\n                    var res = self.searchModel(d, index)\r\n                    if (res) {\r\n                        if (res.checked) {\r\n                            res.checked = undefined\r\n                        }\r\n                        self.model.push($.extend({}, res, d))\r\n                    } else {\r\n                        self.model.push(self.createRowData(d))\r\n                    }\r\n                })\r\n            } else {\r\n                data.forEach(function (d, i) {\r\n                    var res = self.searchModel(d, index + 1)\r\n                    if (!res) {\r\n                        self.model.push(self.createRowData(d))\r\n                    } else {\r\n                        res.checked = undefined\r\n                        //self.$set('model[' + i + '].checked', undefined)\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        /*\r\n         * 处理数据成\r\n         * [\r\n         *   [{ firstStandard:'xxx', checked: false}, { secondStandard:'xxx'}],\r\n         * ...] 用来后期处理数据使用\r\n         * */\r\n        _dataHandler1: function () {\r\n            var result\r\n            var watingForComb = []\r\n            this.sku.forEach(function (sk) {\r\n                var r = []\r\n                sk.data.forEach(function (v) {\r\n                    var o = {}\r\n                    o[sk.key] = v.value\r\n                    if (v.checked) {\r\n                        r.push(o)\r\n                    }\r\n                    /* else {\r\n                     o['checked'] = false\r\n                     r.push(o)\r\n                     }*/\r\n                })\r\n                watingForComb.push(r)\r\n            })\r\n\r\n            result = this.combination(watingForComb)\r\n            return result\r\n        },\r\n        /*\r\n         * 处理数据成\r\n         * [\r\n         *   { firstStandard:'xxx', secondStandard: 'yyy'},\r\n         *   { firstStandard:'xxx', secondStandard: 'yzy' },\r\n         * ...] 用于mix rowData\r\n         * */\r\n        _dataHandler2: function () {\r\n            var result = []\r\n            var array = this._dataHandler1()\r\n            array.forEach(function (keys) {\r\n                var o = {}\r\n                keys.forEach(function (v) {\r\n                    $.extend(o, v)\r\n                })\r\n                result.push(o)\r\n            })\r\n            return result\r\n        },\r\n        searchModel: function (d, index) {\r\n            var result\r\n            var condition = this.condition(d, index)\r\n            result = _search(this.temp, condition)\r\n            return result\r\n            // 递归搜索\r\n            function _search(data, condition) {\r\n                var d = []\r\n                var c = condition[0]\r\n                data.forEach(function (v) {\r\n                    for (var k in c) {\r\n                        if (v[k] === c[k]) {\r\n                            d.push(v)\r\n                        }\r\n                    }\r\n                })\r\n                condition.shift()\r\n                if (d.length) {\r\n                    if (condition.length) {\r\n                        return _search(d, condition)\r\n                    } else {\r\n                        return d[0]\r\n                    }\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        },\r\n        /*\r\n         * 处理数据成\r\n         * [\r\n         *   { firstStandard:'xxx'},\r\n         *   { secondStandard:'xxx'},\r\n         * ...] 用于model搜索\r\n         * */\r\n        condition: function (o, index) {\r\n            var result = []\r\n            for (var i = 0; i < index - 1; i++) {\r\n                var r = {}\r\n                var k = this.key(i)\r\n                r[k] = o[k]\r\n                result.push(r)\r\n            }\r\n            return result\r\n        },\r\n\r\n        /*\r\n         * 处理数据成\r\n         * { firstStandard: 'a', stock: 324, price: '',  a: '', b: '', c: '', routing: {farmer: '', zip: '', village: ''}, source: [] },\r\n         * 用来后期处理数据使用\r\n         * */\r\n        createRowData: function (o) {\r\n            var columns = this.columns\r\n            var result = {}\r\n            columns.forEach(function (v) {\r\n                if (o[v.field]) {\r\n                    result[v.field] = o[v.field]\r\n                } else {\r\n                    if (Object.prototype.toString.call(v.default) === '[object Array]') {\r\n                        result[v.field] = [].concat(v.default)\r\n                    } else if (Object.prototype.toString.call(v.default) === \"[object Object]\") {\r\n                        result[v.field] = $.extend({}, v.default)\r\n                    } else {\r\n                        result[v.field] = v.default || ''\r\n                    }\r\n                }\r\n            })\r\n            return result\r\n        },\r\n        // === 多SKU处理END\r\n        changeModel: function (v, item) {\r\n            var self = this\r\n            var isSingleSKU = this.sku.length === 1 || (function () {\r\n                    var index = 0\r\n                    self.sku.forEach(function (it) {\r\n                        for (var i = 0, j = it.data.length; i < j; i++) {\r\n                            var d = it.data[i];\r\n                            if (d.checked) {\r\n                                index++\r\n                                break\r\n                            }\r\n                        }\r\n                    })\r\n                    // 多个SKU变成单个SKU的临界值\r\n                    var flg = false\r\n                    item.data.forEach(function (r) {\r\n                        if (r.checked) {\r\n                            flg = true\r\n                        }\r\n                    })\r\n\r\n                    return !flg ? index !== 1 : index <= 1\r\n                })()\r\n            if (isSingleSKU) {\r\n                this.singleSKUMain(v, item)\r\n            } else {\r\n                this.multiSKUMain(v, item)\r\n            }\r\n        },\r\n        //\r\n        combination: function (combArray) {\r\n            var heads = combArray[0];\r\n            for (var i = 1, j = combArray.length; i < j; i++) {\r\n                heads = this.addNewType(heads, combArray[i]);\r\n            }\r\n            return heads;\r\n        },\r\n        addNewType: function (heads, choices) {\r\n            var result = [];\r\n            for (var i = 0, j = heads.length; i < j; i++) {\r\n                for (var m = 0, n = choices.length; m < n; m++) {\r\n                    result.push([heads[i]].concat([choices[m]]))\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    },\r\n    components: {\r\n        VRender: VRender,\r\n        VBatch: VBatch\r\n    }\r\n})\r\n// delSkuTraceIdList\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./assets/vue.skuEditor.js\n ** module id = 13\n ** module chunks = 1\n **/","var UploadManager = Vue.extend({\r\n    template: '<div id=\"upload-modal\" v-if=\"show\"><div class=\"layer\"></div><div class=\"uploadManager\"><div class=\"panel\"><div class=\"panel-heading\"><span class=\"title\">{{selected ? selected : \\'所有文件\\'}}</span><div class=\"input-group search\"><input type=\"text\" v-model=\"q\" class=\"form-control\">\t\t\t\t\t\t\t<span class=\"input-group-btn\">\t\t\t\t\t\t\t\t<button class=\"btn\" @click=\"searchImagesByQ()\" type=\"button\">搜索</button>\t\t\t\t\t\t\t</span></div><i @click=\"close()\" class=\"close icon icon-error\"></i></div><div class=\"panel-body wrap\"><div class=\"clearix\"><ul class=\"groups pull-left\"><li class=\"item all\" :class=\"!selected && \\'active\\'\" @click=\"selectGroup(\\'all\\')\">所有</li><li @click=\"selectGroup($index)\" class=\"item\" :class=\"v.selected && \\'active\\'\" v-for=\"v in group\"><span class=\"name\">{{v.filesName}}</span></li></ul><div class=\"pull-left main\"><ul id=\"dz-list\" class=\"list clearfix\"><li class=\"item\"><a class=\"control-add\" href=\"javascript:;\"><i class=\"icon icon-add\"></i></a></li><li id=\"previewsContainer\"></li><li v-for=\"image in model\" class=\"item\" :class=\"image.selected && \\'selected\\'\"><img @click=\"selectedImage($index)\" :src=\"image.compressFilePath\" alt=\"\"><span class=\"ratio\">{{image.width}} * {{image.height}}</span><div class=\"name tof\"><span>{{image.pictureName}}</span></div></li></ul><div id=\"pagination-upload\" class=\"clearfix wrap-p\"></div></div></div></div><div class=\"panel-footer text-center\"><button @click=\"selectDone()\" class=\"btn btn-primary\">确定</button></div></div></div></div>',\r\n    props: {\r\n        attrs: {\r\n            type: Object\r\n        }\r\n    },\r\n    data: function () {\r\n        return {\r\n            selectedAll: false, // 图片选择全部\r\n            selected: '', // 组选择\r\n            q: '', // 查询关键字\r\n            searchOption: {\r\n                pageSize: 17,\r\n                currentPage: 1,\r\n                pictureName: null // 查询关键字\r\n            },\r\n            show: false, // 是否显示\r\n            model: [], // 图片渲染列表\r\n            group: [], // 图片分组\r\n            limit: false, // 最多选择图片数量\r\n            parentImages: [] // 当此组件作为弹窗使用时，父组件的已有图片\r\n        }\r\n    },\r\n    watch: {\r\n        searchOption: {\r\n            deep: true,\r\n            handler: function () {\r\n                this.renderImages()\r\n            }\r\n        },\r\n        selectedAll: function (newVal) {\r\n            var self = this\r\n            this.model.forEach(function (v, i) {\r\n                self.$set('model[' + i + '].selected', !!newVal)\r\n            })\r\n        },\r\n        show: function (newVal) {\r\n            if (newVal) {\r\n                this.renderGroup()\r\n                this.renderImages()\r\n                this.initUpload()\r\n                this.initPagination()\r\n            }\r\n        }\r\n    },\r\n    ready: function () {\r\n        if (this.show) {\r\n            this.renderGroup()\r\n            this.renderImages()\r\n            this.initUpload()\r\n            this.initPagination()\r\n        }\r\n    },\r\n    methods: {\r\n        initUpload: function () {\r\n            var self = this\r\n            self.dropzone = new Dropzone('#dz-list', {\r\n                url: '../fileUtil/saveUploadImageFile.do',\r\n                clickable: '.control-add',\r\n                previewTemplate: '<li class=\"item\"><img class=\"preview\" data-dz-thumbnail><div class=\"name tof\" data-dz-name></div><div class=\"handler\"><div class=\"progress\"><div class=\"progress-bar progress-bar-success\" data-dz-uploadprogress></div></div></div></li>',\r\n                previewsContainer: '#previewsContainer',\r\n                paramName: \"fileData\", // The name that will be used to transfer the file\r\n                sending: function (fie, xhr, formData) {\r\n                    formData.append('pictureFileId', self.searchOption.pictureFileId || '')\r\n                },\r\n                success: function (e, res) {\r\n                    if (!res.success) {\r\n                        util.alert(res.info)\r\n                    } else {\r\n                        self.renderImages()\r\n                        /*var data = res.result\r\n                         $(e.previewElement).remove()\r\n                         self.model.unshift({\r\n                         compressFileId: data.compressFileId,\r\n                         compressFilePath: data.compressFilePath,\r\n                         height: data.height,\r\n                         id: data.pictureId,\r\n                         pictureName: data.fileName,\r\n                         sourceId: data.sourceId,\r\n                         webpFileId: data.webpFileId,\r\n                         sourceFilePath: data.sourceFilePath,\r\n                         width: data.width\r\n                         })\r\n                         if(self.model.length === self.searchOption.pageSize) {\r\n                         self.model.pop()\r\n                         }*/\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        initPagination: function () {\r\n            var self = this\r\n            self.pagination = new Pagination({\r\n                element: '#pagination-upload'\r\n            })\r\n            $('#pagination-upload').on('change', function(e, i, pageSize) {\r\n                self.searchOption.currentPage = i\r\n            })\r\n        },\r\n        close: function () {\r\n            this.$remove()\r\n        },\r\n        batchGroup: function () {\r\n            var self = this\r\n            var selected = (function () {\r\n                var result = []\r\n                self.model.forEach(function (v) {\r\n                    if (v.selected) {\r\n                        result.push(v.id)\r\n                    }\r\n                })\r\n                return result\r\n            })()\r\n            if (!selected.length) {\r\n                util.alert('请选择需要修改分组的图片')\r\n            } else  {\r\n                bootbox.dialog({\r\n                    title: '选择分组',\r\n                    message: (function () {\r\n                        var result = '<select id=\"batchGroup\" class=\"form-control\"><option value=\"\">取消分组</option>'\r\n                        self.group.forEach(function (v) {\r\n                            result += '<option value=\"' + v.id + '\">' + v.filesName + '</option>'\r\n                        })\r\n                        result += '</select>'\r\n                        return result\r\n                    })(),\r\n                    className: 'bootbox-sm',\r\n                    buttons: {\r\n                        success: {\r\n                            label: '确认',\r\n                            className: 'btn-success',\r\n                            callback: function () {\r\n                                var v = $('#batchGroup').val()\r\n                                util.ajax({\r\n                                    url: '../imageDetail/batchUpdate.do',\r\n                                    data: {\r\n                                        pictureFileId: v,\r\n                                        list: JSON.stringify(selected)\r\n                                    }\r\n                                }).done(function () {\r\n                                    self.renderImages()\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n\r\n            }\r\n        },\r\n        batchDelete: function () {\r\n            var self = this\r\n            var selected = (function () {\r\n                var result = []\r\n                self.model.forEach(function (v) {\r\n                    if (v.selected) {\r\n                        result.push(v.id)\r\n                    }\r\n                })\r\n                return result\r\n            })()\r\n            if (!selected.length) {\r\n                util.alert('请选择需要删除的图片')\r\n            } else  {\r\n                util.confirm({\r\n                    message: '确认要删除选中的图片吗？',\r\n                    success: function () {\r\n                        util.ajax({\r\n                            url: '../imageDetail/batchDelete.do',\r\n                            data: {\r\n                                list: JSON.stringify(selected)\r\n                            }\r\n                        }).done(function () {\r\n                            self.renderImages()\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        selectedImage: function (i) {\r\n            this.$set('model[' + i + '].selected', !this.model[i].selected)\r\n        },\r\n        selectDone: function () {\r\n            var self = this\r\n            var selected = (function () {\r\n                var result = []\r\n                self.model.forEach(function (v) {\r\n                    if (v.selected) {\r\n                        var isHas = false\r\n                        self.parentImages.forEach(function (item) {\r\n                            if (v.id === item.id) {\r\n                                isHas = true\r\n                            }\r\n                        })\r\n                        !isHas && result.push(v)\r\n                    }\r\n\r\n                })\r\n                return result\r\n            })()\r\n\r\n            if (selected.length > this.limit) {\r\n                util.alert('超过图片限制，请删除后再添加')\r\n            } else {\r\n                this.$dispatch('select-done', selected)\r\n                this.model.forEach(function (v, i) {\r\n                    self.$set('model[' + i + '].selected', false)\r\n                })\r\n                this.close()\r\n            }\r\n        },\r\n        editImage: function (v) {\r\n            if (typeof v === 'number') {\r\n                this.$set('model[' + v + '].editState', true)\r\n                this.$set('model[' + v + '].oldName', this.model[v].pictureName)\r\n            } else {\r\n                if (v.pictureName) {\r\n                    util.ajax({\r\n                        url: '../imageDetail/update.do',\r\n                        data: {\r\n                            id: v.id,\r\n                            pictureName: v.pictureName\r\n                        }\r\n                    }).done(function (res) {\r\n                        v.editState = false\r\n                    })\r\n                } else {\r\n                    v.pictureName = v.oldName\r\n                    v.editState = false\r\n                }\r\n\r\n            }\r\n        },\r\n        deleteImage: function (image) {\r\n            var self = this\r\n            util.ajax({\r\n                url: '../imageDetail/delete.do',\r\n                data: {\r\n                    id: image.id\r\n                }\r\n            }).done(function (res) {\r\n                self.model.$remove(image)\r\n            })\r\n        },\r\n        searchImagesByQ: function () {\r\n            this.$set('searchOption.pictureName', this.q)\r\n            this.$set('searchOption.currentPage', 1)\r\n        },\r\n        renderImages: function (o) {\r\n            var self = this\r\n            self.selectedAll = false\r\n            util.ajax({\r\n                url: '../imageDetail/queryList.do',\r\n                data: $.extend({}, self.searchOption, o || {})\r\n            }).done(function (res) {\r\n                self.model = res.list\r\n                self.pagination.render({\r\n                    size:self.searchOption.pageSize,\r\n                    total: res.count,\r\n                    currentPage: self.searchOption.currentPage\r\n                })\r\n            })\r\n        },\r\n        renderGroup: function () {\r\n            var self = this\r\n            util.ajax({\r\n                url: '../imageResource/queryList.do'\r\n            }).done(function (res) {\r\n                self.group = res.list\r\n            })\r\n        },\r\n        selectGroup: function (index) {\r\n            var self = this\r\n            this.$set('searchOption.pictureName', '')\r\n            this.$set('searchOption.currentPage', 1)\r\n            if (index === 'all') {\r\n                this.selected = ''\r\n                this.group.forEach(function (v, i) {\r\n                    self.$set('group[' + i + '].selected', false)\r\n                    self.$set('searchOption.pictureFileId', '')\r\n                })\r\n            } else {\r\n\r\n                this.group.forEach(function (v, i) {\r\n                    if (index === i) {\r\n                        self.$set('group[' + i + '].selected', true)\r\n                        self.$set('searchOption.pictureFileId', v.id)\r\n                        self.selected = v.filesName\r\n                    } else {\r\n                        self.$set('group[' + i + '].selected', false)\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        deleteGroup: function (o) {\r\n            var self = this\r\n            util.ajax({\r\n                url: '../imageResource/delete.do',\r\n                data: {\r\n                    id: o.id\r\n                }\r\n            }).done(function (res) {\r\n                self.group.$remove(o)\r\n            })\r\n        },\r\n        addGroup: function () {\r\n            var self = this\r\n            bootbox.prompt({\r\n                title: \"分组名称\",\r\n                callback: function(result) {\r\n                    if (result) {\r\n                        util.ajax({\r\n                            url: '../imageResource/add.do',\r\n                            data: {\r\n                                filesName: result\r\n                            }\r\n                        }).done(function (res) {\r\n                            self.renderGroup()\r\n                            $.growl({ title: \"添加成功\", message: '' })\r\n                        })\r\n                    } else {\r\n                        if (result !== null) {\r\n                            $('.bootbox-form').addClass('has-error')\r\n                            $('.bootbox-form').append('<div class=\"help-block\">请填写分组名称</div>')\r\n                            $('.bootbox-input-text').on('blur', function () {\r\n                                if ($(this).val()) {\r\n                                    $('.bootbox-form').removeClass('has-error')\r\n                                    $('.bootbox-form .help-block').remove()\r\n                                }\r\n                            })\r\n                            return false;\r\n                        }\r\n                    }\r\n                },\r\n                className: \"bootbox-sm\"\r\n            })\r\n        },\r\n        editGroup: function (o) {\r\n            bootbox.prompt({\r\n                title: \"分组名称\",\r\n                callback: function(result) {\r\n                    if (result) {\r\n                        util.ajax({\r\n                            url: '../imageResource/update.do',\r\n                            data: {\r\n                                id: o.id,\r\n                                filesName: result\r\n                            }\r\n                        }).done(function (res) {\r\n                            o.filesName = result\r\n                        })\r\n                    }\r\n                },\r\n                className: \"bootbox-sm\"\r\n            })\r\n        }\r\n    },\r\n    events: {\r\n        modal: function (limit, images) {\r\n            this.limit = limit\r\n            this.show = true\r\n            this.parentImages = images\r\n\r\n            this.$appendTo('body')\r\n        }\r\n    }\r\n})\r\nwindow.UploadManager = UploadManager\r\nvar UploadButton = Vue.extend({\r\n    template: '<div class=\"uploadM\"><div class=\"model\"><span v-for=\"image in images\" class=\"pull-left item\"><img :src=\"image.compressFilePath\" alt=\"\"><i @click=\"deleteImage(image)\" class=\"fa fa-times-circle text-danger\"></i></span></div><a class=\"control-upload-btn\" @click=\"upManager()\" href=\"javascript:;\"><i class=\"icon icon-add\"></i></a><upload-manager></upload-manager></div>',\r\n    props: {\r\n        attrs: {\r\n            type: Object\r\n        }\r\n    },\r\n    data: function () {\r\n        return {\r\n            limit: false, // 最大选择图片数量\r\n            replace: false, // 选择图片后替换之前选中的图片\r\n            images: [], // 选中的图片\r\n            onSelect: null\r\n        }\r\n    },\r\n    watch: {\r\n\r\n    },\r\n    methods: {\r\n        upManager: function () {\r\n            if (this.replace) {\r\n                this.modal()\r\n            } else if (this.limit) {\r\n                if (this.limit === this.images.length) {\r\n                    util.alert('超过图片限制，请删除后再添加')\r\n                } else {\r\n                    this.modal()\r\n                }\r\n            } else {\r\n                this.modal()\r\n            }\r\n        },\r\n        modal: function () {\r\n            if (this.replace) {\r\n                this.$broadcast('modal', this.limit, this.images)\r\n            } else {\r\n                this.$broadcast('modal', this.limit - this.images.length, this.images)\r\n            }\r\n        },\r\n        deleteImage: function (image) {\r\n            this.images.$remove(image)\r\n            typeof this.onRemove === 'function' && this.onRemove(image)\r\n        }\r\n    },\r\n    events: {\r\n        'select-done': function (images) {\r\n            if (this.replace) {\r\n                this.images = images\r\n            } else {\r\n                this.images = this.images.concat(images)\r\n            }\r\n            typeof this.onSelect === 'function' && this.onSelect(this.images)\r\n        }\r\n    },\r\n    components: {\r\n        'upload-manager': UploadManager\r\n    }\r\n})\r\nmodule.exports = UploadButton\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./assets/vue.upload.js\n ** module id = 14\n ** module chunks = 1\n **/","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/.npminstall/process/0.11.9/process/browser.js\n ** module id = 25\n ** module chunks = 1\n **/","/*!\n * Vue.js v1.0.26\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && UA.indexOf('trident') > 0;\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\nvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\n// detecting iOS UIWebView by indexedDB\nvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    if (this.size === this.limit) {\n      removed = this.shift();\n    }\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        // Firefox returns unknown for some \"Interactive elements.\"\n        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n      parent = mergeOptions(parent, mixinOptions, vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tiosVersionMatch: iosVersionMatch,\n\tiosVersion: iosVersion,\n\thasMutationObserverBug: hasMutationObserverBug,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\nfunction noop() {}\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here because the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if (e.toString().match(/unsafe-eval|CSP/)) {\n        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n      } else {\n        warn('Invalid expression. ' + 'Generated function body: ' + body);\n      }\n    }\n    return noop;\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat literal values as paths\n  !literalValueRE$1.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if ((isA || isO) && Object.isExtensible(val)) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\nvar commentRE = /<!--/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n  var commentMatch = commentRE.test(templateString);\n\n  if (!tagMatch && !entityMatch && !commentMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * watcher's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    // #3029 only update when the value changes. This prevent\n    // browsers from overwriting values like selectionStart\n    value = _toString(value);\n    if (value !== this.el.value) this.el.value = value;\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var _this = this;\n\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', function () {\n      nextTick(_this.forceUpdate);\n    });\n    if (!inDoc(el)) {\n      nextTick(this.forceUpdate);\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value, vm);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value, vm) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  if (typeof coerce === 'function') {\n    return coerce(value);\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n    return value;\n  }\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    oldId = oldId || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    removeClass(el, oldId + '-transition');\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = _toString(value);\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop$1() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop$1;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    var length = args.length;\n    if (length > 1) {\n      var index = value % 10 - 1;\n      return index in args ? args[index] : args[length - 1];\n    } else {\n      return args[0] + (value === 1 ? '' : 's');\n    }\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          if (!definition.name) {\n            definition.name = id;\n          }\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.26';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 26\n ** module chunks = 1\n **/"],"sourceRoot":""}