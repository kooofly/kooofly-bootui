{"version":3,"sources":["webpack:///vuec.js","webpack:///webpack/bootstrap cf7598e3ece2d5dc0fde?aa49","webpack:///./vuec.js","webpack:///./assets/vue.skuEditor.js","webpack:///./~/.npminstall/process/0.11.9/process/browser.js","webpack:///./~/vue/dist/vue.common.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","12","Vue","component","template","props","value","index","rowData","type","Object","watch","rowData.traceList","deep","handler","newVal","stock","forEach","v","st","Math","round","this","$set","ready","$","document","data","on","json","JSON","parse","val","isExist","result","window","currentSource","traceList","farmerProductId","util","alert","methods","delete","self","$root","$get","delSkuTraceIdList","push","$remove","sourceData","currentPage","ajax","url","pageSize","search","done","res","html","Handlebars","compile","addSource","strWrap","$wrap","strTable","find","dialog","bootbox","title","message","buttons","cancel","label","success","callback","array","each","i","o","concat","Pagination","element","maxPagerCount","render","total","count","size","current","e","length","innerHTML","twoWay","farmerSplitFee","postSplitFee","villageSplitFee","field","V_price","toFixed","V_number","V_source","V_price1","V_price2","V_price3","V_routing","VRender","extend","default","currentCom","getCurrentCom","components","VBatch","volSet","key","$parent","model","checked","SkuEditor","map","temp","sku","columns","unshift","name","text","addSkuAttr","limit","prompt","isRepeat","addSku","item","it","changeModel","isSkuZero","isChecked","rNotChecked","rChecked","sk","j","singleSKUMain","getRowData","isExsitColumn","obj","undefined","addRowData","prototype","toString","r","multiSKUMain","addRows","isSKUExist","deleteRow","deleteCol","addTh","isExistTH","_dataHandler2","smp","k","len","isFirst","flg","d","searchModel","createRowData","_dataHandler1","watingForComb","combination","keys","_search","condition","shift","isSingleSKU","combArray","heads","addNewType","choices","n","22","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","run","Item","noop","process","nextTick","args","Array","arguments","apply","browser","env","argv","version","versions","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","23","global","set","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","vm","_proxy","_digest","del","_unproxy","hasOwnProperty","isLiteral","exp","literalValueRE","test","isReserved","str","charCodeAt","_toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","a","b","slice","camelize","replace","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","toLowerCase","classify","classifyRE","bind","fn","ctx","l","toArray","list","start","ret","to","from","isObject","isPlainObject","OBJECT_STRING","def","enumerable","defineProperty","writable","configurable","_debounce","func","wait","context","timestamp","later","last","Date","now","indexOf","arr","cancellable","cb","cancelled","looseEqual","stringify","Cache","head","tail","_keymap","create","pushFilter","filter","lastFilterIndex","trim","tokens","match","filterTokenRE","processFilterArg","filters","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","get","inSingle","inDouble","curly","square","paren","prev","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","config","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","join","single","$eval","inlineFilters","filterRE","appendWithTransition","el","target","applyTransition","appendChild","beforeWithTransition","before","removeWithTransition","remove","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","action","query","selector","querySelector","NODE_ENV","warn","inDoc","node","doc","ownerDocument","documentElement","parent","parentNode","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","event","useCapture","addEventListener","removeEventListener","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","setAttribute","addClass","classList","add","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","createElement","isTrimmable","lastChild","tagName","createAnchor","persist","anchor","debug","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","next","removeNodeRange","frag","onRemoved","removed","nodes","getOuterHTML","outerHTML","container","cloneNode","checkComponentAttr","options","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","expectedTag","_componentNameMap","isUnknownElement","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","guardArrayAssets","guardComponents","ids","guardProps","isArray","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","propsData","mixins","mixin","mixinOptions","warnMissing","camelizedId","charAt","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","initMixin","_init","$el","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","$options","constructor","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","path","trimmed","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","warnNonExistent","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","literalValueRE$1","resetBatcherState","userQueue","has","circular","waiting","flushBatcherQueue","_again","runBatcherQueue","devtools","watcher","_maxUpdateCount","pushWatcher","q","user","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","commentMatch","commentRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","callHook","attach","shouldCallRemove","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","floor","getTrackByKey","trackByKey","getValue","multi","init","selected","_value","indexOf$1","keyFilter","codes","charCode","parseInt","keyCodes","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","style","kebab","camelPrefixes","normalize$1","_key","split","callActivateHooks","called","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","settablePathRE","parentPath","lowerCaseName","required","makePropsLinkFn","_props","inlineProps","initProp","_bindDir","propDef","Boolean","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","valid","expectedTypes","assertedType","assertType","expectedType","formatType","formatValue","validator","coerce","String","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","TYPE_TRANSITION","TYPE_ANIMATION","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","onRE","plural","selfDirs","compileTextNode","compileElement","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","some","transitionRE","bindRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","update","computed","userDef","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","register","onAttached","callAttach","onDetached","callDetach","events","_initDOMHooks","hook","$emit","noop$1","Directive","_locked","_bound","_listeners","_host","_vue_directives","lifecycleMixin","_ref","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","reason","dataAPI","clean","asStatement","$arguments","$delete","$watch","sync","immediate","filterRE$1","$interpolate","$log","console","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","hookRE","$once","splice","isSource","shouldPropagate","hasParentCbs","$broadcast","source","$dispatch","lifecycleAPI","$compile","limitBy","filterBy","delimiter","convertArray","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","use","plugin","installed","install","definition","inBrowser","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isIE","isAndroid","isIos","iosVersionMatch","iosVersion","hasMutationObserverBug","indexedDB","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","setImmediate","counter","observer","textNode","characterData","Set","entry","newer","older","returnEntry","freeze","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","formatComponentName","hasConsole","msg","error","HTMLUnknownElement","HTMLElement","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","tmp","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","params","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","__v_model","forceUpdate","staggerAmount","getStagger","warnDuplicate","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","select","_this","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","cssText","handleObject","reduce","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","setAttributeNS","cloak","for","if","vClass","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","indent","capitalize","uppercase","lowercase","currency","_currency","decimals","parseFloat","isFinite","stringified","abs","_int","_float","sign","pluralize","delay"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMMW,EACA,SAASP,EAAQD,EAASH,GE7ChCA,EAAA,IACAA,EAAA,KFmDMY,GACA,SAASR,EAAQD,GGrDvBU,IAAAC,UAAA,YACAC,SAAA,ogBACAC,OACAC,SACAC,SACAC,SACAC,KAAAC,SAGAC,OACAC,qBACAC,MAAA,EACAC,QAAA,SAAAC,GACA,GAAAC,GAAA,CACAD,GAAAE,QAAA,SAAAC,GACA,GAAAC,IAAAD,EAAAF,KACA,iBAAAG,YACAH,EAAAI,KAAAC,MAAA,KAAAL,EAAAG,IAAA,OAGAG,KAAAC,KAAA,gBAAAP,MAIAQ,MAAA,WACAC,EAAAC,UAAAC,KAAA,iBACAF,EAAAC,UAAAC,KAAA,kBACAF,EAAAC,UAAAE,GAAA,iCACA,GAAAC,GAAAC,KAAAC,MAAAN,EAAAH,MAAAU,OACAC,EAAA,WACA,GAAAC,IAAA,CAMA,OALAC,QAAAC,cAAA5B,QAAA6B,UAAApB,QAAA,SAAAC,GACAW,EAAAS,kBAAApB,EAAAoB,kBACAJ,GAAA,KAGAA,IAEAD,IACAM,KAAAC,MAAA,uBAKAC,SACAC,SAAA,SAAAxB,GACA,GAAAyB,GAAArB,IACAJ,GAAAxB,KACA4B,KAAAsB,MAAAC,KAAA,sBACAvB,KAAAsB,MAAArB,KAAA,wBAGAD,KAAAsB,MAAAE,kBAAAC,KAAA7B,EAAAxB,KAEA4B,KAAAd,QAAA6B,UAAAW,QAAA9B,EACA,IAAAF,GAAA,CACA2B,GAAAnC,QAAA6B,UAAApB,QAAA,SAAAC,GACAF,EAAAI,KAAAC,MAAA,KAAAL,EAAAE,EAAAF,QAAA,MAEA2B,EAAApB,KAAA,gBAAAP,IAEAiC,WAAA,SAAAC,GACA,MAAAX,MAAAY,MACAC,IAAA,sCACAzB,MACA0B,SAAA,EACAH,kBAIAI,OAAA,SAAAJ,EAAA9C,GACAkB,KAAA2B,WAAAC,GAAAK,KAAA,SAAAC,GACA,GAAAC,GAAAC,WAAAC,QAAAvD,GAAAoD,EAAAtB,OACAT,GAAA,iBAAAgC,WAGAG,UAAA,WACAzB,OAAAC,cAAAd,KAEAa,OAAAC,cAAAa,WAAA,GAAAM,KAAA,SAAAC,GACA,GAAAK,GAAA,6KACAC,EAAArC,EAAAoC,GACAE,EAAA,qpBACAN,EAAAC,WAAAC,QAAAI,GAAAP,EAAAtB,OACA4B,GAAAE,KAAA,iBAAAP,QACAtB,OAAAC,cAAA6B,OAAAC,QAAAD,QACAE,MAAA,OACAC,QAAAN,EAAAL,OACAY,SACAC,QACAC,MAAA,MAEAC,SACAD,MAAA,KACAE,SAAA,WACA,GAAAC,KACAjD,GAAA,uBAAAkD,KAAA,SAAAC,EAAA1D,GACA,GAAA2D,GAAA/C,KAAAC,MAAAN,EAAAH,MAAAU,MACA0C,GAAA3B,KAAA8B,KAEA1C,OAAAC,cAAA5B,QAAA6B,UAAAF,OAAAC,cAAA5B,QAAA6B,UAAAyC,OAAAJ,QAKA,GAAAK,aACAC,QAAA,qBACAC,cAAA,IACiBC,QACjBC,MAAA3B,EAAA4B,MACAC,KAAA,EACAC,QAAA,IAEA7D,EAAA,sBAAAG,GAAA,kBAAA2D,EAAAD,EAAAD,GACAlD,OAAAC,cAAAkB,OAAAgC,EAAAvB,WAqCA7D,IAAAC,UAAA,aACAC,SAAAqB,EAAA,qBAAA+D,OAAA/D,EAAA,wBAAAgE,UAAA,+oBACApF,OACAC,OACAoF,QAAA,EACAjF,KAAAC,QAEAH,SACAC,SACAC,KAAAC,SAGAC,OACAL,OACAO,MAAA,EACAC,QAAA,SAAAC,GACA,GAAAG,EACAH,GAAA4E,gBAAA5E,EAAA6E,cAAA7E,EAAA8E,kBACA3E,GAAAH,EAAA4E,iBAAA5E,EAAA6E,eAAA7E,EAAA8E,gBACAvE,KAAAC,KAAA,oBAAAH,KAAAC,MAAA,IAAAH,GAAA,WAMAhB,IAAAC,UAAA,YACAC,SAAA,qNACAC,OACAC,OACAoF,QAAA,GAEAnF,SACAuF,SACAtF,SACAC,KAAAC,WAIAR,IAAAC,UAAA,YACAC,SAAA,kOACAC,OACAC,OACAoF,QAAA,GAEAnF,SACAuF,SACAtF,SACAC,KAAAC,WAIAR,IAAAC,UAAA,YACAC,SAAA,uNACAC,OACAC,OACAoF,QAAA,GAEAnF,SACAuF,SACAtF,SACAC,KAAAC,UAIA,IAAAqF,GAAA7F,IAAAC,UAAA,WACAC,SAAAqB,EAAA,mBAAA+D,OAAA/D,EAAA,sBAAAgE,UAAA,oHACApF,OACAC,OACAoF,QAAA,GAEAnF,SACAuF,SACAtF,SACAC,KAAAC,SAGAc,MAAA,WACA,gBAAAF,MAAAhB,QACAgB,KAAAhB,MAAAgB,KAAAhB,MAAA0F,QAAA,OAIAC,EAAA/F,IAAAC,UAAA,YACAC,SAAA,yGACAC,OACAC,OACAoF,QAAA,GAEAnF,SACAuF,SACAtF,SACAC,KAAAC,WAIAwF,EAAAhG,IAAAC,UAAA,YACAgG,EAAAjG,IAAAC,UAAA,YACAiG,EAAAlG,IAAAC,UAAA,YACAkG,EAAAnG,IAAAC,UAAA,YACAmG,EAAApG,IAAAC,UAAA,aACAoG,EAAArG,IAAAsG,QACApG,SAAA,qOACAC,OACAG,SACAC,KAAAC,OACA+F,UAAA,WACA,WAGAnG,SACAC,SACAuF,SACAZ,WAEAvD,KAAA,WACA,OACA+E,WAAA,KAGAlF,MAAA,WACAF,KAAAoF,WAAApF,KAAAqF,iBAEAlE,SACAkE,cAAA,WACA,WAAArF,KAAA4D,SAGA0B,YACAV,WACAC,WACAC,WACAC,WACAC,YACAP,UACAE,cAGAY,EAAA3G,IAAAsG,QACApG,SAAA,gxCACAqC,SACAqE,OAAA,SAAAC,EAAA/E,GACAV,KAAA0F,QAAAC,MAAAhG,QAAA,SAAAC,GACAA,EAAAgG,UACAhG,EAAA6F,GAAA/E,QAiCAG,QAAAgF,UAAAjH,IAAAsG,QACApG,SAAA,+hCACAC,OAAA,uCACAsB,KAAA,WACA,OACAyF,OAEAC,KAAA,KACAC,OACAC,WAEAN,WAGAzF,MAAA,WACA,GAAAmB,GAAArB,IACAA,MAAAgG,IAAArG,QAAA,SAAAC,GACAyB,EAAA4E,QAAAC,SACAC,KAAAvG,EAAAwG,KACA5B,MAAA5E,EAAA6F,SAIAtE,SACAqE,OAAA,SAAAC,EAAA/E,GACAV,KAAA2F,MAAAhG,QAAA,SAAAC,GACAA,EAAAgG,UACAhG,EAAA6F,GAAA/E,MAKA+E,IAAA,SAAAxG,GACA,MAAAe,MAAA8F,IAAA7G,EAAA,SAAAA,EAAA,IAGAoH,WAAA,WACA,GAAAhF,GAAArB,IACA,OAAAqB,GAAA2E,IAAA9B,QAAA7C,EAAAiF,UACArF,MAAAC,MAAA,OAAAG,EAAAiF,MAAA,YAGArF,MAAAsF,QACA1D,MAAA,OACAK,QAAA,SAAAtC,GACA,GAAA4F,IAAA,CAOA,IANAnF,EAAA2E,IAAArG,QAAA,SAAAC,GACA,GAAAA,EAAAwG,OAAAxF,EAEA,YADA4F,GAAA,KAIAA,EAaAvF,KAAAC,MAAA,uBAbA,CAEA,GAAAjC,GAAAoC,EAAA2E,IAAA9B,MACA7C,GAAA2E,IAAAvE,MACA2E,KAAAxF,EACA6E,IAAApE,EAAAoE,IAAAxG,GACAoB,UAEAgB,EAAA4E,QAAAC,SACAC,KAAAvF,EACA4D,MAAAnD,EAAAoE,IAAAxG,UASAwH,OAAA,SAAA7G,EAAA8G,GACA,GAAArF,GAAArB,IACAiB,MAAAsF,QACA1D,MAAA,MACAK,QAAA,SAAAtC,GACA,GAAAA,EAAAsD,OAAA,GAEA,WADAjD,MAAAC,MAAA,SAGA,IAAAP,IAAA,CAKA,IAJA+F,EAAArG,KAAAV,QAAA,SAAAgH,GACAA,EAAA3H,QAAA4B,IAAAD,GAAA,KAGAA,EAQAM,KAAAC,MAAA,uBARA,CACA,GAAAqC,IACAvE,MAAA4B,EACAgF,SAAA,EAEAhG,GAAA6B,KAAA8B,GACAlC,EAAAuF,YAAArD,EAAAmD,QAUAG,UAAA,SAAAC,GAEA,GAAAzF,GAAArB,KACAY,EAAA,WACA,GAAAmG,IAAA,EACAC,EAAA,CAWA,OAVA3F,GAAA2E,IAAArG,QAAA,SAAAsH,GACA,OAAA3D,GAAA,EAAA4D,EAAAD,EAAA5G,KAAA6D,OAAuDZ,EAAA4D,EAAO5D,IAAA,CAC9D,GAAA1D,GAAAqH,EAAA5G,KAAAiD,EACA1D,GAAAgG,UACAmB,GAAA,EACAC,QAKAF,EAAA,IAAAE,EAAAD,IAEA,OAAAnG,IAEAuG,cAAA,SAAAvH,EAAA8G,GACA,GAAArF,GAAArB,KACAd,EAAAc,KAAAoH,WAAAxH,EAAAZ,MAAA0H,EAAAjB,KAAA,EAEA,IAAA7F,EAAAgG,QAEA,GAAAvE,EAAAwF,WAAA,IACA,GAAAtD,KACAA,GAAAmD,EAAAjB,KAAA7F,EAAAZ,KACA,IAAAqI,GAAA,WAEA,OADAzG,IAAA,EACA0C,EAAA,EAAA4D,EAAA7F,EAAA4E,QAAA/B,OAAgEZ,EAAA4D,EAAO5D,IAAA,CACvE,GAAAgE,GAAAjG,EAAA4E,QAAA3C,EACA,IAAAoD,EAAAjB,MAAA6B,EAAA9C,MAAA,CACA5D,GAAA,CACA,QAGA,MAAAA,KAEAyG,IACAhG,EAAA4E,QAAAC,SACAC,KAAAO,EAAAN,KACA5B,MAAAkC,EAAAjB,MAGAzF,KAAAC,KAAA,WAAAE,EAAA+E,UAA6DlF,KAAA2F,MAAA,GAAApC,QAG7DrE,aAAA0G,QAAA2B,OAAAvH,KAAAwH,WAAA5H,EAAAZ,MAAA0H,OAIArF,GAAAwF,WAAA,GACA7G,KAAA2F,MAAAhG,QAAA,SAAAC,EAAA0D,GACAA,EAeA1D,EAAAgG,SAAA,GAdAvE,EAAA2E,IAAArG,QAAA,SAAAsH,GACA,GAAArH,EAAAqH,EAAAxB,KAAA,CACA,OAAAlH,GAAA,EAAA2I,EAAA7F,EAAA4E,QAAA/B,OAA4E3F,EAAA2I,EAAO3I,IAAA,CACnF,GAAAgF,GAAAlC,EAAA4E,QAAA1H,EACA,IAAAgF,EAAAiB,QAAAyC,EAAAxB,IAAA,CACApE,EAAA4E,QAAAvE,QAAA6B,EACA,QAGA3D,EAAAqH,EAAAxB,KAAA8B,UAGA3H,EAAAgG,QAAA2B,UAOAvH,KAAAC,KAAA,SAAAf,EAAAD,MAAA,iBAMAuI,WAAA,SAAAxI,EAAA0H,GACA,GAAAT,GAAAjG,KAAAiG,QACArF,IACAqF,GAAAtG,QAAA,SAAAC,GACAA,EAAA4E,QAAAkC,EAAAjB,IACA7E,EAAAhB,EAAA4E,OAAAxF,EAEA,mBAAAI,OAAAqI,UAAAC,SAAApJ,KAAAsB,cACAgB,EAAAhB,EAAA4E,UAAAhB,OAAA5D,cACqB,oBAAAR,OAAAqI,UAAAC,SAAApJ,KAAAsB,cACrBgB,EAAAhB,EAAA4E,OAAArE,EAAA+E,UAAqDtF,cAErDgB,EAAAhB,EAAA4E,OAAA5E,cAAA,KAIAI,KAAA2F,MAAAlE,KAAAb,IAKAwG,WAAA,SAAApI,EAAAyG,GACA,GAAA7E,KASA,OARAZ,MAAA2F,MAAAhG,QAAA,SAAAC,EAAA0D,GACA,GAAAqE,KACA/H,GAAA6F,KAAAzG,IACA2I,EAAA1I,MAAAqE,EACAqE,EAAAzI,QAAAU,EACAgB,EAAAa,KAAAkG,MAGA/G,GAIAgH,aAAA,SAAAhI,EAAA8G,GAEA,GAAA9G,EAAAgG,QACA5F,KAAA6H,QAAAjI,EAAAZ,MAAA0H,OACa,CAGb,GAAAoB,GAAA,WACA,GAAAlH,IAAA,CAOA,OANA8F,GAAArG,KAAAV,QAAA,SAAAC,GACA,GAAAA,EAAAgG,QAEA,YADAhF,GAAA,KAIAA,IAEAkH,GAEA9H,KAAA+H,UAAAnI,EAAAZ,MAAA0H,GAGA1G,KAAAgI,UAAApI,EAAAZ,MAAA0H,KAKAqB,UAAA,SAAA/I,EAAA0H,GACA,GAAArF,GAAArB,KACAd,EAAAc,KAAAoH,WAAApI,EAAA0H,EAAAjB,IACAvG,GAAAS,QAAA,SAAAC,EAAA0D,GACA1D,EAAAV,QAAA0G,SAAA,EAEAvE,EAAApB,KAAA,SAAAL,EAAAX,MAAA,IAAAkB,EAAA+E,UAA+DtF,EAAAV,aAG/D8I,UAAA,SAAAhJ,EAAA0H,GACA,GAAArF,GAAArB,IACAA,MAAAiG,QAAAtG,QAAA,SAAAC,GACAA,EAAA,QAAA8G,EAAAjB,KACApE,EAAA4E,QAAAvE,QAAA9B,KAGAI,KAAA2F,MAAAhG,QAAA,SAAAC,EAAA0D,GACAjC,EAAApB,KAAA,SAAAqD,EAAA,KAAAoD,EAAAjB,IAAA,gBAGAwC,MAAA,SAAAvB,GACA,GAAAwB,IAAA,CACAlI,MAAAiG,QAAAtG,QAAA,SAAAC,GACA8G,EAAAjB,MAAA7F,EAAA,QACAsI,GAAA,KAGAA,GACAlI,KAAAiG,QAAAC,SACAC,KAAAO,EAAAN,KACA5B,MAAAkC,EAAAjB,OAGAoC,QAAA,SAAA7I,EAAA0H,GACA,GAAArF,GAAArB,KACAK,EAAAL,KAAAmI,gBACAC,EAAA/H,EAAA,GACApB,EAAA,WACA,GAAAqE,GAAA,CACA,QAAA+E,KAAAD,GACA9E,GAEA,OAAAA,KAGAtD,MAAAiI,MAAAvB,EACA,IAAA4B,GAAAjH,EAAA2E,IAAA9B,MACA7C,GAAA0E,QAAAvC,OAAAnC,EAAAsE,MAEA,IAAA4C,GAAA,IAAAlH,EAAA2E,IAAAsC,EAAA,GAAAjI,KAAA6D,QAAA,WACA,GAAAtD,IAAA,EACA4H,GAAA,CASA,OARAnH,GAAA2E,IAAAsC,EAAA,GAAAjI,KAAAV,QAAA,SAAAC,GACAA,EAAAgG,UACA4C,IACA5H,GAAA,GAEA4H,GAAA,KAGA5H,IAEA2H,IACAlH,EAAApB,KAAA,YACAI,EAAAV,QAAA,SAAA8I,EAAAnF,GACA,GAAApB,GAAAb,EAAAqH,YAAAD,EAAAxJ,EACAiD,IACAA,EAAA0D,UACA1D,EAAA0D,QAAA2B,QAEAlG,EAAAsE,MAAAlE,KAAAtB,EAAA+E,UAAmDhD,EAAAuG,KAEnDpH,EAAAsE,MAAAlE,KAAAJ,EAAAsH,cAAAF,OAIApI,EAAAV,QAAA,SAAA8I,EAAAnF,GACA,GAAApB,GAAAb,EAAAqH,YAAAD,EAAAxJ,EAAA,EACAiD,GAGAA,EAAA0D,QAAA2B,OAFAlG,EAAAsE,MAAAlE,KAAAJ,EAAAsH,cAAAF,OAcAG,cAAA,WACA,GAAAhI,GACAiI,IAkBA,OAjBA7I,MAAAgG,IAAArG,QAAA,SAAAsH,GACA,GAAAU,KACAV,GAAA5G,KAAAV,QAAA,SAAAC,GACA,GAAA2D,KACAA,GAAA0D,EAAAxB,KAAA7F,EAAAZ,MACAY,EAAAgG,SACA+B,EAAAlG,KAAA8B,KAOAsF,EAAApH,KAAAkG,KAGA/G,EAAAZ,KAAA8I,YAAAD,IAUAV,cAAA,WACA,GAAAvH,MACAwC,EAAApD,KAAA4I,eAQA,OAPAxF,GAAAzD,QAAA,SAAAoJ,GACA,GAAAxF,KACAwF,GAAApJ,QAAA,SAAAC,GACAO,EAAA+E,OAAA3B,EAAA3D,KAEAgB,EAAAa,KAAA8B,KAEA3C,GAEA8H,YAAA,SAAAD,EAAAxJ,GAMA,QAAA+J,GAAA3I,EAAA4I,GACA,GAAAR,MACAjK,EAAAyK,EAAA,EASA,OARA5I,GAAAV,QAAA,SAAAC,GACA,OAAAyI,KAAA7J,GACAoB,EAAAyI,KAAA7J,EAAA6J,IACAI,EAAAhH,KAAA7B,KAIAqJ,EAAAC,QACAT,EAAAvE,OACA+E,EAAA/E,OACA8E,EAAAP,EAAAQ,GAEAR,EAAA,GAGA,KAvBA,GAAA7H,GACAqI,EAAAjJ,KAAAiJ,UAAAR,EAAAxJ,EAEA,OADA2B,GAAAoI,EAAAhJ,KAAA+F,KAAAkD,IAgCAA,UAAA,SAAA1F,EAAAtE,GAEA,OADA2B,MACA0C,EAAA,EAA2BA,EAAArE,EAAA,EAAeqE,IAAA,CAC1C,GAAAqE,MACAU,EAAArI,KAAAyF,IAAAnC,EACAqE,GAAAU,GAAA9E,EAAA8E,GACAzH,EAAAa,KAAAkG,GAEA,MAAA/G,IAQA+H,cAAA,SAAApF,GACA,GAAA0C,GAAAjG,KAAAiG,QACArF,IAcA,OAbAqF,GAAAtG,QAAA,SAAAC,GACA2D,EAAA3D,EAAA4E,OACA5D,EAAAhB,EAAA4E,OAAAjB,EAAA3D,EAAA4E,OAEA,mBAAApF,OAAAqI,UAAAC,SAAApJ,KAAAsB,cACAgB,EAAAhB,EAAA4E,UAAAhB,OAAA5D,cACqB,oBAAAR,OAAAqI,UAAAC,SAAApJ,KAAAsB,cACrBgB,EAAAhB,EAAA4E,OAAArE,EAAA+E,UAAqDtF,cAErDgB,EAAAhB,EAAA4E,OAAA5E,cAAA,KAIAgB,GAGAgG,YAAA,SAAAhH,EAAA8G,GACA,GAAArF,GAAArB,KACAmJ,EAAA,IAAAnJ,KAAAgG,IAAA9B,QAAA,WACA,GAAAjF,GAAA,CACAoC,GAAA2E,IAAArG,QAAA,SAAAgH,GACA,OAAArD,GAAA,EAAA4D,EAAAP,EAAAtG,KAAA6D,OAA2DZ,EAAA4D,EAAO5D,IAAA,CAClE,GAAAmF,GAAA9B,EAAAtG,KAAAiD,EACA,IAAAmF,EAAA7C,QAAA,CACA3G,GACA,UAKA,IAAAuJ,IAAA,CAOA,OANA9B,GAAArG,KAAAV,QAAA,SAAAgI,GACAA,EAAA/B,UACA4C,GAAA,KAIAA,EAAAvJ,GAAA,MAAAA,IAEAkK,GACAnJ,KAAAmH,cAAAvH,EAAA8G,GAEA1G,KAAA4H,aAAAhI,EAAA8G,IAIAoC,YAAA,SAAAM,GAEA,OADAC,GAAAD,EAAA,GACA9F,EAAA,EAAA4D,EAAAkC,EAAAlF,OAAiDZ,EAAA4D,EAAO5D,IACxD+F,EAAArJ,KAAAsJ,WAAAD,EAAAD,EAAA9F,GAEA,OAAA+F,IAEAC,WAAA,SAAAD,EAAAE,GAEA,OADA3I,MACA0C,EAAA,EAAA4D,EAAAmC,EAAAnF,OAA6CZ,EAAA4D,EAAO5D,IAEpD,OAAA/E,IADA8K,EAAA/F,GACA,GAAAkG,EAAAD,EAAArF,OAAmD3F,EAAAiL,EAAOjL,IAC1DqC,EAAAa,MAAA4H,EAAA/F,IAAAE,QAAA+F,EAAAhL,KAGA,OAAAqC,KAGA0E,YACAL,UACAM,aH8DMkE,GACA,SAAStL,EAAQD,GI72BvB,QAAAwL,KACA,SAAAC,OAAA,mCAEA,QAAAC,KACA,SAAAD,OAAA,qCAsBA,QAAAE,GAAAC,GACA,GAAAC,IAAAC,WAEA,MAAAA,YAAAF,EAAA,EAGA,KAAAC,IAAAL,IAAAK,IAAAC,WAEA,MADAD,GAAAC,WACAA,WAAAF,EAAA,EAEA,KAEA,MAAAC,GAAAD,EAAA,GACK,MAAA7F,GACL,IAEA,MAAA8F,GAAAzL,KAAA,KAAAwL,EAAA,GACS,MAAA7F,GAET,MAAA8F,GAAAzL,KAAA0B,KAAA8J,EAAA,KAMA,QAAAG,GAAAC,GACA,GAAAC,IAAAC,aAEA,MAAAA,cAAAF,EAGA,KAAAC,IAAAP,IAAAO,IAAAC,aAEA,MADAD,GAAAC,aACAA,aAAAF,EAEA,KAEA,MAAAC,GAAAD,GACK,MAAAjG,GACL,IAEA,MAAAkG,GAAA7L,KAAA,KAAA4L,GACS,MAAAjG,GAGT,MAAAkG,GAAA7L,KAAA0B,KAAAkK,KAYA,QAAAG,KACAC,GAAAC,IAGAD,GAAA,EACAC,EAAArG,OACAsG,EAAAD,EAAA/G,OAAAgH,GAEAC,KAEAD,EAAAtG,QACAwG,KAIA,QAAAA,KACA,IAAAJ,EAAA,CAGA,GAAAK,GAAAd,EAAAQ,EACAC,IAAA,CAGA,KADA,GAAAhC,GAAAkC,EAAAtG,OACAoE,GAAA,CAGA,IAFAiC,EAAAC,EACAA,OACAC,EAAAnC,GACAiC,GACAA,EAAAE,GAAAG,KAGAH,MACAnC,EAAAkC,EAAAtG,OAEAqG,EAAA,KACAD,GAAA,EACAL,EAAAU,IAiBA,QAAAE,GAAAf,EAAA1G,GACApD,KAAA8J,MACA9J,KAAAoD,QAYA,QAAA0H,MAhKA,GAOAf,GACAI,EARAY,EAAA5M,EAAAD,YAgBA,WACA,IAEA6L,EADA,kBAAAC,YACAA,WAEAN,EAEK,MAAAzF,GACL8F,EAAAL,EAEA,IAEAS,EADA,kBAAAC,cACAA,aAEAR,EAEK,MAAA3F,GACLkG,EAAAP,KAuDA,IAEAW,GAFAC,KACAF,GAAA,EAEAG,IAyCAM,GAAAC,SAAA,SAAAlB,GACA,GAAAmB,GAAA,GAAAC,OAAAC,UAAAjH,OAAA,EACA,IAAAiH,UAAAjH,OAAA,EACA,OAAAZ,GAAA,EAAuBA,EAAA6H,UAAAjH,OAAsBZ,IAC7C2H,EAAA3H,EAAA,GAAA6H,UAAA7H,EAGAkH,GAAA/I,KAAA,GAAAoJ,GAAAf,EAAAmB,IACA,IAAAT,EAAAtG,QAAAoG,GACAT,EAAAa,IASAG,EAAApD,UAAAmD,IAAA,WACA5K,KAAA8J,IAAAsB,MAAA,KAAApL,KAAAoD,QAEA2H,EAAAlI,MAAA,UACAkI,EAAAM,SAAA,EACAN,EAAAO,OACAP,EAAAQ,QACAR,EAAAS,QAAA,GACAT,EAAAU,YAIAV,EAAAzK,GAAAwK,EACAC,EAAAW,YAAAZ,EACAC,EAAAY,KAAAb,EACAC,EAAAa,IAAAd,EACAC,EAAAc,eAAAf,EACAC,EAAAe,mBAAAhB,EACAC,EAAAgB,KAAAjB,EAEAC,EAAAiB,QAAA,SAAA7F,GACA,SAAAwD,OAAA,qCAGAoB,EAAAkB,IAAA,WAA2B,WAC3BlB,EAAAmB,MAAA,SAAAC,GACA,SAAAxC,OAAA,mCAEAoB,EAAAqB,MAAA,WAA4B,WJ+3BtBC,GACA,SAASlO,EAAQD,EAASH,IKnjChC,SAAAuO,EAAAvB;;;;;AAKA,YAEA,SAAAwB,GAAAjF,EAAA7B,EAAA/E,GACA,GAAA8L,EAAAlF,EAAA7B,GAEA,YADA6B,EAAA7B,GAAA/E,EAGA,IAAA4G,EAAAmF,OAEA,WADAF,GAAAjF,EAAAoF,MAAAjH,EAAA/E,EAGA,IAAAiM,GAAArF,EAAAsF,MACA,KAAAD,EAEA,YADArF,EAAA7B,GAAA/E,EAKA,IAFAiM,EAAAE,QAAApH,EAAA/E,GACAiM,EAAAG,IAAAC,SACAJ,EAAAK,IAEA,IADA,GAAA1J,GAAAqJ,EAAAK,IAAA9I,OACAZ,KAAA,CACA,GAAA2J,GAAAN,EAAAK,IAAA1J,EACA2J,GAAAC,OAAAzH,GACAwH,EAAAE,UAGA,MAAAzM,GAUA,QAAA0M,GAAA9F,EAAA7B,GACA,GAAA+G,EAAAlF,EAAA7B,GAAA,OAGA6B,GAAA7B,EACA,IAAAkH,GAAArF,EAAAsF,MACA,KAAAD,EAKA,YAJArF,EAAAmF,eACAnF,GAAAoF,MAAAjH,GACA6B,EAAA6F,WAKA,IADAR,EAAAG,IAAAC,SACAJ,EAAAK,IAEA,IADA,GAAA1J,GAAAqJ,EAAAK,IAAA9I,OACAZ,KAAA,CACA,GAAA2J,GAAAN,EAAAK,IAAA1J,EACA2J,GAAAI,SAAA5H,GACAwH,EAAAE,YAcA,QAAAX,GAAAlF,EAAA7B,GACA,MAAA6H,IAAAhP,KAAAgJ,EAAA7B,GAYA,QAAA8H,GAAAC,GACA,MAAAC,IAAAC,KAAAF,GAUA,QAAAG,GAAAC,GACA,GAAApP,IAAAoP,EAAA,IAAAC,WAAA,EACA,aAAArP,GAAA,KAAAA,EAWA,QAAAsP,GAAA9O,GACA,aAAAA,EAAA,GAAAA,EAAA0I,WAWA,QAAAqG,GAAA/O,GACA,mBAAAA,GACA,MAAAA,EAEA,IAAAgP,GAAAC,OAAAjP,EACA,OAAAkP,OAAAF,GAAAhP,EAAAgP,EAWA,QAAAG,GAAAnP,GACA,eAAAA,GAAA,UAAAA,KAUA,QAAAoP,GAAAR,GACA,GAAAS,GAAAT,EAAAC,WAAA,GACAS,EAAAV,EAAAC,WAAAD,EAAA1J,OAAA,EACA,OAAAmK,KAAAC,GAAA,KAAAD,GAAA,KAAAA,EAAAT,IAAAW,MAAA,MAYA,QAAAC,GAAAZ,GACA,MAAAA,GAAAa,QAAAC,GAAAC,GAGA,QAAAA,GAAAC,EAAApQ,GACA,MAAAA,KAAAqQ,cAAA,GAYA,QAAAC,GAAAlB,GACA,MAAAA,GAAAa,QAAAM,GAAA,SAAAC,cAiBA,QAAAC,GAAArB,GACA,MAAAA,GAAAa,QAAAS,GAAAP,GAWA,QAAAQ,GAAAC,EAAAC,GACA,gBAAAhB,GACA,GAAAiB,GAAAnE,UAAAjH,MACA,OAAAoL,KAAA,EAAAF,EAAAhE,MAAAiE,EAAAlE,WAAAiE,EAAA9Q,KAAA+Q,EAAAhB,GAAAe,EAAA9Q,KAAA+Q,IAYA,QAAAE,GAAAC,EAAAC,GACAA,KAAA,CAGA,KAFA,GAAAnM,GAAAkM,EAAAtL,OAAAuL,EACAC,EAAA,GAAAxE,OAAA5H,GACAA,KACAoM,EAAApM,GAAAkM,EAAAlM,EAAAmM,EAEA,OAAAC,GAUA,QAAAxK,GAAAyK,EAAAC,GAGA,IAFA,GAAA7G,GAAA3J,OAAA2J,KAAA6G,GACAtM,EAAAyF,EAAA7E,OACAZ,KACAqM,EAAA5G,EAAAzF,IAAAsM,EAAA7G,EAAAzF,GAEA,OAAAqM,GAYA,QAAAE,GAAAvI,GACA,cAAAA,GAAA,gBAAAA,GAcA,QAAAwI,GAAAxI,GACA,MAAAI,IAAApJ,KAAAgJ,KAAAyI,GAqBA,QAAAC,GAAA1I,EAAA7B,EAAA/E,EAAAuP,GACA7Q,OAAA8Q,eAAA5I,EAAA7B,GACAzG,MAAA0B,EACAuP,eACAE,UAAA,EACAC,cAAA,IAaA,QAAAC,GAAAC,EAAAC,GACA,GAAA5F,GAAAM,EAAAuF,EAAAC,EAAA7P,EACA8P,EAAA,QAAAA,KACA,GAAAC,GAAAC,KAAAC,MAAAJ,CACAE,GAAAJ,GAAAI,GAAA,EACAhG,EAAAX,WAAA0G,EAAAH,EAAAI,IAEAhG,EAAA,KACA/J,EAAA0P,EAAAlF,MAAAoF,EAAAvF,GACAN,IAAA6F,EAAAvF,EAAA,OAGA,mBAOA,MANAuF,GAAAxQ,KACAiL,EAAAE,UACAsF,EAAAG,KAAAC,MACAlG,IACAA,EAAAX,WAAA0G,EAAAH,IAEA3P,GAYA,QAAAkQ,GAAAC,EAAAzJ,GAEA,IADA,GAAAhE,GAAAyN,EAAA7M,OACAZ,KACA,GAAAyN,EAAAzN,KAAAgE,EAAA,MAAAhE,EAEA,UAUA,QAAA0N,GAAA5B,GACA,GAAA6B,GAAA,QAAAA,KACA,IAAAA,EAAAC,UACA,MAAA9B,GAAAhE,MAAApL,KAAAmL,WAMA,OAHA8F,GAAAjO,OAAA,WACAiO,EAAAC,WAAA,GAEAD,EAYA,QAAAE,GAAA9C,EAAAC,GAEA,MAAAD,IAAAC,MAAAuB,EAAAxB,KAAAwB,EAAAvB,KAAA9N,KAAA4Q,UAAA/C,KAAA7N,KAAA4Q,UAAA9C,GAiHA,QAAA+C,GAAA/K,GACAtG,KAAA+D,KAAA,EACA/D,KAAAsG,QACAtG,KAAAsR,KAAAtR,KAAAuR,KAAAhK,OACAvH,KAAAwR,QAAApS,OAAAqS,OAAA,MAyHA,QAAAC,KACA,GACAC,GADAnE,EAAAI,GAAAW,MAAAqD,GAAAtO,IAAAuO,MAEA,IAAArE,EAAA,CACAmE,IACA,IAAAG,GAAAtE,EAAAuE,MAAAC,GACAL,GAAAxL,KAAA2L,EAAA,GACAA,EAAA5N,OAAA,IACAyN,EAAA1G,KAAA6G,EAAAvD,MAAA,GAAAzI,IAAAmM,IAGAN,IACAxF,GAAA+F,QAAA/F,GAAA+F,aAAAzQ,KAAAkQ,GAEAC,GAAAtO,GAAA,EAUA,QAAA2O,GAAAE,GACA,GAAAC,GAAA1E,KAAAyE,GACA,OACAnT,MAAA+O,EAAAoE,GACAE,SAAA,EAGA,IAAAC,GAAAlE,EAAA+D,GACAE,EAAAC,IAAAH,CACA,QACAnT,MAAAqT,EAAAF,EAAAG,EACAD,WAuBA,QAAAE,GAAAC,GACA,GAAAC,GAAAC,GAAAC,IAAAH,EACA,IAAAC,EACA,MAAAA,EAUA,KANA7E,GAAA4E,EACAI,GAAAC,IAAA,EACAC,GAAAC,GAAAC,GAAA,EACApB,GAAA,EACAzF,MAEA7I,GAAA,EAAAgM,GAAA1B,GAAA1J,OAA6BZ,GAAAgM,GAAOhM,KAGpC,GAFA2P,GAAAzU,GACAA,GAAAoP,GAAAC,WAAAvK,IACAsP,GAEA,KAAApU,IAAA,KAAAyU,KAAAL,YACK,IAAAC,GAEL,KAAArU,IAAA,KAAAyU,KAAAJ,YACK,UAAArU,IACL,MAAAoP,GAAAC,WAAAvK,GAAA,UAAAsK,GAAAC,WAAAvK,GAAA,GACA,MAAA6I,GAAA+G,YAEAtB,GAAAtO,GAAA,EACA6I,GAAA+G,WAAAtF,GAAAW,MAAA,EAAAjL,IAAAuO,QAGAH,QAGA,QAAAlT,IACA,QACAqU,IAAA,CAA0B,MAC1B,SACAD,IAAA,CAA0B,MAC1B,SACAI,IAAkB,MAClB,SACAA,IAAkB,MAClB,SACAD,IAAmB,MACnB,SACAA,IAAmB,MACnB,UACAD,IAAkB,MAClB,UACAA,KAYA,MAPA,OAAA3G,GAAA+G,WACA/G,GAAA+G,WAAAtF,GAAAW,MAAA,EAAAjL,IAAAuO,OACG,IAAAD,IACHF,IAGAgB,GAAAS,IAAAX,EAAArG,IACAA,GAkBA,QAAAiH,GAAAxF,GACA,MAAAA,GAAAa,QAAA4E,GAAA,QAGA,QAAAC,KACA,GAAAC,GAAAH,EAAAI,GAAAC,WAAA,IACAC,EAAAN,EAAAI,GAAAC,WAAA,IACAE,EAAAP,EAAAI,GAAAI,iBAAA,IACAC,EAAAT,EAAAI,GAAAI,iBAAA,GACAE,IAAA,GAAAC,QAAAJ,EAAA,gBAAAE,EAAA,IAAAN,EAAA,gBAAAG,EAAA,KACAM,GAAA,GAAAD,QAAA,IAAAJ,EAAA,gBAAAE,EAAA,KAEAI,GAAA,GAAA5C,GAAA,KAcA,QAAA6C,GAAA9N,GACA6N,IACAX,GAEA,IAAAb,GAAAwB,GAAAtB,IAAAvM,EACA,IAAAqM,EACA,MAAAA,EAEA,KAAAqB,GAAApG,KAAAtH,GACA,WAMA,KAJA,GAEA2L,GAAA9S,EAAAkD,EAAAnD,EAAAmV,EAAAC,EAFAtC,KACAuC,EAAAP,GAAAO,UAAA,EAGAtC,EAAA+B,GAAAQ,KAAAlO,IAEAnH,EAAA8S,EAAA9S,MAEAA,EAAAoV,GACAvC,EAAArQ,MACAzC,MAAAoH,EAAAmI,MAAA8F,EAAApV,KAIAkD,EAAA6R,GAAAtG,KAAAqE,EAAA,IACA/S,EAAAmD,EAAA4P,EAAA,GAAAA,EAAA,GACAoC,EAAAnV,EAAA6O,WAAA,GACAuG,EAAA,KAAAD,EACAnV,EAAAoV,EAAApV,EAAAuP,MAAA,GAAAvP,EACA8S,EAAArQ,MACA8S,KAAA,EACAvV,QAAA6S,OACA1P,OACAiS,YAEAC,EAAApV,EAAA8S,EAAA,GAAA7N,MAQA,OANAmQ,GAAAjO,EAAAlC,QACA4N,EAAArQ,MACAzC,MAAAoH,EAAAmI,MAAA8F,KAGAJ,GAAAd,IAAA/M,EAAA0L,GACAA,EAaA,QAAA0C,GAAA1C,EAAA7E,GACA,MAAA6E,GAAA5N,OAAA,EACA4N,EAAAhM,IAAA,SAAA2O,GACA,MAAAC,GAAAD,EAAAxH,KACK0H,KAAA,KAELD,EAAA5C,EAAA,GAAA7E,GAAA,GAaA,QAAAyH,GAAAD,EAAAxH,EAAA2H,GACA,MAAAH,GAAAF,IAAAE,EAAAL,SAAAnH,EAAA,IAAAA,EAAA4H,MAAAJ,EAAAzV,OAAA,IAAA8V,EAAAL,EAAAzV,MAAA4V,GAAA,IAAAH,EAAAzV,MAAA,IAiBA,QAAA8V,GAAAtH,EAAAoH,GACA,GAAAG,GAAArH,KAAAF,GAEG,CACH,GAAArB,GAAAoG,EAAA/E,EACA,OAAArB,GAAA+F,QAGA,sBAAA/F,EAAA+G,WACA,SACA1S,KAAA4Q,UAAAjF,EAAA+F,SACA,UALA,IAAA1E,EAAA,IAJA,MAAAoH,GAAApH,EAAA,IAAAA,EAAA,IA2JA,QAAAwH,GAAAC,EAAAC,EAAAjI,EAAAgE,GACAkE,EAAAF,EAAA,aACAC,EAAAE,YAAAH,IACGhI,EAAAgE,GAYH,QAAAoE,GAAAJ,EAAAC,EAAAjI,EAAAgE,GACAkE,EAAAF,EAAA,aACAK,EAAAL,EAAAC,IACGjI,EAAAgE,GAWH,QAAAsE,GAAAN,EAAAhI,EAAAgE,GACAkE,EAAAF,KAAA,WACAO,EAAAP,IACGhI,EAAAgE,GAeH,QAAAkE,GAAAF,EAAAQ,EAAAC,EAAAzI,EAAAgE,GACA,GAAA0E,GAAAV,EAAAW,SACA,KAAAD,IAGAA,EAAAE,QAAAC,KAEA7I,EAAA8I,aAIA9I,EAAAvH,UAAAuH,EAAAvH,QAAAqQ,YAGA,MAFAL,UACAzE,OAGA,IAAA+E,GAAAP,EAAA,iBACAE,GAAAK,GAAAN,EAAAzE,GAiBA,QAAAgF,GAAAhB,GACA,mBAAAA,GAAA,CACA,GAAAiB,GAAAjB,CACAA,GAAA7U,SAAA+V,cAAAlB,GACAA,GACA,eAAAlK,EAAAO,IAAA8K,UAAAC,GAAA,wBAAAH,GAGA,MAAAjB,GAeA,QAAAqB,GAAAC,GACA,IAAAA,EAAA,QACA,IAAAC,GAAAD,EAAAE,cAAAC,gBACAC,EAAAJ,EAAAK,UACA,OAAAJ,KAAAD,GAAAC,IAAAG,SAAA,IAAAA,EAAAE,WAAAL,EAAAM,SAAAH,IAUA,QAAAI,GAAAR,EAAAS,GACA,GAAAtW,GAAA6V,EAAAU,aAAAD,EAIA,OAHA,QAAAtW,GACA6V,EAAAW,gBAAAF,GAEAtW,EAWA,QAAAyW,GAAAZ,EAAApQ,GACA,GAAAzF,GAAAqW,EAAAR,EAAA,IAAApQ,EAIA,OAHA,QAAAzF,IACAA,EAAAqW,EAAAR,EAAA,UAAApQ,IAEAzF,EAWA,QAAA0W,GAAAb,EAAApQ,GACA,MAAAoQ,GAAAc,aAAAlR,IAAAoQ,EAAAc,aAAA,IAAAlR,IAAAoQ,EAAAc,aAAA,UAAAlR,GAUA,QAAAmP,GAAAL,EAAAC,GACAA,EAAA0B,WAAAU,aAAArC,EAAAC,GAUA,QAAAqC,GAAAtC,EAAAC,GACAA,EAAAsC,YACAlC,EAAAL,EAAAC,EAAAsC,aAEAtC,EAAA0B,WAAAxB,YAAAH,GAUA,QAAAO,GAAAP,GACAA,EAAA2B,WAAAa,YAAAxC,GAUA,QAAAyC,GAAAzC,EAAAC,GACAA,EAAAyC,WACArC,EAAAL,EAAAC,EAAAyC,YAEAzC,EAAAE,YAAAH,GAWA,QAAAxG,GAAAyG,EAAAD,GACA,GAAA0B,GAAAzB,EAAA0B,UACAD,IACAA,EAAAiB,aAAA3C,EAAAC,GAaA,QAAA5U,GAAA2U,EAAA4C,EAAA5G,EAAA6G,GACA7C,EAAA8C,iBAAAF,EAAA5G,EAAA6G,GAWA,QAAAlM,GAAAqJ,EAAA4C,EAAA5G,GACAgE,EAAA+C,oBAAAH,EAAA5G,GAWA,QAAAgH,GAAAhD,GACA,GAAAiD,GAAAjD,EAAAkD,SAIA,OAHA,gBAAAD,KACAA,IAAAE,SAAA,IAEAF,EAaA,QAAAG,GAAApD,EAAAqD,GAEAC,KAAA,OAAA7K,KAAAuH,EAAAuD,cACAvD,EAAAkD,UAAAG,EAEArD,EAAAwD,aAAA,QAAAH,GAWA,QAAAI,IAAAzD,EAAAqD,GACA,GAAArD,EAAA0D,UACA1D,EAAA0D,UAAAC,IAAAN,OACG,CACH,GAAAO,GAAA,IAAAZ,EAAAhD,GAAA,GACA4D,GAAA/H,QAAA,IAAAwH,EAAA,QACAD,EAAApD,GAAA4D,EAAAP,GAAAzG,SAYA,QAAAiH,IAAA7D,EAAAqD,GACA,GAAArD,EAAA0D,UACA1D,EAAA0D,UAAAnD,OAAA8C,OACG,CAGH,IAFA,GAAAO,GAAA,IAAAZ,EAAAhD,GAAA,IACA8D,EAAA,IAAAT,EAAA,IACAO,EAAA/H,QAAAiI,IAAA,GACAF,IAAApK,QAAAsK,EAAA,IAEAV,GAAApD,EAAA4D,EAAAhH,QAEAoD,EAAAkD,WACAlD,EAAAiC,gBAAA,SAaA,QAAA8B,IAAA/D,EAAAgE,GACA,GAAAC,GACAC,CAKA,IAHAC,GAAAnE,IAAAoE,GAAApE,EAAAqE,WACArE,IAAAqE,SAEArE,EAAAsE,gBAIA,IAHAC,GAAAvE,GACAkE,EAAAF,EAAA7Y,SAAAqZ,yBAAArZ,SAAAsZ,cAAA,OAEAR,EAAAjE,EAAA0C,YAEAwB,EAAA/D,YAAA8D,EAGA,OAAAC,GAUA,QAAAK,IAAAjD,GAGA,IAFA,GAAA2C,GAEAA,EAAA3C,EAAAoB,WAAAgC,GAAAT,IACA3C,EAAAkB,YAAAyB,EAEA,MAAAA,EAAA3C,EAAAqD,UAAAD,GAAAT,IACA3C,EAAAkB,YAAAyB,GAKA,QAAAS,IAAApD,GACA,MAAAA,KAAA,IAAAA,EAAAM,WAAAN,EAAAlW,KAAAwR,QAAA,IAAA0E,EAAAM,UAWA,QAAAuC,IAAAnE,GACA,MAAAA,GAAA4E,SAAA,aAAA5E,EAAA4E,QAAA7K,cAqBA,QAAA8K,IAAAR,EAAAS,GACA,GAAAC,GAAAxG,GAAAyG,MAAA7Z,SAAA8Z,cAAAZ,GAAAlZ,SAAA+Z,eAAAJ,EAAA,OAEA,OADAC,GAAAI,YAAA,EACAJ,EAYA,QAAAK,IAAA9D,GACA,GAAAA,EAAA+D,gBAEA,OADAC,GAAAhE,EAAAiE,WACAlX,EAAA,EAAAgM,EAAAiL,EAAArW,OAAqCZ,EAAAgM,EAAOhM,IAAA,CAC5C,GAAA6C,GAAAoU,EAAAjX,GAAA6C,IACA,IAAAsU,GAAA/M,KAAAvH,GACA,MAAAqI,GAAArI,EAAAsI,QAAAgM,GAAA,MAcA,QAAAC,IAAAnE,EAAAoE,EAAAjF,GAEA,IADA,GAAAkF,GACArE,IAAAoE,GACAC,EAAArE,EAAAiB,YACA9B,EAAAa,GACAA,EAAAqE,CAEAlF,GAAAiF,GAeA,QAAAE,IAAApL,EAAAkL,EAAA1N,EAAA6N,EAAA7J,GASA,QAAA8J,KAEA,GADAC,IACA/Y,GAAA+Y,GAAAC,EAAA/W,OAAA,CACA,OAAAZ,GAAA,EAAqBA,EAAA2X,EAAA/W,OAAkBZ,IACvCwX,EAAA1F,YAAA6F,EAAA3X,GAEA2N,SAdA,GAAAhP,IAAA,EACA+Y,EAAA,EACAC,IACAP,IAAAjL,EAAAkL,EAAA,SAAApE,GACAA,IAAAoE,IAAA1Y,GAAA,GACAgZ,EAAAxZ,KAAA8U,GACAhB,EAAAgB,EAAAtJ,EAAA8N,KAoBA,QAAA1B,IAAA9C,GACA,MAAAA,IAAA,KAAAA,EAAAM,SAWA,QAAAqE,IAAAjG,GACA,GAAAA,EAAAkG,UACA,MAAAlG,GAAAkG,SAEA,IAAAC,GAAAhb,SAAAsZ,cAAA,MAEA,OADA0B,GAAAhG,YAAAH,EAAAoG,WAAA,IACAD,EAAAjX,UAiCA,QAAAmX,IAAArG,EAAAsG,GACA,GAAAhH,GAAAU,EAAA4E,QAAA7K,cACAwM,EAAAvG,EAAAqF,eACA,IAAAmB,GAAA/N,KAAA6G,IAAAmH,GAAAhO,KAAA6G,IAgBG,GAAAiH,EACH,MAAAG,IAAA1G,EAAAsG,OAjBA,CACA,GAAAK,GAAAL,EAAA,aAAAhH,GACA,OAAcnW,GAAAmW,EAEd,IAAAsH,GAAAL,GAAAG,GAAA1G,EAAAsG,EACA,IAAAM,EACA,MAAAA,EACO,mBAAA9Q,EAAAO,IAAA8K,SAAA,CACP,GAAA0F,GAAAP,EAAAQ,mBAAAR,EAAAQ,kBAAAxH,EACAuH,GACAzF,GAAA,4BAAA9B,EAAA,qBAAAuH,EAAA,yEACSE,GAAA/G,EAAAV,IACT8B,GAAA,4BAAA9B,EAAA,qHAiBA,QAAAoH,IAAA1G,EAAAsG,GAEA,GAAA/N,GAAAyH,EAAAgC,aAAA,KACA,UAAAzJ,GACA,GAAAoO,GAAAL,EAAA,aAAA/N,GAEA,MADAyH,GAAAiC,gBAAA,OACc9Y,GAAAoP,OAId,IADAA,EAAA2J,EAAAlC,EAAA,MACA,MAAAzH,EACA,OAAcpP,GAAAoP,EAAA6E,SAAA,GAuBd,QAAA4J,IAAAtM,EAAAC,GACA,GAAAnK,GAAAyW,EAAAC,CACA,KAAA1W,IAAAmK,GACAsM,EAAAvM,EAAAlK,GACA0W,EAAAvM,EAAAnK,GACA+G,EAAAmD,EAAAlK,GAEKoK,EAAAqM,IAAArM,EAAAsM,IACLF,GAAAC,EAAAC,GAFA5P,EAAAoD,EAAAlK,EAAA0W,EAKA,OAAAxM,GAwEA,QAAAyM,IAAAC,EAAAC,GACA,GAAApa,GAAA9C,OAAAqS,OAAA4K,GAAA,KACA,OAAAC,GAAApX,EAAAhD,EAAAqa,GAAAD,IAAApa,EA0DA,QAAAsa,IAAAjB,GACA,GAAAA,EAAAjW,WAAA,CACA,GAEA0K,GAFA1K,EAAAiW,EAAAjW,WAAAiX,GAAAhB,EAAAjW,YACAmX,EAAArd,OAAA2J,KAAAzD,EAEA,mBAAAyF,EAAAO,IAAA8K,SACA,GAAAtQ,GAAAyV,EAAAQ,oBAEA,QAAAzY,GAAA,EAAAgM,EAAAmN,EAAAvY,OAAmCZ,EAAAgM,EAAOhM,IAAA,CAC1C,GAAAmC,GAAAgX,EAAAnZ,EACAmY,IAAA/N,KAAAjI,IAAAiW,GAAAhO,KAAAjI,GACA,eAAAsF,EAAAO,IAAA8K,UAAAC,GAAA,kEAAA5Q,IAKA,eAAAsF,EAAAO,IAAA8K,WACAtQ,EAAAL,EAAAgJ,QAAA,SAAAO,eAAAF,EAAArJ,IAEAuK,EAAA1K,EAAAG,GACAqK,EAAAE,KACA1K,EAAAG,GAAA7G,GAAAsG,OAAA8K,OAaA,QAAA0M,IAAAnB,GACA,GACAjY,GAAA5C,EADA3B,EAAAwc,EAAAxc,KAEA,IAAA4d,GAAA5d,GAGA,IAFAwc,EAAAxc,SACAuE,EAAAvE,EAAAmF,OACAZ,KACA5C,EAAA3B,EAAAuE,GACA,gBAAA5C,GACA6a,EAAAxc,MAAA2B,GAAA,KACOA,EAAAyF,OACPoV,EAAAxc,MAAA2B,EAAAyF,MAAAzF,OAGG,IAAAoP,EAAA/Q,GAAA,CACH,GAAAgK,GAAA3J,OAAA2J,KAAAhK,EAEA,KADAuE,EAAAyF,EAAA7E,OACAZ,KACA5C,EAAA3B,EAAAgK,EAAAzF,IACA,kBAAA5C,KACA3B,EAAAgK,EAAAzF,KAA0BnE,KAAAuB,KAc1B,QAAA6b,IAAAK,GACA,GAAAD,GAAAC,GAAA,CAIA,IAHA,GAEAC,GAFA3a,KACAoB,EAAAsZ,EAAA1Y,OAEAZ,KAAA,CACAuZ,EAAAD,EAAAtZ,EACA,IAAAlF,GAAA,kBAAAye,KAAAtB,SAAAsB,EAAAtB,QAAApV,MAAA0W,EAAAze,GAAAye,EAAA1W,MAAA0W,EAAAze,EACAA,GAGA8D,EAAA9D,GAAAye,EAFA,eAAA9R,EAAAO,IAAA8K,UAAAC,GAAA,4DAKA,MAAAnU,GAEA,MAAA0a,GAaA,QAAAE,IAAAnG,EAAAuC,EAAAjM,GA4BA,QAAA8P,GAAAtX,GACA,GAAAuX,GAAAC,GAAAxX,IAAAyX,EACA3B,GAAA9V,GAAAuX,EAAArG,EAAAlR,GAAAyT,EAAAzT,GAAAwH,EAAAxH,GA7BA+W,GAAAtD,GACAwD,GAAAxD,GACA,eAAAnO,EAAAO,IAAA8K,UACA8C,EAAAiE,YAAAlQ,GACAoJ,GAAA,yDAGA,IACA5Q,GADA8V,IAKA,IAHArC,EAAA,aACAvC,EAAA,kBAAAuC,GAAA,WAAA4D,GAAAnG,EAAAuC,EAAA,WAAAqC,QAAAtO,GAAA6P,GAAAnG,EAAAuC,EAAA,WAAAjM,IAEAiM,EAAAkE,OACA,OAAA9Z,GAAA,EAAAgM,EAAA4J,EAAAkE,OAAAlZ,OAA4CZ,EAAAgM,EAAOhM,IAAA,CACnD,GAAA+Z,GAAAnE,EAAAkE,OAAA9Z,GACAga,EAAAD,EAAA5V,oBAAA7I,IAAAye,EAAA9B,QAAA8B,CACA1G,GAAAmG,GAAAnG,EAAA2G,EAAArQ,GAGA,IAAAxH,IAAAkR,GACAoG,EAAAtX,EAEA,KAAAA,IAAAyT,GACA1M,EAAAmK,EAAAlR,IACAsX,EAAAtX,EAOA,OAAA8V,GAeA,QAAAK,IAAAL,EAAApc,EAAAf,EAAAmf,GAEA,mBAAAnf,GAAA,CAGA,GACAof,GADAZ,EAAArB,EAAApc,GAEA+C,EAAA0a,EAAAxe,IAEAwe,EAAAY,EAAAhP,EAAApQ,KAEAwe,EAAAY,EAAAC,OAAA,GAAA5O,cAAA2O,EAAAjP,MAAA,GAIA,OAHA,eAAAxD,EAAAO,IAAA8K,UAAAmH,IAAArb,GACAmU,GAAA,qBAAAlX,EAAAoP,MAAA,WAAAnQ,EAAAmd,GAEArZ,GAWA,QAAAwb,MACA1d,KAAA5B,GAAAuf,KACA3d,KAAA4d,QAoIA,QAAAC,IAAAzO,GACA0O,IAAA,EACA1O,IACA0O,IAAA,EAaA,QAAAC,IAAA/e,GAIA,GAHAgB,KAAAhB,QACAgB,KAAA8M,IAAA,GAAA4Q,IACA1N,EAAAhR,EAAA,SAAAgB,MACA2c,GAAA3d,GAAA,CACA,GAAAgf,GAAAC,GAAAC,GAAAC,EACAH,GAAAhf,EAAAof,GAAAC,IACAre,KAAAse,aAAAtf,OAEAgB,MAAAue,KAAAvf,GA+EA,QAAAkf,IAAAhJ,EAAAsJ,GAEAtJ,EAAAuJ,UAAAD,EAYA,QAAAL,IAAAjJ,EAAAsJ,EAAAzV,GACA,OAAAzF,GAAA,EAAAgM,EAAAvG,EAAA7E,OAAkCZ,EAAAgM,EAAOhM,IAAA,CACzC,GAAAmC,GAAAsD,EAAAzF,EACA0M,GAAAkF,EAAAzP,EAAA+Y,EAAA/Y,KAeA,QAAAiZ,IAAA1f,EAAAiO,GACA,GAAAjO,GAAA,gBAAAA,GAAA,CAGA,GAAA2N,EASA,OARAH,GAAAxN,EAAA,WAAAA,EAAA4N,iBAAAmR,IACApR,EAAA3N,EAAA4N,OACGkR,KAAAnB,GAAA3d,IAAA8Q,EAAA9Q,KAAAI,OAAAuf,aAAA3f,OAAAyN,SACHE,EAAA,GAAAoR,IAAA/e,IAEA2N,GAAAM,GACAN,EAAAiS,MAAA3R,GAEAN,GAWA,QAAAkS,IAAAvX,EAAA7B,EAAA/E,GACA,GAAAoM,GAAA,GAAA4Q,IAEAoB,EAAA1f,OAAA2f,yBAAAzX,EAAA7B,EACA,KAAAqZ,KAAA1O,gBAAA,GAKA,GAAA4O,GAAAF,KAAAnM,IACAsM,EAAAH,KAAAvS,IAEA2S,EAAAR,GAAAhe,EACAtB,QAAA8Q,eAAA5I,EAAA7B,GACAwK,YAAA,EACAG,cAAA,EACAuC,IAAA,WACA,GAAA3T,GAAAggB,IAAA1gB,KAAAgJ,GAAA5G,CACA,IAAAgd,GAAAxI,SACApI,EAAAqS,SACAD,GACAA,EAAApS,IAAAqS,SAEAxC,GAAA3d,IACA,OAAAiF,GAAAX,EAAA,EAAAgM,EAAAtQ,EAAAkF,OAA8CZ,EAAAgM,EAAOhM,IACrDW,EAAAjF,EAAAsE,GACAW,KAAA2I,QAAA3I,EAAA2I,OAAAE,IAAAqS,QAIA,OAAAngB,IAEAuN,IAAA,SAAA9M,GACA,GAAAT,GAAAggB,IAAA1gB,KAAAgJ,GAAA5G,CACAjB,KAAAT,IAGAigB,EACAA,EAAA3gB,KAAAgJ,EAAA7H,GAEAiB,EAAAjB,EAEAyf,EAAAR,GAAAjf,GACAqN,EAAAC,cAkFA,QAAAqS,IAAAxgB,GAYAA,EAAA6I,UAAA4X,MAAA,SAAA9D,GACAA,QAEAvb,KAAAsf,IAAA,KACAtf,KAAA0F,QAAA6V,EAAA5E,OACA3W,KAAAsB,MAAAtB,KAAA0F,QAAA1F,KAAA0F,QAAApE,MAAAtB,KACAA,KAAAuf,aACAvf,KAAAwf,SACAxf,KAAAyf,QACAzf,KAAA0f,aACA1f,KAAA2f,eAGA3f,KAAA4f,KAAAC,KAGA7f,KAAAyM,QAAA,EAGAzM,KAAA8f,WACA9f,KAAA+f,gBAGA/f,KAAAggB,aAAA,EACAhgB,KAAAigB,UACAjgB,KAAAkgB,eACAlgB,KAAAmgB,aAAA,KAGAngB,KAAA+V,YAAA/V,KAAAogB,aAAApgB,KAAAqgB,SAAArgB,KAAAsgB,YAAAtgB,KAAAugB,kBAAAvgB,KAAAwgB,eAAA,EACAxgB,KAAAygB,UAAA,KAMAzgB,KAAA0gB,SAAAnF,EAAAmF,UAAA1gB,KAAA0F,QAOA1F,KAAA2gB,OAAApF,EAAAoF,OAMA3gB,KAAA4gB,MAAArF,EAAAqF,MACA5gB,KAAA4gB,OACA5gB,KAAA4gB,MAAAC,SAAApf,KAAAzB,MAIAA,KAAA0F,SACA1F,KAAA0F,QAAA6Z,UAAA9d,KAAAzB,MAIAub,EAAAvb,KAAA8gB,SAAAhE,GAAA9c,KAAA+gB,YAAAxF,UAAAvb,MAGAA,KAAAghB,aAIAhhB,KAAA0M,SAGA1M,KAAAihB,UAAA,QAGAjhB,KAAAkhB,aAGAlhB,KAAAmhB,cAGAnhB,KAAAihB,UAAA,WAGA1F,EAAAtG,IACAjV,KAAAohB,OAAA7F,EAAAtG,KAmFA,QAAAoM,IAAAC,GACA,GAAA/Z,SAAA+Z,EACA,WAGA,IAAAC,GAAAD,EAAAzT,WAAA,EAEA,QAAA0T,GACA,QACA,QACA,QACA,QACA,QACA,QAEA,MAAAD,EAEA,SACA,QAEA,aAEA,SACA,OACA,QACA,QACA,SACA,WACA,UACA,UAEA,WAIA,MAAAC,IAAA,IAAAA,GAAA,KAAAA,GAAA,IAAAA,GAAA,GACA,QAIAA,GAAA,IAAAA,GAAA,GACA,SAGA,OAYA,QAAAC,IAAAC,GACA,GAAAC,GAAAD,EAAA5P,MAEA,cAAA4P,EAAAhE,OAAA,KAAAvP,MAAAuT,MAGAlU,EAAAmU,GAAAtT,EAAAsT,GAAA,IAAAA,GAUA,QAAAjhB,IAAAghB,GA6CA,QAAAE,KACA,GAAAC,GAAAH,EAAAxiB,EAAA,EACA,IAAA4iB,IAAAC,IAAA,MAAAF,GAAAC,IAAAE,IAAA,MAAAH,EAIA,MAHA3iB,KACA+iB,EAAA,KAAAJ,EACAK,EAAAC,OACA,EAlDA,GAIA1jB,GAAAwjB,EAAAvc,EAAAtG,EAAAwW,EAAAK,EAAAmM,EAJApZ,KACA9J,KACA4iB,EAAAO,GACAC,EAAA,EAGAJ,IAgDA,KA9CAA,EAAAK,IAAA,WACA/a,SAAA9B,IACAsD,EAAAtH,KAAAgE,GACAA,EAAA8B,SAIA0a,EAAAC,IAAA,WACA3a,SAAA9B,EACAA,EAAAuc,EAEAvc,GAAAuc,GAIAC,EAAAM,IAAA,WACAN,EAAAC,MACAG,KAGAJ,EAAAO,IAAA,WACA,GAAAH,EAAA,EACAA,IACAR,EAAAY,GACAR,EAAAC,UACK,CAGL,GAFAG,EAAA,EACA5c,EAAA+b,GAAA/b,GACAA,KAAA,EACA,QAEAwc,GAAAK,QAeA,MAAAT,GAIA,GAHA5iB,IACAT,EAAAijB,EAAAxiB,GAEA,OAAAT,IAAAmjB,IAAA,CAQA,GAJAxiB,EAAAkiB,GAAA7iB,GACA2jB,EAAAO,GAAAb,GACAlM,EAAAwM,EAAAhjB,IAAAgjB,EAAA,SAAAQ,GAEAhN,IAAAgN,GACA,MAKA,IAFAd,EAAAlM,EAAA,GACAK,EAAAiM,EAAAtM,EAAA,IACAK,IACAgM,EAAArM,EAAA,GACAqM,EAAAza,SAAAya,EAAAxjB,EAAAwjB,EACAhM,OAAA,GACA,MAIA,IAAA6L,IAAAe,GAEA,MADA7Z,GAAA8Z,IAAApB,EACA1Y,GAYA,QAAA+Z,IAAArB,GACA,GAAAhP,GAAAsQ,GAAApQ,IAAA8O,EAOA,OANAhP,KACAA,EAAAhS,GAAAghB,GACAhP,GACAsQ,GAAA5P,IAAAsO,EAAAhP,IAGAA,EAUA,QAAAuQ,IAAA1b,EAAAma,GACA,MAAAwB,IAAAxB,GAAA9O,IAAArL,GAsBA,QAAA4b,IAAA5b,EAAAma,EAAA/gB,GACA,GAAAyiB,GAAA7b,CAIA,IAHA,gBAAAma,KACAA,EAAAhhB,GAAAghB,KAEAA,IAAA5R,EAAAvI,GACA,QAGA,QADAqJ,GAAAlL,EACAnC,EAAA,EAAAgM,EAAAmS,EAAAvd,OAAkCZ,EAAAgM,EAAOhM,IACzCqN,EAAArJ,EACA7B,EAAAgc,EAAAne,GACA,MAAAmC,EAAAgY,OAAA,KACAhY,EAAAwd,GAAAxd,EAAA8I,MAAA,IAAAoE,IAAArU,KAAA6kB,MAEA7f,EAAAgM,EAAA,GACAhI,IAAA7B,GACAoK,EAAAvI,KACAA,KACA,eAAAyD,EAAAO,IAAA8K,UAAAzF,EAAAlE,QACA2W,GAAA3B,EAAA9Q,GAEApE,EAAAoE,EAAAlL,EAAA6B,KAGAqV,GAAArV,GACAA,EAAArH,KAAAwF,EAAA/E,GACO+E,IAAA6B,GACPA,EAAA7B,GAAA/E,GAEA,eAAAqK,EAAAO,IAAA8K,UAAA9O,EAAAmF,QACA2W,GAAA3B,EAAAna,GAEAiF,EAAAjF,EAAA7B,EAAA/E,GAIA,UA0BA,QAAAoK,OA6BA,QAAAuY,IAAAzV,EAAA0V,GACA,GAAAhgB,GAAAigB,GAAArf,MAEA,OADAqf,IAAAjgB,GAAAggB,EAAA1V,EAAAa,QAAA+U,GAAA,OAAA5V,EACA,IAAAtK,EAAA,IAUA,QAAAmgB,IAAAZ,GACA,GAAArkB,GAAAqkB,EAAApF,OAAA,GACAgE,EAAAoB,EAAAtU,MAAA,EACA,OAAAmV,IAAAhW,KAAA+T,GACAoB,GAEApB,IAAA3Q,QAAA,QAAA2Q,EAAAhT,QAAAkV,GAAAC,IAAAnC,EACAjjB,EAAA,SAAAijB,GAYA,QAAAmC,IAAAhW,EAAAtK,GACA,MAAAigB,IAAAjgB,GAWA,QAAAugB,IAAArW,GACAsW,GAAApW,KAAAF,IACA,eAAAzC,EAAAO,IAAA8K,UAAAC,GAAA,gDAAA7I,GAGA+V,GAAArf,OAAA,CAEA,IAAA6f,GAAAvW,EAAAiB,QAAAuV,GAAAX,IAAA5U,QAAAwV,GAAA,GAIA,OADAF,IAAA,IAAAA,GAAAtV,QAAAyV,GAAAT,IAAAhV,QAAAkV,GAAAC,IACAO,GAAAJ,GAaA,QAAAI,IAAAJ,GACA,IAEA,UAAAK,UAAA,kBAAAL,EAAA,KAEG,MAAA9f,GASH,MARA,eAAA8G,EAAAO,IAAA8K,UAGAC,GADApS,EAAAyD,WAAAqK,MAAA,mBACA,kOAEA,gDAAAgS,GAGAjZ,IAWA,QAAAuZ,IAAA7W,GACA,GAAAiU,GAAAqB,GAAAtV,EACA,OAAAiU,GACA,SAAA6C,EAAA5jB,GACAwiB,GAAAoB,EAAA7C,EAAA/gB,SAGA,eAAAqK,EAAAO,IAAA8K,UAAAC,GAAA,8BAAA7I,IAYA,QAAAyV,IAAAzV,EAAA+W,GACA/W,IAAAqE,MAEA,IAAAY,GAAA+R,GAAA7R,IAAAnF,EACA,IAAAiF,EAIA,MAHA8R,KAAA9R,EAAAlG,MACAkG,EAAAlG,IAAA8X,GAAA5R,EAAAjF,MAEAiF,CAEA,IAAAvQ,IAAasL,MAUb,OATAtL,GAAAyQ,IAAA8R,GAAAjX,MAAAsD,QAAA,OAEAqT,GAAA,SAAA3W,GAEAqW,GAAArW,GACA+W,IACAriB,EAAAqK,IAAA8X,GAAA7W,IAEAgX,GAAArR,IAAA3F,EAAAtL,GACAA,EAUA,QAAAuiB,IAAAjX,GACA,MAAAkX,IAAAhX,KAAAF,KAEAmX,GAAAjX,KAAAF,IAEA,UAAAA,EAAAe,MAAA,KAyBA,QAAAqW,MACApa,GAAAtG,OAAA,EACA2gB,GAAA3gB,OAAA,EACA4gB,MACAC,MACAC,IAAA,EAOA,QAAAC,MAGA,IAFA,GAAAC,IAAA,EAEAA,GACAA,GAAA,EAEAC,GAAA3a,IACA2a,GAAAN,IAGAra,GAAAtG,OACAghB,GAAA,GAKAE,IAAA5R,GAAA4R,UACAA,GAAArZ,KAAA,SAEA6Y,MAUA,QAAAO,IAAA3a,GAGA,OAAAlH,GAAA,EAAiBA,EAAAkH,EAAAtG,OAAkBZ,IAAA,CACnC,GAAA+hB,GAAA7a,EAAAlH,GACAlF,EAAAinB,EAAAjnB,EAIA,IAHA0mB,GAAA1mB,GAAA,KACAinB,EAAAza,MAEA,eAAAG,EAAAO,IAAA8K,UAAA,MAAA0O,GAAA1mB,KACA2mB,GAAA3mB,IAAA2mB,GAAA3mB,IAAA,KACA2mB,GAAA3mB,GAAAoV,GAAA8R,iBAAA,CACAjP,GAAA,qEAAAgP,EAAAnS,WAAA,IAAAmS,EAAApY,GACA,QAIAzC,EAAAtG,OAAA,EAcA,QAAAqhB,IAAAF,GACA,GAAAjnB,GAAAinB,EAAAjnB,EACA,UAAA0mB,GAAA1mB,GAAA,CAEA,GAAAonB,GAAAH,EAAAI,KAAAZ,GAAAra,EACAsa,IAAA1mB,GAAAonB,EAAAthB,OACAshB,EAAA/jB,KAAA4jB,GAEAL,KACAA,IAAA,EACAha,GAAAia,MA0BA,QAAAS,IAAAzY,EAAA0Y,EAAA1U,EAAAsK,GAEAA,GACArW,EAAAlF,KAAAub,EAEA,IAAAqK,GAAA,kBAAAD,EAcA,IAbA3lB,KAAAiN,KACAA,EAAAyS,UAAAje,KAAAzB,MACAA,KAAAkT,WAAAyS,EACA3lB,KAAAiR,KACAjR,KAAA5B,KAAAynB,GACA7lB,KAAA8lB,QAAA,EACA9lB,KAAA+lB,MAAA/lB,KAAAgmB,KACAhmB,KAAAimB,QACAjmB,KAAAkmB,WACAlmB,KAAAmmB,OAAA,GAAAC,IACApmB,KAAAqmB,UAAA,GAAAD,IACApmB,KAAAsmB,UAAA,KAEAV,EACA5lB,KAAAgf,OAAA2G,EACA3lB,KAAAif,OAAA1X,WACG,CACH,GAAArF,GAAA+gB,GAAA0C,EAAA3lB,KAAAoE,OACApE,MAAAgf,OAAA9c,EAAAyQ,IACA3S,KAAAif,OAAA/c,EAAAqK,IAEAvM,KAAAhB,MAAAgB,KAAAgmB,KAAAze,OAAAvH,KAAA2S,MAGA3S,KAAAumB,OAAAvmB,KAAAwmB,SAAA,EAkPA,QAAAC,IAAA/lB,EAAAgmB,GACA,GAAApjB,GAAAiE,OACAwB,EAAAxB,MACAmf,KACAA,EAAAC,GACAD,EAAAE,QAEA,IAAAC,GAAAlK,GAAAjc,GACAomB,EAAAjX,EAAAnP,EACA,KAAAmmB,GAAAC,IAAA1nB,OAAAuf,aAAAje,GAAA,CACA,GAAAA,EAAAkM,OAAA,CACA,GAAAma,GAAArmB,EAAAkM,OAAAE,IAAA1O,EACA,IAAAsoB,EAAA5B,IAAAiC,GACA,MAEAL,GAAA9N,IAAAmO,GAGA,GAAAF,EAEA,IADAvjB,EAAA5C,EAAAwD,OACAZ,KAAAmjB,GAAA/lB,EAAA4C,GAAAojB,OACK,IAAAI,EAGL,IAFA/d,EAAA3J,OAAA2J,KAAArI,GACA4C,EAAAyF,EAAA7E,OACAZ,KAAAmjB,GAAA/lB,EAAAqI,EAAAzF,IAAAojB,IA0CA,QAAAM,IAAAzQ,GACA,MAAA6C,IAAA7C,IAAA8C,GAAA9C,EAAA+C,SAiBA,QAAA2N,IAAAC,EAAArE,GAEA,GAAAsE,GAAAtE,EAAAqE,IAAArV,OACAY,EAAA2U,GAAAzU,IAAAwU,EACA,IAAA1U,EACA,MAAAA,EAGA,IAAAqI,GAAA1a,SAAAqZ,yBACA4N,EAAAH,EAAAnV,MAAAuV,IACAC,EAAAC,GAAA9Z,KAAAwZ,GACAO,EAAAC,GAAAha,KAAAwZ,EAEA,IAAAG,GAAAE,GAAAE,EAGG,CACH,GAAAlT,GAAA8S,KAAA,GACAM,EAAA7hB,GAAAyO,IAAAzO,GAAA8hB,OACAC,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACApR,EAAAnW,SAAAsZ,cAAA,MAGA,KADAnD,EAAApS,UAAA2jB,EAAAZ,EAAAa,EACAF,KACAtR,IAAAqD,SAKA,KAFA,GAAAV,GAEAA,EAAA3C,EAAAoB,YAEAmD,EAAA1F,YAAA8D,OAlBA4B,GAAA1F,YAAAhV,SAAA+Z,eAAA+M,GAyBA,OAJArE,IACArJ,GAAAsB,GAEAsM,GAAAjU,IAAAgU,EAAArM,GACAA,EAUA,QAAAkN,IAAAzR,GAOA,GAAAyQ,GAAAzQ,GACA,MAAA0Q,IAAA1Q,EAAApS,UAGA,eAAAoS,EAAAsD,QACA,MAAAoN,IAAA1Q,EAAA0R,YAOA,KAJA,GAEA/O,GAFAgP,EAAA7M,GAAA9E,GACAuE,EAAA1a,SAAAqZ,yBAGAP,EAAAgP,EAAAvQ,YAEAmD,EAAA1F,YAAA8D,EAGA,OADAM,IAAAsB,GACAA,EAsCA,QAAAO,IAAA9E,GAEA,IAAAA,EAAA4R,iBACA,MAAA5R,GAAA8E,WAEA,IACA/X,GAAA6f,EAAAiF,EADAlmB,EAAAqU,EAAA8E,WAAA,EAGA,IAAAgN,GAAA,CACA,GAAAC,GAAApmB,CAMA,IALA8kB,GAAAzQ,KACAA,IAAA+C,QACAgP,EAAApmB,EAAAoX,SAEA6J,EAAA5M,EAAA4R,iBAAA,YACAhF,EAAAjf,OAGA,IAFAkkB,EAAAE,EAAAH,iBAAA,YACA7kB,EAAA8kB,EAAAlkB,OACAZ,KACA8kB,EAAA9kB,GAAAsT,WAAAgB,aAAAyD,GAAA8H,EAAA7f,IAAA8kB,EAAA9kB,IAKA,GAAAilB,GACA,gBAAAhS,EAAAsD,QACA3X,EAAAlD,MAAAuX,EAAAvX,UAGA,IADAmkB,EAAA5M,EAAA4R,iBAAA,YACAhF,EAAAjf,OAGA,IAFAkkB,EAAAlmB,EAAAimB,iBAAA,YACA7kB,EAAA8kB,EAAAlkB,OACAZ,KACA8kB,EAAA9kB,GAAAtE,MAAAmkB,EAAA7f,GAAAtE,KAKA,OAAAkD,GAqBA,QAAAsmB,IAAA1pB,EAAA2pB,EAAA5F,GACA,GAAAtM,GAAAuE,CAIA,OAAAzB,IAAAva,IACA0a,GAAA1a,GACA2pB,EAAApN,GAAAvc,OAGA,gBAAAA,GAEA+jB,GAAA,MAAA/jB,EAAA2e,OAAA,GAaA3C,EAAAmM,GAAAnoB,EAAA+jB,IAXA/H,EAAA4N,GAAA/V,IAAA7T,GACAgc,IACAvE,EAAAnW,SAAAuoB,eAAA7pB,EAAAyP,MAAA,IACAgI,IACAuE,EAAAkN,GAAAzR,GAEAmS,GAAAvV,IAAArU,EAAAgc,MAOGhc,EAAA+X,WAEHiE,EAAAkN,GAAAlpB,IAGAgc,GAAA2N,EAAApN,GAAAP,MAyDA,QAAA8N,IAAAC,EAAA5b,EAAA6N,EAAAgO,EAAAxE,EAAAyE,GACA/oB,KAAA6gB,YACA7gB,KAAAgpB,cACAhpB,KAAAiN,KACAjN,KAAAskB,QACAtkB,KAAAipB,UAAA,EACAjpB,KAAA+oB,aACAA,GACAA,EAAAC,WAAAvnB,KAAAzB,MAEAA,KAAAkpB,OAAAL,EAAA5b,EAAA6N,EAAAgO,EAAAxE,EAAAtkB,KACA,IAAA4U,GAAA5U,KAAA4U,OAAA,IAAAkG,EAAAqO,WAAAjlB,SAEA4W,EAAAqO,WAAA,GAAA/O,UACAxF,IACA5U,KAAAuW,KAAAuE,EAAAqO,WAAA,GACAnpB,KAAAsV,OAAA8T,GACAppB,KAAAwV,OAAA6T,KAEArpB,KAAAuW,KAAAuD,GAAA,kBACA9Z,KAAA2a,IAAAb,GAAA,gBACA9Z,KAAA8a,OACApD,EAAA1X,KAAAuW,KAAAuE,GACAA,EAAA1F,YAAApV,KAAA2a,KACA3a,KAAAsV,OAAAgU,GACAtpB,KAAAwV,OAAA+T,IAEAvpB,KAAAuW,KAAAiT,SAAAxpB,KA4BA,QAAAopB,IAAAlU,EAAAuU,GACAzpB,KAAAipB,UAAA,CACA,IAAAS,GAAAD,KAAA,EAAApU,EAAAC,CACAoU,GAAA1pB,KAAAuW,KAAArB,EAAAlV,KAAAiN,IACAqJ,EAAAtW,KAAAuW,OACAvW,KAAA2pB,SAAAC,IAQA,QAAAP,MACArpB,KAAAipB,UAAA,CACA,IAAAY,GAAAvT,EAAAtW,KAAAuW,MACAlV,EAAArB,IACAA,MAAA8pB,eACAvU,EAAAvV,KAAAuW,KAAAvW,KAAAiN,GAAA,WACA4c,GACAxoB,EAAAsoB,SAAAI,IAEA1oB,EAAA2oB,YAWA,QAAAV,IAAApU,EAAAuU,GACAzpB,KAAAipB,UAAA,CACA,IAAAhc,GAAAjN,KAAAiN,GACAyc,EAAAD,KAAA,EAAApU,EAAAC,CACAoF,IAAA1a,KAAAuW,KAAAvW,KAAA2a,IAAA,SAAApE,GACAmT,EAAAnT,EAAArB,EAAAjI,KAEAqJ,EAAAtW,KAAAuW,OACAvW,KAAA2pB,SAAAC,IAQA,QAAAL,MACAvpB,KAAAipB,UAAA,CACA,IAAA5nB,GAAArB,KACA6pB,EAAAvT,EAAAtW,KAAAuW,KACAvW,MAAA8pB,eACAjP,GAAA7a,KAAAuW,KAAAvW,KAAA2a,IAAA3a,KAAAiN,GAAAjN,KAAA8a,KAAA,WACA+O,GACAxoB,EAAAsoB,SAAAI,IAEA1oB,EAAA2oB,YAkDA,QAAAJ,IAAA1Q,IACAA,EAAAoH,aAAAhK,EAAA4C,EAAAoG,MACApG,EAAA+H,UAAA,YAUA,QAAA8I,IAAA7Q,GACAA,EAAAoH,cAAAhK,EAAA4C,EAAAoG,MACApG,EAAA+H,UAAA,YAaA,QAAAgJ,IAAAhd,EAAAgI,GACAjV,KAAAiN,IACA,IAAAnO,GACAwkB,EAAA,gBAAArO,EACAqO,IAAAlK,GAAAnE,OAAAoC,aAAA,QACAvY,EAAA0pB,GAAAvT,GAAA,IAEAnW,EAAAsB,SAAAqZ,yBACA3a,EAAAsW,YAAAH,IAEAjV,KAAAlB,UAEA,IAAA+pB,GACAqB,EAAAjd,EAAA8T,YAAAmJ,GACA,IAAAA,EAAA,GACA,GAAAC,GAAAD,GAAA5G,EAAArO,EAAAiG,GAAAjG,GACA4T,GAAAuB,GAAAzX,IAAAwX,GACAtB,IACAA,EAAAxmB,GAAAvD,EAAAmO,EAAA6T,UAAA,GACAsJ,GAAAjX,IAAAgX,EAAAtB,QAGAA,GAAAxmB,GAAAvD,EAAAmO,EAAA6T,UAAA,EAEA9gB,MAAA6oB,SAujBA,QAAAwB,IAAAvP,EAAAd,EAAA5b,GACA,GAAA6W,GAAA6F,EAAAvE,KAAA+T,eAEA,IAAArV,EAAA,CAEA,IADA6F,EAAA7F,EAAAuU,WACA1O,KAAAyP,QAAAnsB,GAAA0c,EAAAmO,UAAAhU,IAAA+E,IAAA,CAGA,GAFA/E,IAAAqV,iBAEArV,EAAA,MACA6F,GAAA7F,EAAAuU,SAEA,MAAA1O,IAUA,QAAA0P,IAAA1P,GACA,GAAAvE,GAAAuE,EAAAvE,IAEA,IAAAuE,EAAAH,IACA,MAAApE,EAAAkU,SAAAlU,IAAAuE,EAAAH,KAAApE,EAAAiB,aACAjB,IAAAiB,WAGA,OAAAjB,GAAAkU,QAUA,QAAAC,IAAAlhB,GAGA,IAFA,GAAAlG,MACAoM,EAAA,GAAAxE,OAAApL,KAAA6qB,MAAAnhB,MACAlG,EAAAkG,GACAkG,EAAApM,IAEA,OAAAoM,GAYA,QAAAkb,IAAA3rB,EAAAwG,EAAAzG,EAAA6rB,GACA,MAAAA,GAAA,WAAAA,EAAA5rB,EAAA4rB,EAAApN,OAAA,GAAA1L,MAAA,MAAAiR,GAAAhkB,EAAA6rB,GAAA7rB,EAAA6rB,GAAAplB,GAAAzG,EA4VA,QAAA8rB,IAAA7V,EAAA8V,EAAAC,GAGA,OADAtV,GAAAhV,EAAAuqB,EADA/oB,EAAA6oB,KAAA,KAEAznB,EAAA,EAAAgM,EAAA2F,EAAAsG,QAAArX,OAAwCZ,EAAAgM,EAAOhM,IAG/C,GAFAoS,EAAAT,EAAAsG,QAAAjY,GACA2nB,EAAAD,EAAAtV,EAAA2B,aAAA,YAAA3B,EAAAuV,SACA,CAEA,GADAvqB,EAAAgV,EAAApI,eAAA,UAAAoI,EAAAwV,OAAAxV,EAAA1W,OACA+rB,EAGA,MAAArqB,EAFAwB,GAAAT,KAAAf,GAMA,MAAAwB,GAWA,QAAAipB,IAAApa,EAAArQ,GAEA,IADA,GAAA4C,GAAAyN,EAAA7M,OACAZ,KACA,GAAA6N,EAAAJ,EAAAzN,GAAA5C,GACA,MAAA4C,EAGA,UAoJA,QAAA8nB,IAAA5rB,EAAAuJ,GACA,GAAAsiB,GAAAtiB,EAAAjD,IAAA,SAAAL,GACA,GAAA6lB,GAAA7lB,EAAAoI,WAAA,EACA,OAAAyd,GAAA,IAAAA,EAAA,GACAC,SAAA9lB,EAAA,IAEA,IAAAA,EAAAvB,SACAonB,EAAA7lB,EAAAoJ,cAAAhB,WAAA,GACAyd,EAAA,IAAAA,EAAA,IACAA,EAGAE,GAAA/lB,IAGA,OADA4lB,MAAA7nB,OAAA4H,SAAAigB,GACA,SAAApnB,GACA,GAAAonB,EAAAva,QAAA7M,EAAAwnB,YACA,MAAAjsB,GAAAlB,KAAA0B,KAAAiE,IAKA,QAAAynB,IAAAlsB,GACA,gBAAAyE,GAEA,MADAA,GAAA0nB,kBACAnsB,EAAAlB,KAAA0B,KAAAiE,IAIA,QAAA2nB,IAAApsB,GACA,gBAAAyE,GAEA,MADAA,GAAA4nB,iBACArsB,EAAAlB,KAAA0B,KAAAiE,IAIA,QAAA6nB,IAAAtsB,GACA,gBAAAyE,GACA,GAAAA,EAAAiR,SAAAjR,EAAA8nB,cACA,MAAAvsB,GAAAlB,KAAA0B,KAAAiE,IAqJA,QAAA+nB,IAAAC,GACA,GAAAC,GAAAD,GACA,MAAAC,IAAAD,EAEA,IAAA/pB,GAAA4lB,GAAAmE,EAEA,OADAC,IAAAD,GAAAC,GAAAhqB,KACAA,EAWA,QAAA4lB,IAAAmE,GACAA,EAAAnd,EAAAmd,EACA,IAAAE,GAAA3d,EAAAyd,GACAG,EAAAD,EAAA1O,OAAA,GAAA5O,cAAAsd,EAAA5d,MAAA,EACA8d,MACAA,GAAAjsB,SAAAsZ,cAAA,OAEA,IACA4S,GADAhpB,EAAAipB,GAAAroB,MAEA,eAAAioB,OAAAE,IAAAG,MACA,OACAC,MAAAR,EACAE,QAGA,MAAA7oB,KAEA,GADAgpB,EAAAI,GAAAppB,GAAA8oB,EACAE,IAAAD,IAAAG,MACA,OACAC,MAAAF,GAAAjpB,GAAA2oB,EACAE,MAAAG,GA8OA,QAAAK,IAAA3tB,GACA,GAAAkD,KACA,IAAAya,GAAA3d,GACA,OAAAsE,GAAA,EAAAgM,EAAAtQ,EAAAkF,OAAqCZ,EAAAgM,EAAOhM,IAAA,CAC5C,GAAAspB,GAAA5tB,EAAAsE,EACA,IAAAspB,EACA,mBAAAA,GACA1qB,EAAAT,KAAAmrB,OAEA,QAAAvkB,KAAAukB,GACAA,EAAAvkB,IAAAnG,EAAAT,KAAA4G,OAKG,IAAAwH,EAAA7Q,GACH,OAAAyG,KAAAzG,GACAA,EAAAyG,IAAAvD,EAAAT,KAAAgE,EAGA,OAAAvD,GAcA,QAAAkJ,IAAA6J,EAAAxP,EAAA2J,GAEA,GADA3J,IAAAoM,OACApM,EAAAqL,QAAA,UAEA,WADA1B,GAAA6F,EAAAxP,EAOA,QADAsD,GAAAtD,EAAAonB,MAAA,OACAvpB,EAAA,EAAAgM,EAAAvG,EAAA7E,OAAkCZ,EAAAgM,EAAOhM,IACzC8L,EAAA6F,EAAAlM,EAAAzF,IAiWA,QAAAwpB,IAAAjX,EAAA5I,EAAAgE,GAIA,QAAA2J,OACAmS,GAAAlpB,EACAoN,IAEA4E,EAAAkX,GAAAzuB,KAAA2O,EAAA2N,GAPA,GAAA/W,GAAAgS,EAAA3R,OACA6oB,EAAA,CACAlX,GAAA,GAAAvX,KAAA2O,EAAA2N,GA2BA,QAAAoS,IAAA/X,EAAAgY,EAAAhgB,GAKA,IAJA,GAGAsO,GAAApV,EAAA+mB,EAAAluB,EAAAyiB,EAAAzT,EAAAie,EAHAltB,KACAouB,EAAA/tB,OAAA2J,KAAAkkB,GACA3pB,EAAA6pB,EAAAjpB,OAEAZ,KAIA,GAHA6C,EAAAgnB,EAAA7pB,GACAiY,EAAA0R,EAAA9mB,IAAAinB,GAEA,eAAAriB,EAAAO,IAAA8K,UAAA,UAAAjQ,EASA,GADAsb,EAAAjT,EAAArI,GACAknB,GAAA3f,KAAA+T,GAAA,CAsBA,GAjBAwK,GACA9lB,OACAsb,OACAlG,UACAsG,KAAAyL,GAAAC,QACA1K,IAAA,MAGAqK,EAAApe,EAAA3I,GAEA,QAAAnH,EAAAmY,EAAAlC,EAAAiY,MACA,QAAAluB,EAAAmY,EAAAlC,EAAAiY,EAAA,UACAjB,EAAApK,KAAAyL,GAAAE,QACO,QAAAxuB,EAAAmY,EAAAlC,EAAAiY,EAAA,YACPjB,EAAApK,KAAAyL,GAAAG,WAGA,OAAAzuB,EAEAitB,EAAApJ,IAAA7jB,EACAgP,EAAAuE,EAAAvT,GACAA,EAAAgP,EAAAkF,WACA+Y,EAAA/Z,QAAAlE,EAAAkE,QAEA3E,EAAAvO,KAAAgP,EAAAkE,QAIA+Z,EAAAyB,kBAAA,GAEAzB,EAAA5Z,SAAA,EAEA,eAAAtH,EAAAO,IAAA8K,UAAA6V,EAAApK,OAAAyL,GAAAE,SAAAG,GAAAjgB,KAAA1O,KACAitB,EAAApK,KAAAyL,GAAAC,QACAlX,GAAA,2DAAArX,EAAAiO,KAGAgf,EAAA2B,WAAA5uB,EAGA,eAAA+L,EAAAO,IAAA8K,UAAAmF,EAAAnX,QAAA6nB,EAAApK,OAAAyL,GAAAE,SACAnX,GAAA,SAAAlQ,EAAA,oCAAA8G,OAEK,YAAAjO,EAAA+X,EAAA9B,EAAAiY,IAELjB,EAAApJ,IAAA7jB,MACK,mBAAA+L,EAAAO,IAAA8K,SAAA,CAEL,GAAAyX,GAAApM,EAAAzS,aACAhQ,GAAA,UAAA0O,KAAAvH,KAAA8O,EAAAgC,aAAA4W,IAAA5Y,EAAAgC,aAAA,IAAA4W,IAAA5Y,EAAAgC,aAAA,UAAA4W,IAAA5Y,EAAAgC,aAAA,IAAA4W,EAAA,UAAA5Y,EAAAgC,aAAA,UAAA4W,EAAA,UAAA5Y,EAAAgC,aAAA,IAAA4W,EAAA,UAAA5Y,EAAAgC,aAAA,UAAA4W,EAAA,UACA7uB,EACAqX,GAAA,kCAAAwX,EAAA,qBAAAX,EAAA,kFAAAjgB,GACOsO,EAAAuS,UAEPzX,GAAA,0BAAAlQ,EAAA8G,GAIAlO,EAAA0C,KAAAwqB,OA9DA,eAAAlhB,EAAAO,IAAA8K,UAAAC,GAAA,sBAAAlQ,EAAA,0CAAA8G,OATAoJ,IAAA,4BAAApJ,EAyEA,OAAA8gB,IAAAhvB,GAUA,QAAAgvB,IAAAhvB,GACA,gBAAAkO,EAAAqX,GAEArX,EAAA+gB,SAIA,KAHA,GAEA/B,GAAAxK,EAAAlG,EAAAvc,EAAA6jB,EAFAoL,EAAAhhB,EAAA6T,SAAA3D,UACA7Z,EAAAvE,EAAAmF,OAEAZ,KAQO,GAPP2oB,EAAAltB,EAAAuE,GACAuf,EAAAoJ,EAAApJ,IACApB,EAAAwK,EAAAxK,KACAlG,EAAA0Q,EAAA1Q,QACAtO,EAAA+gB,OAAAvM,GAAAwK,EACAgC,GAAAzhB,EAAAyhB,EAAAxM,IACAyM,GAAAjhB,EAAAgf,EAAAgC,EAAAxM,IACO,OAAAoB,EAEPqL,GAAAjhB,EAAAgf,EAAA1kB,YACO,IAAA0kB,EAAA5Z,QAEP4Z,EAAApK,OAAAyL,GAAAG,UAEAzuB,GAAAslB,GAAArX,EAAAyT,UAAAzT,GAAA1L,KAAA0qB,EAAA2B,YACAM,GAAAjhB,EAAAgf,EAAAjtB,IAEAiO,EAAAyT,SAEAzT,EAAAkhB,UACAhoB,KAAA,OACA6J,IAAAoe,GACAnC,QACa,UAAA3H,GAGb4J,GAAAjhB,EAAAgf,EAAAhf,EAAA1L,KAAA0qB,EAAA2B,iBAGO,IAAA3B,EAAAyB,iBAAA,CAEP,GAAApb,GAAAlE,EAAAyU,EACA7jB,GAAAsT,IAAAuQ,EAAA1U,EAAAJ,EAAA8U,IAAAvQ,EACA4b,GAAAjhB,EAAAgf,EAAAjtB,OAMAA,GAAAuc,EAAApc,OAAAkvB,UAAA,KAAAxL,OAAA/T,EAAAmd,EAAA9lB,QAAA0c,EACAqL,GAAAjhB,EAAAgf,EAAAjtB,IAiBA,QAAAsvB,IAAArhB,EAAAgf,EAAAsC,EAAAnf,GACA,GAAAof,GAAAvC,EAAA5Z,SAAAoS,GAAAwH,EAAA2B,YACA5uB,EAAAuvB,CACAhnB,UAAAvI,IACAA,EAAAyvB,GAAAxhB,EAAAgf,IAEAjtB,EAAA0vB,GAAAzC,EAAAjtB,EAAAiO,EACA,IAAA0hB,GAAA3vB,IAAAuvB,CACAK,IAAA3C,EAAAjtB,EAAAiO,KACAjO,EAAAuI,QAEAinB,IAAAG,EACA9Q,GAAA,WACAzO,EAAApQ,KAGAoQ,EAAApQ,GAYA,QAAAkvB,IAAAjhB,EAAAgf,EAAAjtB,GACAsvB,GAAArhB,EAAAgf,EAAAjtB,EAAA,SAAAA,GACA6f,GAAA5R,EAAAgf,EAAAxK,KAAAziB,KAYA,QAAA6vB,IAAA5hB,EAAAgf,EAAAjtB,GACAsvB,GAAArhB,EAAAgf,EAAAjtB,EAAA,SAAAA,GACAiO,EAAAgf,EAAAxK,MAAAziB,IAYA,QAAAyvB,IAAAxhB,EAAAgf,GAEA,GAAA1Q,GAAA0Q,EAAA1Q,OACA,KAAA/O,EAAA+O,EAAA,WAEA,MAAAA,GAAApc,OAAAkvB,SAAA9mB,MAEA,IAAAyI,GAAAuL,EAAA,UAMA,OAJA1L,GAAAG,IACA,eAAAjF,EAAAO,IAAA8K,UAAAC,GAAA,mCAAA4V,EAAA9lB,KAAA,2FAAA8G,GAGA,kBAAA+C,IAAAuL,EAAApc,OAAAilB,SAAApU,EAAA1R,KAAA2O,GAAA+C,EAWA,QAAA4e,IAAA3C,EAAAjtB,EAAAiO,GACA,IAAAgf,EAAA1Q,QAAAuS,WACA,OAAA7B,EAAApJ,KACA,MAAA7jB,GAEA,QAEA,IAAAuc,GAAA0Q,EAAA1Q,QACApc,EAAAoc,EAAApc,KACA2vB,GAAA3vB,EACA4vB,IACA,IAAA5vB,EAAA,CACAwd,GAAAxd,KACAA,MAEA,QAAAmE,GAAA,EAAmBA,EAAAnE,EAAA+E,SAAA4qB,EAA2BxrB,IAAA,CAC9C,GAAA0rB,GAAAC,GAAAjwB,EAAAG,EAAAmE,GACAyrB,GAAAttB,KAAAutB,EAAAE,cACAJ,EAAAE,EAAAF,OAGA,IAAAA,EAIA,MAHA,eAAA/jB,EAAAO,IAAA8K,UACAC,GAAA,6CAAA4V,EAAA9lB,KAAA,eAAA4oB,EAAAjpB,IAAAqpB,IAAAxa,KAAA,eAAAya,GAAApwB,GAAA,IAAAiO,IAEA,CAEA,IAAAoiB,GAAA9T,EAAA8T,SACA,SAAAA,IACAA,EAAArwB,MACA,eAAA+L,EAAAO,IAAA8K,UAAAC,GAAA,yDAAA4V,EAAA9lB,KAAA,KAAA8G,IACA,GAcA,QAAAyhB,IAAAzC,EAAAjtB,EAAAiO,GACA,GAAAqiB,GAAArD,EAAA1Q,QAAA+T,MACA,OAAAA,GAGA,kBAAAA,GACAA,EAAAtwB,IAEA,eAAA+L,EAAAO,IAAA8K,UAAAC,GAAA,4BAAA4V,EAAA9lB,KAAA,mCAAAmpB,GAAA,IAAAriB,GACAjO,GANAA,EAkBA,QAAAiwB,IAAAjwB,EAAAG,GACA,GAAA2vB,GACAI,CAsBA,OArBA/vB,KAAAowB,QACAL,EAAA,SACAJ,QAAA9vB,KAAAkwB,GACG/vB,IAAA8O,QACHihB,EAAA,SACAJ,QAAA9vB,KAAAkwB,GACG/vB,IAAAkvB,SACHa,EAAA,UACAJ,QAAA9vB,KAAAkwB,GACG/vB,IAAAilB,UACH8K,EAAA,WACAJ,QAAA9vB,KAAAkwB,GACG/vB,IAAAC,QACH8vB,EAAA,SACAJ,EAAAhf,EAAA9Q,IACGG,IAAA+L,OACHgkB,EAAA,QACAJ,EAAAnS,GAAA3d,IAEA8vB,EAAA9vB,YAAAG,IAGA2vB,QACAI,gBAWA,QAAAC,IAAAhwB,GACA,MAAAA,KAAAse,OAAA,GAAA5O,cAAA1P,EAAAoP,MAAA,iBAUA,QAAA6gB,IAAA1uB,GACA,MAAAtB,QAAAqI,UAAAC,SAAApJ,KAAAoC,GAAA6N,MAAA,MAgEA,QAAAihB,IAAAC,GACAC,GAAAjuB,KAAAguB,GACAlJ,KACAA,IAAA,EACAvb,GAAA2kB,KASA,QAAAA,MAGA,OADAC,GAAAxvB,SAAAsW,gBAAAmZ,aACAvsB,EAAA,EAAiBA,EAAAosB,GAAAxrB,OAAoBZ,IACrCosB,GAAApsB,IAMA,OAJAosB,OACAnJ,IAAA,EAGAqJ,EA2CA,QAAAE,IAAA7a,EAAA7W,EAAAyX,EAAA5I,GACAjN,KAAA5B,KACA4B,KAAAiV,KACAjV,KAAA+vB,WAAAla,KAAAka,YAAA3xB,EAAA,SACA4B,KAAAgwB,WAAAna,KAAAma,YAAA5xB,EAAA,SACA4B,KAAA6V,QACA7V,KAAAiN,KAEAjN,KAAAiwB,gBAAAjwB,KAAAkwB,aAAAlwB,KAAAgD,OAAAhD,KAAAmwB,YAAAnwB,KAAA0V,GAAA1V,KAAAiR,GAAA,KACAjR,KAAAowB,aAAA,EACApwB,KAAAqwB,QAAArwB,KAAAswB,MAAA,EACAtwB,KAAAuwB,aAEAvwB,KAAAb,KAAA0W,KAAA1W,KAEA,eAAA4L,EAAAO,IAAA8K,UACApW,KAAAb,MAAAa,KAAAb,OAAAqxB,IAAAxwB,KAAAb,OAAAsxB,IACApa,GAAA,+CAAArW,KAAA5B,GAAA,MAAA4B,KAAAb,KAAA8N,EAIA,IAAA5L,GAAArB,MAAkB,yDAAAL,QAAA,SAAApB,GAClB8C,EAAA9C,GAAA4Q,EAAA9N,EAAA9C,GAAA8C,KA4SA,QAAAqvB,IAAAzb,GACA,UAAAvH,KAAAuH,EAAAuD,cAAA,CAGA,GAAAmY,GAAA1b,EAAA2b,uBACA,SAAAD,EAAAE,OAAAF,EAAAG,QAEA,QAAA7b,EAAA8b,aAAA9b,EAAA4a,cAAA5a,EAAA+b,iBAAA9sB,QAwDA,QAAA7B,IAAA4S,EAAAsG,EAAA0V,GAEA,GAAAC,GAAAD,IAAA1V,EAAA4V,aAAAC,GAAAnc,EAAAsG,GAAA,KAEA8V,EAAAH,KAAAI,UAAAC,GAAAtc,OAAAsE,gBAAA,KAAAiY,GAAAvc,EAAAkU,WAAA5N,EAeA,iBAAAtO,EAAAgI,EAAA6T,EAAAxE,EAAAxJ,GAEA,GAAAqO,GAAA5Z,EAAA0F,EAAAkU,YAEAsI,EAAAC,GAAA,WACAR,KAAAjkB,EAAAgI,EAAA6T,EAAAxE,EAAAxJ,GACAuW,KAAApkB,EAAAkc,EAAAL,EAAAxE,EAAAxJ,IACK7N,EACL,OAAA0kB,IAAA1kB,EAAAwkB,IAYA,QAAAC,IAAA7I,EAAA5b,GAEA,eAAAlC,EAAAO,IAAA8K,WAMAnJ,EAAA0S,eAEA,IAAAiS,GAAA3kB,EAAA0S,YAAAzb,MACA2kB,IACA,IAAA4I,GAAAxkB,EAAA0S,YAAApR,MAAAqjB,EACAH,GAAAI,KAAAC,GACA,QAAAxuB,GAAA,EAAAgM,EAAAmiB,EAAAvtB,OAAkCZ,EAAAgM,EAAOhM,IACzCmuB,EAAAnuB,GAAAyuB,OAEA,OAAAN,GAUA,QAAAK,IAAAzjB,EAAAC,GAGA,MAFAD,KAAA2jB,WAAAhiB,IAAAiiB,UAAAC,GACA5jB,IAAA0jB,WAAAhiB,IAAAiiB,UAAAC,GACA7jB,EAAAC,KAAAD,IAAAC,EAAA,IAkBA,QAAAqjB,IAAA1kB,EAAAwkB,EAAAjhB,EAAA2hB,GACA,QAAAjJ,GAAAkJ,GACAC,GAAAplB,EAAAwkB,EAAAW,GACA5hB,GAAA2hB,GACAE,GAAA7hB,EAAA2hB,GAKA,MADAjJ,GAAAuI,OACAvI,EAWA,QAAAmJ,IAAAplB,EAAAwkB,EAAAW,GAEA,IADA,GAAA9uB,GAAAmuB,EAAAvtB,OACAZ,KACAmuB,EAAAnuB,GAAAgvB,YACA,eAAAvnB,EAAAO,IAAA8K,UAAAgc,GACAnlB,EAAA0S,YAAAje,QAAA+vB,EAAAnuB,IAeA,QAAAivB,IAAAtlB,EAAAgI,EAAAlW,EAAAulB,GACA,GAAAkO,GAAAxF,GAAA/X,EAAAlW,EAAAkO,GACAwlB,EAAAf,GAAA,WACAc,EAAAvlB,EAAAqX,IACGrX,EACH,OAAA0kB,IAAA1kB,EAAAwlB,GAkBA,QAAAC,IAAAzd,EAAAsG,EAAAoX,GACA,GAEAC,GAAAC,EAFAC,EAAAvX,EAAAwX,gBACAC,EAAAzX,EAAA0X,cAKA,SAAAhe,EAAA4B,SAGA0E,EAAA4V,cAEA2B,GAAAH,IACAC,EAAAM,GAAAJ,EAAAH,IAEAK,IAEAH,EAAAK,GAAAF,EAAAzX,KAIAsX,EAAAK,GAAAje,EAAAuF,WAAAe,OAEG,mBAAAxQ,EAAAO,IAAA8K,UAAA0c,EAAA,CAEH,GAAA3F,GAAA2F,EAAAnhB,OAAA,SAAAub,GAEA,MAAAA,GAAA/mB,KAAA2K,QAAA,WAEAqiB,GAAAzlB,KAAAwf,EAAA/mB,OAEA,SAAA+mB,EAAA/mB,OACKL,IAAA,SAAAonB,GACL,UAAAA,EAAA/mB,KAAA,KAEA,IAAAgnB,EAAAjpB,OAAA,CACA,GAAAkvB,GAAAjG,EAAAjpB,OAAA,CACAmS,IAAA,aAAA+c,EAAA,UAAAjG,EAAAxY,KAAA,OAAAye,EAAA,wCAAA7X,EAAAtG,GAAA4E,QAAA7K,cAAA,6GAKA,MADAuM,GAAAwX,gBAAAxX,EAAA0X,eAAA,KACA,SAAAhmB,EAAAgI,EAAAqP,GAEA,GACA6N,GADA3hB,EAAAvD,EAAAyT,QAEAlQ,IAAAoiB,IACAT,EAAAT,GAAA,WACAkB,EAAApiB,EAAAyE,EAAA,KAAAqP,IACO9T,GAIP,IAAA6iB,GAAA3B,GAAA,WACAmB,KAAA5lB,EAAAgI,IACKhI,EAIL,OAAA0kB,IAAA1kB,EAAAomB,EAAA7iB,EAAA2hB,IAaA,QAAAf,IAAA7a,EAAAgF,GACA,GAAApc,GAAAoX,EAAAM,QACA,YAAA1X,GAAAoyB,GAAAhb,GAEG,IAAApX,GAAAoX,EAAAlW,KAAAwR,OACHyhB,GAAA/c,EAAAgF,GAEA,KAJAgY,GAAAhd,EAAAgF,GAgBA,QAAAgY,IAAAte,EAAAsG,GAIA,gBAAAtG,EAAA4E,QAAA,CACA,GAAA/H,GAAAoC,EAAAe,EAAAjW,MACA8S,KACAmD,EAAAwD,aAAA,SAAAjE,EAAA1C,IACAmD,EAAAjW,MAAA,IAGA,GAAAw0B,GACAhY,EAAAvG,EAAAqF,gBACAC,EAAAiB,GAAAjM,EAAA0F,EAAAuF,WAiBA,OAfAgB,KACAgY,EAAAC,GAAAxe,EAAAsF,EAAAgB,IAGAiY,IACAA,EAAAE,GAAAze,EAAAsG,IAGAiY,IACAA,EAAAG,GAAA1e,EAAAsG,KAGAiY,GAAAhY,IACAgY,EAAAN,GAAA3Y,EAAAgB,IAEAiY,EAWA,QAAAF,IAAA/c,EAAAgF,GAEA,GAAAhF,EAAAqd,MACA,MAAAC,GAGA,IAAA/hB,GAAAoC,EAAAqC,EAAAud,UACA,KAAAhiB,EACA,WASA,KADA,GAAA8I,GAAArE,EAAAiB,YACAoD,GAAA,IAAAA,EAAA/D,UACA+D,EAAAgZ,OAAA,EACAhZ,IAAApD,WAKA,QADAvC,GAAAR,EADAqG,EAAA1a,SAAAqZ,yBAEAnW,EAAA,EAAAgM,EAAAwC,EAAA5N,OAAoCZ,EAAAgM,EAAOhM,IAC3CmR,EAAA3C,EAAAxO,GACA2R,EAAAR,EAAAF,IAAAwf,GAAAtf,EAAA8G,GAAAnb,SAAA+Z,eAAA1F,EAAAzV,OACA8b,EAAA1F,YAAAH,EAEA,OAAA+e,IAAAliB,EAAAgJ,EAAAS,GAUA,QAAAsY,IAAA5mB,EAAAsJ,GACAf,EAAAe,GAWA,QAAAwd,IAAAtf,EAAA8G,GAgBA,QAAA0Y,GAAA90B,GACA,IAAAsV,EAAAud,WAAA,CACA,GAAAhkB,GAAAuE,EAAAkC,EAAAzV,MACAyV,GAAAud,YACA7rB,KAAAhH,EACA6Q,IAAAkkB,GAAA/0B,GACA+T,WAAAlF,EAAAkF,WACAhB,QAAAlE,EAAAkE,UAtBA,GAAA+C,EAyBA,OAxBAR,GAAAL,QACAa,EAAA7U,SAAA+Z,eAAA1F,EAAAzV,OAEAyV,EAAAtS,MACA8S,EAAA7U,SAAA8Z,cAAA,UACA+Z,EAAA,UAKAhf,EAAA7U,SAAA+Z,eAAA,KACA8Z,EAAA,SAaAhf,EAUA,QAAA+e,IAAAliB,EAAAgJ,GACA,gBAAA7N,EAAAgI,EAAA6T,EAAAxE,GAIA,OADA7P,GAAAzV,EAAAuX,EAFA4d,EAAArZ,EAAAO,WAAA,GACA8N,EAAA5Z,EAAA4kB,EAAAhL,YAEA7lB,EAAA,EAAAgM,EAAAwC,EAAA5N,OAAsCZ,EAAAgM,EAAOhM,IAC7CmR,EAAA3C,EAAAxO,GACAtE,EAAAyV,EAAAzV,MACAyV,EAAAF,MACAgC,EAAA4S,EAAA7lB,GACAmR,EAAAL,SACApV,GAAAslB,GAAArX,GAAA4H,MAAA7V,GACAyV,EAAAtS,KACAsM,EAAA8H,EAAAiS,GAAAxpB,GAAA,IAEAuX,EAAAlW,KAAAyN,EAAA9O,IAGAiO,EAAAkhB,SAAA1Z,EAAAud,WAAAzb,EAAAuS,EAAAxE,GAIA7V,GAAAwG,EAAAkf,IAYA,QAAA3C,IAAA4C,EAAA7Y,GAGA,OADA2V,GAAAG,EAAA9a,EADA8d,KAEA/wB,EAAA,EAAAgM,EAAA8kB,EAAAlwB,OAAsCZ,EAAAgM,EAAOhM,IAC7CiT,EAAA6d,EAAA9wB,GACA4tB,EAAAE,GAAA7a,EAAAgF,GACA8V,EAAAH,KAAAI,UAAA,WAAA/a,EAAAsD,UAAAtD,EAAAgD,gBAAA,KAAAiY,GAAAjb,EAAA4S,WAAA5N,GACA8Y,EAAA5yB,KAAAyvB,EAAAG,EAEA,OAAAgD,GAAAnwB,OAAAowB,GAAAD,GAAA,KAUA,QAAAC,IAAAD,GACA,gBAAApnB,EAAAgO,EAAA6N,EAAAxE,EAAAxJ,GAEA,OADAvE,GAAA2a,EAAAqD,EACAjxB,EAAA,EAAAkG,EAAA,EAAA8F,EAAA+kB,EAAAnwB,OAA8CZ,EAAAgM,EAAO9F,IAAA,CACrD+M,EAAA0E,EAAAzR,GACA0nB,EAAAmD,EAAA/wB,KACAixB,EAAAF,EAAA/wB,IAEA,IAAA6lB,GAAA5Z,EAAAgH,EAAA4S,WACA+H,IACAA,EAAAjkB,EAAAsJ,EAAAuS,EAAAxE,EAAAxJ,GAEAyZ,GACAA,EAAAtnB,EAAAkc,EAAAL,EAAAxE,EAAAxJ,KAcA,QAAA4Y,IAAAze,EAAAsG,GACA,GAAAhH,GAAAU,EAAA4E,QAAA7K,aACA,KAAAyM,GAAA/N,KAAA6G,GAAA,CAGA,GAAAvE,GAAA4L,GAAAL,EAAA,oBAAAhH,EACA,OAAAvE,GACAwkB,GAAAvf,EAAAV,EAAA,GAAAgH,EAAAvL,GADA,QAcA,QAAA2jB,IAAA1e,EAAAsG,GACA,GAAA1c,GAAAyc,GAAArG,EAAAsG,EACA,IAAA1c,EAAA,CACA,GAAA41B,GAAApa,GAAApF,GACA+c,GACA7rB,KAAA,YACAsuB,MACAvhB,WAAArU,EAAAT,GACA4R,IAAA0kB,GAAA71B,UACA81B,WACAC,SAAA/1B,EAAAwT,UAGAwiB,EAAA,SAAA5nB,EAAAgI,EAAA6T,EAAAxE,EAAAxJ,GACA2Z,GACA5V,IAAAyF,GAAArX,GAAAuS,MAAAiV,EAAA,MAEAxnB,EAAAkhB,SAAA6D,EAAA/c,EAAA6T,EAAAxE,EAAAxJ,GAGA,OADA+Z,GAAAvD,UAAA,EACAuD,GAcA,QAAApB,IAAAxe,EAAAsF,EAAAgB,GAEA,UAAAxE,EAAA9B,EAAA,SACA,MAAA6f,GAGA,IAAA7f,EAAAoC,aAAA,WACA,GAAApE,GAAAgC,EAAA8f,sBACA,IAAA9hB,KAAAoE,aAAA,QACA,MAAAyd,IAKA,OADA5H,GAAA/mB,EAAAnH,EAAA21B,EAAAK,EAAAC,EAAAC,EAAA/iB,EAAAnC,EAAAmlB,EACA7xB,EAAA,EAAA4D,EAAAqT,EAAArW,OAAmCZ,EAAA4D,EAAO5D,IAC1C4pB,EAAA3S,EAAAjX,GACA6C,EAAA+mB,EAAA/mB,KAAAsI,QAAA2mB,GAAA,KACAJ,EAAA7uB,EAAA4L,MAAAsjB,OACArlB,EAAA4L,GAAAL,EAAA,aAAAyZ,EAAA,IACAhlB,KAAAshB,YACA6D,IAAAnlB,EAAAiiB,UAAAqD,IAAAH,EAAAlD,YACAkD,EAAAnlB,EACAklB,EAAAhI,EAAA/mB,KACAwuB,EAAAY,GAAArI,EAAA/mB,MACAnH,EAAAkuB,EAAAluB,MACAi2B,EAAAD,EAAA,GACA7iB,EAAA6iB,EAAA,IAMA,OAAAG,GACAX,GAAAvf,EAAAggB,EAAAj2B,EAAAuc,EAAA4Z,EAAAD,EAAA/iB,EAAAwiB,GADA,OAKA,QAAAG,OAoBA,QAAAN,IAAAvf,EAAAggB,EAAAj2B,EAAAuc,EAAAvL,EAAAklB,EAAA/iB,EAAAwiB,GACA,GAAA3mB,GAAAuE,EAAAvT,GACAgzB,GACA7rB,KAAA8uB,EACA9iB,MACAe,WAAAlF,EAAAkF,WACAhB,QAAAlE,EAAAkE,QACA2Q,IAAA7jB,EACAkuB,KAAAgI,EACAP,YACA3kB,MAGA,SAAAilB,GAAA,gBAAAA,IACAjD,EAAAyC,IAAApa,GAAApF,GAEA,IAAA7F,GAAA,SAAAnC,EAAAgI,EAAA6T,EAAAxE,EAAAxJ,GACAkX,EAAAyC,KACA5V,IAAAyF,GAAArX,GAAAuS,MAAAwS,EAAAyC,IAAA,MAEAxnB,EAAAkhB,SAAA6D,EAAA/c,EAAA6T,EAAAxE,EAAAxJ,GAGA,OADA1L,GAAAkiB,UAAA,EACAliB,EAWA,QAAA8jB,IAAA3Y,EAAAgB,GA8EA,QAAAia,GAAAP,EAAAjlB,EAAAylB,GACA,GAAAC,GAAAD,GAAAE,GAAAF,GACAznB,GAAA0nB,GAAAnjB,EAAAvT,EACAyyB,GAAAhwB,MACA0E,KAAA8uB,EACA/H,KAAAgI,EACArS,IAAA0L,EACAve,MACAmC,MACAwiB,YAIAzhB,WAAAlF,KAAAkF,WACAhB,QAAAlE,KAAAkE,QACA0jB,OAAAH,EACAE,WAAAD,IA1FA,IAHA,GAEAxI,GAAA/mB,EAAAnH,EAAAk2B,EAAA3G,EAAA0G,EAAA9iB,EAAAwiB,EAAAkB,EAAA/jB,EAAAkjB,EAFA1xB,EAAAiX,EAAArW,OACAutB,KAEAnuB,KAYA,GAXA4pB,EAAA3S,EAAAjX,GACA6C,EAAA+uB,EAAAhI,EAAA/mB,KACAnH,EAAAuvB,EAAArB,EAAAluB,MACA8S,EAAAoC,EAAAlV,GAEAmT,EAAA,KAEAwiB,EAAAY,GAAApvB,GACAA,IAAAsI,QAAA2mB,GAAA,IAGAtjB,EACA9S,EAAAwV,EAAA1C,GACAK,EAAAhM,EACAqvB,EAAA,OAAAtB,GAAA/kB,KAAA2C,GAEA,eAAA/G,EAAAO,IAAA8K,UACA,UAAAjQ,GAAA+E,MAAAzD,UAAAquB,KAAAx3B,KAAAic,EAAA,SAAA2S,GACA,iBAAAA,EAAA/mB,MAAA,iBAAA+mB,EAAA/mB,QAEAkQ,GAAA,UAAAkY,EAAA,yGAAAhT,OAMA,IAAAwa,GAAAroB,KAAAvH,GACAwuB,EAAAC,SAAAoB,GAAAtoB,KAAAvH,GACAqvB,EAAA,aAAAd,GAAA/e,gBAIA,IAAAwd,GAAAzlB,KAAAvH,GACAgM,EAAAhM,EAAAsI,QAAA0kB,GAAA,IACAqC,EAAA,KAAAtB,GAAA5zB,QAIA,IAAA01B,GAAAtoB,KAAAvH,GACA8uB,EAAA9uB,EAAAsI,QAAAunB,GAAA,IACA,UAAAf,GAAA,UAAAA,EACAO,EAAAP,EAAAP,GAAAO,KAEA9iB,EAAA8iB,EACAO,EAAA,OAAAtB,GAAA/kB,WAKA,IAAA6lB,EAAA7uB,EAAA4L,MAAAsjB,IAAA,CAKA,GAJAJ,EAAAD,EAAA,GACA7iB,EAAA6iB,EAAA,GAGA,SAAAC,EACA,QAGAY,GAAAja,GAAAL,EAAA,aAAA0Z,GAAA,GACAY,GACAL,EAAAP,EAAAY,GAiCA,GAAApE,EAAAvtB,OACA,MAAA+xB,IAAAxE,GAWA,QAAA8D,IAAApvB,GACA,GAAAjE,GAAA9C,OAAAqS,OAAA,MACAM,EAAA5L,EAAA4L,MAAAqjB,GACA,IAAArjB,EAEA,IADA,GAAAzO,GAAAyO,EAAA7N,OACAZ,KACApB,EAAA6P,EAAAzO,GAAAiL,MAAA,MAGA,OAAArM,GAUA,QAAA+zB,IAAA/B,GACA,gBAAAjnB,EAAAgI,EAAA6T,EAAAxE,EAAAxJ,GAGA,IADA,GAAAxX,GAAA4wB,EAAAhwB,OACAZ,KACA2J,EAAAkhB,SAAA+F,EAAA5wB,GAAA2R,EAAA6T,EAAAxE,EAAAxJ,IAYA,QAAA6a,IAAA7jB,GAEA,IADA,GAAAxO,GAAAwO,EAAA5N,OACAZ,KACA,GAAAwO,EAAAxO,GAAA8Q,QAAA,SAIA,QAAAmd,IAAAtc,GACA,iBAAAA,EAAA4E,WAAA5E,EAAAoC,aAAA,6BAAApC,EAAAgC,aAAA,SAiBA,QAAAif,IAAAjhB,EAAAsG,GA8BA,MAxBAA,KACAA,EAAAwX,gBAAAoD,GAAAlhB,IAIAmE,GAAAnE,KACAA,EAAAuT,GAAAvT,IAEAsG,IACAA,EAAA4V,eAAA5V,EAAAzc,WACAyc,EAAAzc,SAAA,iBAEAyc,EAAAzc,WACAyc,EAAA6a,SAAApd,GAAA/D,GACAA,EAAAohB,GAAAphB,EAAAsG,KAGAlC,GAAApE,KAIAyC,EAAAoC,GAAA,cAAA7E,GACAA,EAAAG,YAAA0E,GAAA,cAEA7E,EAYA,QAAAohB,IAAAphB,EAAAsG,GACA,GAAAzc,GAAAyc,EAAAzc,SACAgc,EAAA0N,GAAA1pB,GAAA,EACA,IAAAgc,EAAA,CACA,GAAAwb,GAAAxb,EAAAnD,WACApD,EAAA+hB,EAAAzc,SAAAyc,EAAAzc,QAAA7K,aACA,OAAAuM,GAAA9M,SAEAwG,IAAA7U,SAAA2jB,MACA,eAAAhZ,EAAAO,IAAA8K,UAAAC,GAAA,6IAOAyE,EAAAqO,WAAAjlB,OAAA,GAEA,IAAAoyB,EAAAzf,UAEA,cAAAtC,GAAAqH,GAAAL,EAAA,aAAAhH,IAAA6C,EAAAkf,EAAA,OAEA1a,GAAAL,EAAA,oBAAAhH,IAEA+hB,EAAAjf,aAAA,UAEAif,EAAAjf,aAAA,QACAyD,GAEAS,EAAA0X,eAAAkD,GAAAG,GACAC,GAAAthB,EAAAqhB,GACAA,KAGArhB,EAAAG,YAAA0F,GACA7F,GAGA,eAAAlK,EAAAO,IAAA8K,UAAAC,GAAA,4BAAAvX,GAYA,QAAAq3B,IAAAlhB,GACA,OAAAA,EAAA4B,UAAA5B,EAAAqF,gBACA,MAAA/K,GAAA0F,EAAAuF,YAYA,QAAA+b,IAAA3mB,EAAAD,GAIA,IAHA,GAEAxJ,GAAAnH,EAFAub,EAAA3K,EAAA4K,WACAlX,EAAAiX,EAAArW,OAEAZ,KACA6C,EAAAoU,EAAAjX,GAAA6C,KACAnH,EAAAub,EAAAjX,GAAAtE,MACA2Q,EAAA0H,aAAAlR,IAAAqwB,GAAA9oB,KAAAvH,GAEK,UAAAA,IAAA+N,EAAAlV,SAAA6S,SACL7S,EAAA6tB,MAAA,OAAAltB,QAAA,SAAA2Y,GACAI,GAAA/I,EAAA2I,KAHA3I,EAAA8I,aAAAtS,EAAAnH,GAoBA,QAAAy3B,IAAAxpB,EAAAqM,GACA,GAAAA,EAAA,CAKA,OADArE,GAAA9O,EADAuwB,EAAAzpB,EAAA0pB,cAAAv3B,OAAAqS,OAAA,MAEAnO,EAAA,EAAAgM,EAAAgK,EAAAuH,SAAA3c,OAA8CZ,EAAAgM,EAAOhM,IACrD2R,EAAAqE,EAAAuH,SAAAvd,IAEA6C,EAAA8O,EAAAgC,aAAA,WACAyf,EAAAvwB,KAAAuwB,EAAAvwB,QAAA1E,KAAAwT,GAGA,eAAAlK,EAAAO,IAAA8K,UAAAe,EAAAlC,EAAA,SACAoB,GAAA,uCAAApJ,EAAAvH,QAGA,KAAAS,IAAAuwB,GACAA,EAAAvwB,GAAAywB,GAAAF,EAAAvwB,GAAAmT,EAEA,IAAAA,EAAAC,gBAAA,CACA,GAAA0B,GAAA3B,EAAA6P,UACA,QAAAlO,EAAA/W,QAAA,IAAA+W,EAAA,GAAApE,WAAAoE,EAAA,GAAA5a,KAAAwR,OACA,MAEA6kB,GAAA,WAAAE,GAAAtd,EAAA6P,WAAA7P,KAWA,QAAAsd,IAAA3b,EAAAtE,GACA,GAAAmE,GAAA1a,SAAAqZ,wBACAwB,GAAA1L,EAAA0L,EACA,QAAA3X,GAAA,EAAAgM,EAAA2L,EAAA/W,OAAmCZ,EAAAgM,EAAOhM,IAAA,CAC1C,GAAAiT,GAAA0E,EAAA3X,IACA8V,GAAA7C,MAAAc,aAAA,SAAAd,EAAAc,aAAA,WACAV,EAAAc,YAAAlB,GACAA,EAAAiS,GAAAjS,GAAA,IAEAuE,EAAA1F,YAAAmB,GAEA,MAAAuE,GAaA,QAAA+b,IAAAj4B,GA8KA,QAAAkM,MAsBA,QAAAgsB,GAAA9X,EAAA+X,GACA,GAAA1R,GAAA,GAAAK,IAAAqR,EAAA/X,EAAA,MACAgH,MAAA,GAEA,mBAOA,MANAX,GAAAU,OACAV,EAAA2R;AAEAtZ,GAAAxI,QACAmQ,EAAAlG,SAEAkG,EAAArmB,OAxMAI,OAAA8Q,eAAAtR,EAAA6I,UAAA,SACAkL,IAAA,WACA,MAAA3S,MAAA0M,OAEAH,IAAA,SAAA0qB,GACAA,IAAAj3B,KAAA0M,OACA1M,KAAAk3B,SAAAD,MAaAr4B,EAAA6I,UAAAyZ,WAAA,WACAlhB,KAAAm3B,aACAn3B,KAAAo3B,YACAp3B,KAAAq3B,eACAr3B,KAAAs3B,YACAt3B,KAAAu3B,iBAOA34B,EAAA6I,UAAA0vB,WAAA,WACA,GAAA5b,GAAAvb,KAAA8gB,SACA7L,EAAAsG,EAAAtG,GACAlW,EAAAwc,EAAAxc,KACAA,KAAAkW,GACA,eAAAlK,EAAAO,IAAA8K,UAAAC,GAAA,6EAAArW,MAGAiV,EAAAsG,EAAAtG,GAAAgB,EAAAhB,GACAjV,KAAAw3B,eAAAviB,GAAA,IAAAA,EAAA4B,UAAA9X,EAEAwzB,GAAAvyB,KAAAiV,EAAAlW,EAAAiB,KAAA2gB,QAAA,MAOA/hB,EAAA6I,UAAA6vB,UAAA,WACA,GAAAG,GAAAz3B,KAAA8gB,SAAAzgB,KACAA,EAAAL,KAAA0M,MAAA+qB,QACA3nB,GAAAzP,KACAA,KACA,eAAA0K,EAAAO,IAAA8K,UAAAC,GAAA,0CAAArW,MAEA,IAGAsD,GAAAmC,EAHA1G,EAAAiB,KAAAguB,OAEAjlB,EAAA3J,OAAA2J,KAAA1I,EAGA,KADAiD,EAAAyF,EAAA7E,OACAZ,KACAmC,EAAAsD,EAAAzF,GAKAvE,GAAAyN,EAAAzN,EAAA0G,GAEO,eAAAsF,EAAAO,IAAA8K,UACPC,GAAA,eAAA5Q,EAAA,4LAAkJzF,MAFlJA,KAAAkN,OAAAzH,EAMAiZ,IAAAre,EAAAL,OASApB,EAAA6I,UAAAyvB,SAAA,SAAAD,GACAA,OACA,IAAAS,GAAA13B,KAAA0M,KACA1M,MAAA0M,MAAAuqB,CACA,IAAAluB,GAAAtD,EAAAnC,CAIA,KAFAyF,EAAA3J,OAAA2J,KAAA2uB,GACAp0B,EAAAyF,EAAA7E,OACAZ,KACAmC,EAAAsD,EAAAzF,GACAmC,IAAAwxB,IACAj3B,KAAAqN,SAAA5H,EAOA,KAFAsD,EAAA3J,OAAA2J,KAAAkuB,GACA3zB,EAAAyF,EAAA7E,OACAZ,KACAmC,EAAAsD,EAAAzF,GACAkJ,EAAAxM,KAAAyF,IAEAzF,KAAAkN,OAAAzH,EAGAiyB,GAAA9qB,OAAA+qB,SAAA33B,MACA0e,GAAAuY,EAAAj3B,MACAA,KAAAmN,WAUAvO,EAAA6I,UAAAyF,OAAA,SAAAzH,GACA,IAAAkI,EAAAlI,GAAA,CAKA,GAAApE,GAAArB,IACAZ,QAAA8Q,eAAA7O,EAAAoE,GACA2K,cAAA,EACAH,YAAA,EACA0C,IAAA,WACA,MAAAtR,GAAAqL,MAAAjH,IAEA8G,IAAA,SAAA7L,GACAW,EAAAqL,MAAAjH,GAAA/E,OAYA9B,EAAA6I,UAAA4F,SAAA,SAAA5H,GACAkI,EAAAlI,UACAzF,MAAAyF,IAQA7G,EAAA6I,UAAA0F,QAAA,WACA,OAAA7J,GAAA,EAAAgM,EAAAtP,KAAA0f,UAAAxb,OAA8CZ,EAAAgM,EAAOhM,IACrDtD,KAAA0f,UAAApc,GAAAs0B,QAAA,IAUAh5B,EAAA6I,UAAA8vB,cAAA,WACA,GAAAM,GAAA73B,KAAA8gB,SAAA+W,QACA,IAAAA,EACA,OAAApyB,KAAAoyB,GAAA,CACA,GAAAC,GAAAD,EAAApyB,GACAuK,GACAC,YAAA,EACAG,cAAA,EAEA,mBAAA0nB,IACA9nB,EAAA2C,IAAAmkB,EAAAgB,EAAA93B,MACAgQ,EAAAzD,IAAAzB,IAEAkF,EAAA2C,IAAAmlB,EAAAnlB,IAAAmlB,EAAA7jB,SAAA,EAAA6iB,EAAAgB,EAAAnlB,IAAA3S,MAAAmP,EAAA2oB,EAAAnlB,IAAA3S,MAAA8K,EACAkF,EAAAzD,IAAAurB,EAAAvrB,IAAA4C,EAAA2oB,EAAAvrB,IAAAvM,MAAA8K,GAEA1L,OAAA8Q,eAAAlQ,KAAAyF,EAAAuK,KA0BApR,EAAA6I,UAAA4vB,aAAA,WACA,GAAAl2B,GAAAnB,KAAA8gB,SAAA3f,OACA,IAAAA,EACA,OAAAsE,KAAAtE,GACAnB,KAAAyF,GAAA0J,EAAAhO,EAAAsE,GAAAzF,OASApB,EAAA6I,UAAA2vB,UAAA,WACA,GAAAW,GAAA/3B,KAAA8gB,SAAAkX,KACA,IAAAD,EACA,OAAAtyB,KAAAsyB,GACAlZ,GAAA7e,KAAAyF,EAAAsyB,EAAAtyB,KAQA,QAAAwyB,IAAAr5B,GAuBA,QAAAs5B,GAAAjrB,EAAAgI,GAGA,OADA9O,GAAAnH,EAAAQ,EADA+a,EAAAtF,EAAAuF,WAEAlX,EAAA,EAAAgM,EAAAiL,EAAArW,OAAqCZ,EAAAgM,EAAOhM,IAC5C6C,EAAAoU,EAAAjX,GAAA6C,KACAgyB,GAAAzqB,KAAAvH,KACAA,IAAAsI,QAAA0pB,GAAA,IAIAn5B,EAAAub,EAAAjX,GAAAtE,MACAylB,GAAAzlB,KACAA,GAAA,4BAEAQ,GAAAyN,EAAA0T,QAAA1T,EAAAyT,UAAA7L,MAAA7V,GAAA,GACAQ,EAAA44B,aAAA,EACAnrB,EAAAorB,IAAAlyB,EAAAsI,QAAA0pB,IAAA34B,IAaA,QAAA84B,GAAArrB,EAAA+I,EAAAuiB,GACA,GAAAA,EAAA,CACA,GAAAC,GAAA/yB,EAAAnC,EAAA4D,CACA,KAAAzB,IAAA8yB,GAEA,GADAC,EAAAD,EAAA9yB,GACAkX,GAAA6b,GACA,IAAAl1B,EAAA,EAAA4D,EAAAsxB,EAAAt0B,OAAwCZ,EAAA4D,EAAO5D,IAC/Cm1B,EAAAxrB,EAAA+I,EAAAvQ,EAAA+yB,EAAAl1B,QAGAm1B,GAAAxrB,EAAA+I,EAAAvQ,EAAA+yB,IAeA,QAAAC,GAAAxrB,EAAA+I,EAAAvQ,EAAAjG,EAAA+b,GACA,GAAApc,SAAAK,EACA,iBAAAL,EACA8N,EAAA+I,GAAAvQ,EAAAjG,EAAA+b,OACK,eAAApc,EAAA,CACL,GAAAgC,GAAA8L,EAAA6T,SAAA3f,QACAuoB,EAAAvoB,KAAA3B,EACAkqB,GACAzc,EAAA+I,GAAAvQ,EAAAikB,EAAAnO,GAEA,eAAAxQ,EAAAO,IAAA8K,UAAAC,GAAA,oBAAA7W,EAAA,mCAAAwW,EAAA,MAAAvQ,EAAA,KAAAwH,OAEKzN,IAAA,WAAAL,GACLs5B,EAAAxrB,EAAA+I,EAAAvQ,EAAAjG,aAiBA,QAAAk5B,KACA14B,KAAAsgB,cACAtgB,KAAAsgB,aAAA,EACAtgB,KAAAuf,UAAA5f,QAAAg5B,IAUA,QAAAA,GAAAzf,IACAA,EAAAoH,aAAAhK,EAAA4C,EAAAoG,MACApG,EAAA+H,UAAA,YAQA,QAAA2X,KACA54B,KAAAsgB,cACAtgB,KAAAsgB,aAAA,EACAtgB,KAAAuf,UAAA5f,QAAAk5B,IAUA,QAAAA,GAAA3f,GACAA,EAAAoH,cAAAhK,EAAA4C,EAAAoG,MACApG,EAAA+H,UAAA,YA1IAriB,EAAA6I,UAAA0Z,YAAA,WACA,GAAA5F,GAAAvb,KAAA8gB,QACAvF,GAAA4V,cACA+G,EAAAl4B,KAAAub,EAAAtG,IAEAqjB,EAAAt4B,KAAA,MAAAub,EAAAud,QACAR,EAAAt4B,KAAA,SAAAub,EAAAlc,QAqFAT,EAAA6I,UAAAsxB,cAAA,WACA/4B,KAAAq4B,IAAA,gBAAAK,GACA14B,KAAAq4B,IAAA,gBAAAO,IAuDAh6B,EAAA6I,UAAAwZ,UAAA,SAAA+X,GACAh5B,KAAAi5B,MAAA,YAAAD,EACA,IAAAR,GAAAx4B,KAAA8gB,SAAAkY,EACA,IAAAR,EACA,OAAAl1B,GAAA,EAAA4D,EAAAsxB,EAAAt0B,OAA0CZ,EAAA4D,EAAO5D,IACjDk1B,EAAAl1B,GAAAhF,KAAA0B,KAGAA,MAAAi5B,MAAA,QAAAD,IAIA,QAAAE,OA4BA,QAAAC,IAAAnH,EAAA/kB,EAAAgI,EAAA6T,EAAAxE,EAAAxJ,GACA9a,KAAAiN,KACAjN,KAAAiV,KAEAjV,KAAAgyB,aACAhyB,KAAAmG,KAAA6rB,EAAA7rB,KACAnG,KAAAkT,WAAA8e,EAAA9e,WACAlT,KAAAmS,IAAA6f,EAAA7f,IACAnS,KAAA20B,UAAA3C,EAAA2C,UACA30B,KAAAkS,QAAA8f,EAAA9f,QACAlS,KAAA40B,QAAA50B,KAAA20B,WAAA30B,KAAA20B,UAAAC,QAEA50B,KAAAo5B,SAAA,EACAp5B,KAAAq5B,QAAA,EACAr5B,KAAAs5B,WAAA,KAEAt5B,KAAAu5B,MAAAzQ,EACA9oB,KAAA2gB,OAAA2D,EACAtkB,KAAA4gB,MAAA9F,EAEA,eAAA/P,EAAAO,IAAA8K,UAAApW,KAAAiV,KACAjV,KAAAiV,GAAAukB,gBAAAx5B,KAAAiV,GAAAukB,oBACAx5B,KAAAiV,GAAAukB,gBAAA/3B,KAAAzB,OAsPA,QAAAy5B,IAAA76B,GAOAA,EAAA6I,UAAAuZ,WAAA,SAAAxL,GACA,GAAAif,GAAAz0B,KAAA8gB,SAAA4Y,IACA,IAAAjF,EAAA,CACA,GAAAkF,IAAA35B,KAAA2gB,QAAA3gB,KAAA0gB,UAAAlB,KACAhK,GACAmkB,EAAAlF,KAAAz0B,OACA25B,EAAAlF,GAAA,MAGAkF,EAAAlF,GAAAz0B,OAiBApB,EAAA6I,UAAAmyB,SAAA,SAAA3kB,GACA,GAAAsG,GAAAvb,KAAA8gB,SAOAqC,EAAAlO,CAKA,IAJAA,EAAAihB,GAAAjhB,EAAAsG,GACAvb,KAAA65B,aAAA5kB,GAGA,IAAAA,EAAA4B,UAAA,OAAAE,EAAA9B,EAAA,UAMA,GAAA0d,GAAA3yB,KAAA0gB,UAAA1gB,KAAA0gB,SAAAI,SACAgZ,EAAApH,GAAAzd,EAAAsG,EAAAoX,EAGA8D,IAAAz2B,KAAAub,EAAA6a,SAGA,IAAA2D,GACAC,EAAAh6B,KAAA+gB,WAGAxF,GAAA0e,kBACAF,EAAAC,EAAAnR,OACAkR,IACAA,EAAAC,EAAAnR,OAAAxmB,GAAA4S,EAAAsG,IAMA,IAAA2e,GAAAJ,EAAA95B,KAAAiV,EAAAjV,KAAA2gB,QACAwZ,EAAAJ,IAAA/5B,KAAAiV,GAAA5S,GAAA4S,EAAAsG,GAAAvb,KAAAiV,EAIAjV,MAAAygB,UAAA,WACAyZ,IAGAC,GAAA,IAIA5e,EAAA9M,SACAA,EAAA0U,EAAAlO,GAGAjV,KAAA+V,aAAA,EACA/V,KAAAihB,UAAA,cAUAriB,EAAA6I,UAAAoyB,aAAA,SAAA5kB,GACAoE,GAAApE,IACAjV,KAAAggB,aAAA,EACAhgB,KAAAsf,IAAAtf,KAAAkgB,eAAAjL,EAAA0C,WACA3X,KAAAmgB,aAAAlL,EAAA2E,UAEA,IAAA5Z,KAAAkgB,eAAArJ,WACA7W,KAAAkgB,eAAA7f,KAAAL,KAAAmgB,aAAA9f,KAAA,IAEAL,KAAAigB,UAAAhL,GAEAjV,KAAAsf,IAAArK,EAEAjV,KAAAsf,IAAAmL,QAAAzqB,KACAA,KAAAihB,UAAA,kBAaAriB,EAAA6I,UAAA0mB,SAAA,SAAA6D,EAAAzb,EAAAuS,EAAAxE,EAAAxJ,GACA9a,KAAA2f,YAAAle,KAAA,GAAA03B,IAAAnH,EAAAhyB,KAAAuW,EAAAuS,EAAAxE,EAAAxJ,KAYAlc,EAAA6I,UAAA2yB,SAAA,SAAA5kB,EAAA6kB,GACA,GAAAr6B,KAAAugB,kBAIA,YAHA8Z,GACAr6B,KAAAs6B,WAKA,IAAAC,GACAC,EAEAn5B,EAAArB,KAKAy6B,EAAA,YACAF,GAAAC,GAAAH,GACAh5B,EAAAi5B,WAKA9kB,IAAAxV,KAAAsf,MACAkb,GAAA,EACAx6B,KAAA0B,QAAA,WACA84B,GAAA,EACAC,OAIAz6B,KAAAihB,UAAA,iBACAjhB,KAAAugB,mBAAA,CACA,IAAAjd,GAGAqT,EAAA3W,KAAA0F,OAQA,KAPAiR,MAAA4J,oBACA5J,EAAA4I,UAAA7d,QAAA1B,MAEAA,KAAAghB,YAAA,IAGA1d,EAAAtD,KAAAuf,UAAArb,OACAZ,KACAtD,KAAAuf,UAAAjc,GAAAo3B,UAYA,KATA16B,KAAAw3B,gBACAx3B,KAAAw3B,iBAIAx3B,KAAAygB,WACAzgB,KAAAygB,YAEAnd,EAAAtD,KAAA0f,UAAAxb,OACAZ,KACAtD,KAAA0f,UAAApc,GAAAq3B,UAGA36B,MAAAsf,MACAtf,KAAAsf,IAAAmL,QAAA,MAGA8P,GAAA,EACAE,KASA77B,EAAA6I,UAAA6yB,SAAA,WACAt6B,KAAAogB,eAMApgB,KAAA4gB,OACA5gB,KAAA4gB,MAAAC,SAAAnf,QAAA1B,MAIAA,KAAA0M,OAAA1M,KAAA0M,MAAAE,QACA5M,KAAA0M,MAAAE,OAAA+qB,SAAA33B,MAUAA,KAAAsf,IAAAtf,KAAA0F,QAAA1F,KAAAsB,MAAAtB,KAAAuf,UAAAvf,KAAA0f,UAAA1f,KAAA0gB,SAAA1gB,KAAA2gB,OAAA3gB,KAAA2f,YAAA,KAEA3f,KAAAogB,cAAA,EACApgB,KAAAihB,UAAA,aAEAjhB,KAAA46B,SAIA,QAAAC,IAAAj8B,GAcAA,EAAA6I,UAAAqzB,cAAA,SAAA97B,EAAA+7B,EAAA7oB,EAAA8oB,GACA,GAAArpB,GAAAvC,EAAAnE,EAAAkH,EAAA8oB,EAAA33B,EAAAgM,EAAApI,EAAAmB,CACA,KAAA/E,EAAA,EAAAgM,EAAA4C,EAAAhO,OAAmCZ,EAAAgM,EAAOhM,IAG1C,GAFAqO,EAAAO,EAAA8oB,EAAA1rB,EAAAhM,EAAA,EAAAA,GACA8L,EAAAwM,GAAA5b,KAAA8gB,SAAA,UAAAnP,EAAAxL,MAAA,GACAiJ,IACAA,EAAA4rB,EAAA5rB,EAAA4rB,MAAA5rB,EAAA8rB,MAAA9rB,EACA,kBAAAA,IAAA,CAGA,GAFAnE,EAAA+vB,GAAAh8B,EAAA+7B,IAAA/7B,GACAi8B,EAAAD,EAAA,IACArpB,EAAA1G,KACA,IAAA/D,EAAA,EAAAmB,EAAAsJ,EAAA1G,KAAA/G,OAA2CgD,EAAAmB,EAAOnB,IAClDiL,EAAAR,EAAA1G,KAAA/D,GACA+D,EAAA/D,EAAA+zB,GAAA9oB,EAAAE,QAAArS,KAAAuB,KAAA4Q,EAAAnT,OAAAmT,EAAAnT,KAGAA,GAAAoQ,EAAAhE,MAAApL,KAAAiL,GAEA,MAAAjM,IAcAJ,EAAA6I,UAAA0zB,kBAAA,SAAAn8B,EAAAiS,GACA,GAAAmqB,EAOA,IALAA,EADA,kBAAAp8B,GACAA,EAEA4c,GAAA5b,KAAA8gB,SAAA,aAAA9hB,GAAA,GAOA,GAAAo8B,EAAA7f,QA0BAtK,EAAAmqB,OAzBA,IAAAA,EAAAC,SAEApqB,EAAAmqB,EAAAC,cACO,IAAAD,EAAAE,UAEPF,EAAAG,iBAAA95B,KAAAwP,OACO,CACPmqB,EAAAE,WAAA,CACA,IAAAE,GAAAJ,EAAAG,kBAAAtqB,EACAmqB,GAAA98B,KAAA0B,KAAA,SAAAkC,GACA4N,EAAA5N,KACAA,EAAAtD,EAAAsG,OAAAhD,IAGAk5B,EAAAC,SAAAn5B,CAEA,QAAAoB,GAAA,EAAAgM,EAAAksB,EAAAt3B,OAAyCZ,EAAAgM,EAAOhM,IAChDk4B,EAAAl4B,GAAApB,IAES,SAAAu5B,GACT,eAAA1wB,EAAAO,IAAA8K,UAAAC,GAAA,qDAAArX,GAAA,KAAAA,EAAA,UAAAy8B,EAAA,aAAAA,EAAA,SAYA,QAAAC,IAAA98B,GAyKA,QAAA+8B,GAAAr0B,GACA,MAAA9G,MAAAC,MAAAD,KAAA4Q,UAAA9J,IAjKA1I,EAAA6I,UAAAlG,KAAA,SAAAiM,EAAAouB,GACA,GAAA15B,GAAA+gB,GAAAzV,EACA,IAAAtL,EAAA,CACA,GAAA05B,EAAA,CACA,GAAAv6B,GAAArB,IACA,mBACAqB,EAAAw6B,WAAAtsB,EAAApE,UACA,IAAAvK,GAAAsB,EAAAyQ,IAAArU,KAAA+C,IAEA,OADAA,GAAAw6B,WAAA,KACAj7B,GAGA,IACA,MAAAsB,GAAAyQ,IAAArU,KAAA0B,WACS,MAAAiE,OAcTrF,EAAA6I,UAAAxH,KAAA,SAAAuN,EAAA9M,GACA,GAAAwB,GAAA+gB,GAAAzV,GAAA,EACAtL,MAAAqK,KACArK,EAAAqK,IAAAjO,KAAA0B,UAAAU,IAUA9B,EAAA6I,UAAAq0B,QAAA,SAAAr2B,GACA2H,EAAApN,KAAA0M,MAAAjH,IAeA7G,EAAA6I,UAAAs0B,OAAA,SAAApW,EAAA1U,EAAAsK,GACA,GACAvN,GADAf,EAAAjN,IAEA,iBAAA2lB,KACA3X,EAAAuE,EAAAoT,GACAA,EAAA3X,EAAAkF,WAEA,IAAAmS,GAAA,GAAAK,IAAAzY,EAAA0Y,EAAA1U,GACA1R,KAAAgc,KAAAhc,KACAy8B,KAAAzgB,KAAAygB,KACA9pB,QAAAlE,KAAAkE,QACAuT,MAAAlK,KAAAkK,QAAA,GAKA,OAHAlK,MAAA0gB,WACAhrB,EAAA3S,KAAA2O,EAAAoY,EAAArmB,OAEA,WACAqmB,EAAAsV,aAYA/7B,EAAA6I,UAAAoN,MAAA,SAAAzO,EAAAw1B,GAEA,GAAAM,GAAAxuB,KAAAtH,GAAA,CACA,GAAA+F,GAAAoG,EAAAnM,GAIA1F,EAAAV,KAAAuB,KAAA4K,EAAA+G,WAAA0oB,EACA,OAAAzvB,GAAA+F,QAAAlS,KAAA86B,cAAAp6B,EAAA,KAAAyL,EAAA+F,SAAAxR,EAGA,MAAAV,MAAAuB,KAAA6E,EAAAw1B,IAWAh9B,EAAA6I,UAAA00B,aAAA,SAAA/1B,GACA,GAAA0L,GAAAoC,EAAA9N,GACA6G,EAAAjN,IACA,OAAA8R,GACA,IAAAA,EAAA5N,OACA+I,EAAA4H,MAAA/C,EAAA,GAAA9S,OAAA,GAEA8S,EAAAhM,IAAA,SAAA2O,GACA,MAAAA,GAAAF,IAAAtH,EAAA4H,MAAAJ,EAAAzV,OAAAyV,EAAAzV,QACS2V,KAAA,IAGTvO,GAYAxH,EAAA6I,UAAA20B,KAAA,SAAA3a,GACA,GAAAphB,GAAAohB,EAAAuB,GAAAhjB,KAAA0M,MAAA+U,GAAAzhB,KAAA0M,KAKA,IAJArM,IACAA,EAAAs7B,EAAAt7B,KAGAohB,EAAA,CACA,GAAAhc,EACA,KAAAA,IAAAzF,MAAA8gB,SAAA+W,SACAx3B,EAAAoF,GAAAk2B,EAAA37B,KAAAyF,GAEA,IAAAzF,KAAAguB,OACA,IAAAvoB,IAAAzF,MAAAguB,OACA3tB,EAAAoF,GAAAk2B,EAAA37B,KAAAyF,IAIA42B,QAAAC,IAAAj8B,IAgBA,QAAAk8B,IAAA39B,GAkHA,QAAA49B,GAAAvvB,EAAAiI,EAAAjE,EAAAwY,EAAAgT,EAAAC,GACAxnB,EAAAe,EAAAf,EACA,IAAAynB,IAAArmB,EAAApB,GACAQ,EAAA+T,KAAA,GAAAkT,EAAAF,EAAAC,EACAE,GAAAD,IAAA1vB,EAAAqT,cAAAhK,EAAArJ,EAAAqS,IAYA,OAXArS,GAAA+S,aACAtF,GAAAzN,EAAAiT,eAAAjT,EAAAkT,aAAA,SAAA5J,GACAb,EAAAa,EAAArB,EAAAjI,KAEAgE,QAEAyE,EAAAzI,EAAAqS,IAAApK,EAAAjI,EAAAgE,GAEA2rB,GACA3vB,EAAAgU,UAAA,YAEAhU,EASA,QAAAgJ,GAAAhB,GACA,sBAAAA,GAAA7U,SAAA+V,cAAAlB,KAYA,QAAA4nB,GAAA5nB,EAAAC,EAAAjI,EAAAgE,GACAiE,EAAAE,YAAAH,GACAhE,OAYA,QAAA6rB,GAAA7nB,EAAAC,EAAAjI,EAAAgE,GACAqE,EAAAL,EAAAC,GACAjE,OAWA,QAAA8rB,GAAA9nB,EAAAhI,EAAAgE,GACAuE,EAAAP,GACAhE,OA5KArS,EAAA6I,UAAAu1B,UAAA,SAAA5tB,GACApE,GAAAoE,EAAApP,OAWApB,EAAA6I,UAAAw1B,UAAA,SAAA/nB,EAAAjE,EAAAwY,GACA,MAAA+S,GAAAx8B,KAAAkV,EAAAjE,EAAAwY,EAAAoT,EAAA7nB,IAWApW,EAAA6I,UAAAy1B,WAAA,SAAAhoB,EAAAjE,EAAAwY,GAOA,MANAvU,GAAAe,EAAAf,GACAA,EAAAqE,gBACAvZ,KAAAm9B,QAAAjoB,EAAAyC,WAAA1G,EAAAwY,GAEAzpB,KAAAi9B,UAAA/nB,EAAAjE,EAAAwY,GAEAzpB,MAWApB,EAAA6I,UAAA01B,QAAA,SAAAjoB,EAAAjE,EAAAwY,GACA,MAAA+S,GAAAx8B,KAAAkV,EAAAjE,EAAAwY,EAAAqT,EAAAznB,IAWAzW,EAAA6I,UAAA21B,OAAA,SAAAloB,EAAAjE,EAAAwY,GAOA,MANAvU,GAAAe,EAAAf,GACAA,EAAAsC,YACAxX,KAAAm9B,QAAAjoB,EAAAsC,YAAAvG,EAAAwY,GAEAzpB,KAAAi9B,UAAA/nB,EAAA0B,WAAA3F,EAAAwY,GAEAzpB,MAUApB,EAAA6I,UAAA/F,QAAA,SAAAuP,EAAAwY,GACA,IAAAzpB,KAAAsf,IAAA1I,WACA,MAAA3F,OAEA,IAAAosB,GAAAr9B,KAAAsgB,aAAAhK,EAAAtW,KAAAsf,IAGA+d,KAAA5T,GAAA,EACA,IAAApoB,GAAArB,KACAs9B,EAAA,WACAD,GAAAh8B,EAAA4f,UAAA,YACAhQ,OAEA,IAAAjR,KAAAggB,YACAnF,GAAA7a,KAAAkgB,eAAAlgB,KAAAmgB,aAAAngB,UAAAigB,UAAAqd,OACK,CACL,GAAA5nB,GAAA+T,KAAA,EAAAsT,EAAAxnB,CACAG,GAAA1V,KAAAsf,IAAAtf,KAAAs9B,GAEA,MAAAt9B,OAsFA,QAAAu9B,IAAA3+B,GAmLA,QAAA4+B,GAAAvwB,EAAA4K,EAAA/T,GACA,GAAA6S,GAAA1J,EAAAvH,OAGA,IAAAiR,GAAA7S,IAAA25B,EAAA/vB,KAAAmK,GACA,KAAAlB,GACAA,EAAAoJ,aAAAlI,IAAAlB,EAAAoJ,aAAAlI,IAAA,GAAA/T,EACA6S,IAAAjR,QAlLA9G,EAAA6I,UAAA4wB,IAAA,SAAAxgB,EAAAzI,GAGA,OAFApP,KAAA8f,QAAAjI,KAAA7X,KAAA8f,QAAAjI,QAAApW,KAAA2N,GACAouB,EAAAx9B,KAAA6X,EAAA,GACA7X,MAWApB,EAAA6I,UAAAi2B,MAAA,SAAA7lB,EAAAzI,GAEA,QAAA9O,KACAe,EAAAu5B,KAAA/iB,EAAAvX,GACA8O,EAAAhE,MAAApL,KAAAmL,WAHA,GAAA9J,GAAArB,IAOA,OAFAM,GAAA8O,KACApP,KAAAq4B,IAAAxgB,EAAAvX,GACAN,MAWApB,EAAA6I,UAAAmzB,KAAA,SAAA/iB,EAAAzI,GACA,GAAAosB,EAEA,KAAArwB,UAAAjH,OAAA,CACA,GAAAlE,KAAA0F,QACA,IAAAmS,IAAA7X,MAAA8f,QACA0b,EAAAx7B,KAAA8f,QAAAjI,GACA2jB,GACAgC,EAAAx9B,KAAA6X,GAAA2jB,EAAAt3B,OAKA,OADAlE,MAAA8f,WACA9f,KAIA,GADAw7B,EAAAx7B,KAAA8f,QAAAjI,IACA2jB,EACA,MAAAx7B,KAEA,QAAAmL,UAAAjH,OAGA,MAFAs5B,GAAAx9B,KAAA6X,GAAA2jB,EAAAt3B,QACAlE,KAAA8f,QAAAjI,GAAA,KACA7X,IAKA,KAFA,GAAAiR,GACA3N,EAAAk4B,EAAAt3B,OACAZ,KAEA,GADA2N,EAAAuqB,EAAAl4B,GACA2N,IAAA7B,GAAA6B,EAAA7B,OAAA,CACAouB,EAAAx9B,KAAA6X,MACA2jB,EAAAmC,OAAAr6B,EAAA,EACA,OAGA,MAAAtD,OAUApB,EAAA6I,UAAAwxB,MAAA,SAAAphB,GACA,GAAA+lB,GAAA,gBAAA/lB,EACAA,GAAA+lB,EAAA/lB,IAAA1R,IACA,IAAAq1B,GAAAx7B,KAAA8f,QAAAjI,GACAgmB,EAAAD,IAAApC,CACA,IAAAA,EAAA,CACAA,IAAAt3B,OAAA,EAAAqL,EAAAisB,IAKA,IAAAsC,GAAAF,GAAApC,EAAA1F,KAAA,SAAA7kB,GACA,MAAAA,GAAAmnB,aAEA0F,KACAD,GAAA,EAGA,QADA5yB,GAAAsE,EAAApE,UAAA,GACA7H,EAAA,EAAAgM,EAAAksB,EAAAt3B,OAAqCZ,EAAAgM,EAAOhM,IAAA,CAC5C,GAAA2N,GAAAuqB,EAAAl4B,GACApB,EAAA+O,EAAA7F,MAAApL,KAAAiL,EACA/I,MAAA,GAAA47B,IAAA7sB,EAAAmnB,cACAyF,GAAA,IAIA,MAAAA,IAUAj/B,EAAA6I,UAAAs2B,WAAA,SAAAlmB,GACA,GAAA+lB,GAAA,gBAAA/lB,EAIA,IAHAA,EAAA+lB,EAAA/lB,IAAA1R,KAGAnG,KAAA+f,aAAAlI,GAAA,CACA,GAAAgJ,GAAA7gB,KAAAuf,UACAtU,EAAAsE,EAAApE,UACAyyB,KAGA3yB,EAAA,IAAiB9E,KAAA0R,EAAAmmB,OAAAh+B,MAEjB,QAAAsD,GAAA,EAAAgM,EAAAuR,EAAA3c,OAAwCZ,EAAAgM,EAAOhM,IAAA,CAC/C,GAAA4V,GAAA2H,EAAAvd,GACAu6B,EAAA3kB,EAAA+f,MAAA7tB,MAAA8N,EAAAjO,EACA4yB,IACA3kB,EAAA6kB,WAAA3yB,MAAA8N,EAAAjO,GAGA,MAAAjL,QAUApB,EAAA6I,UAAAw2B,UAAA,SAAApmB,GACA,GAAAgmB,GAAA79B,KAAAi5B,MAAA7tB,MAAApL,KAAAmL,UACA,IAAA0yB,EAAA,CACA,GAAAlnB,GAAA3W,KAAA0F,QACAuF,EAAAsE,EAAApE,UAIA,KADAF,EAAA,IAAe9E,KAAA0R,EAAAmmB,OAAAh+B,MACf2W,GACAknB,EAAAlnB,EAAAsiB,MAAA7tB,MAAAuL,EAAA1L,GACA0L,EAAAknB,EAAAlnB,EAAAjR,QAAA,IAEA,OAAA1F,OAaA,IAAAy9B,GAAA,SAaA,QAAAS,IAAAt/B,GAmCA,QAAAsB,KACAF,KAAAsgB,aAAA,EACAtgB,KAAAqgB,UAAA,EACArgB,KAAAihB,UAAA,SA3BAriB,EAAA6I,UAAA2Z,OAAA,SAAAnM,GACA,MAAAjV,MAAA+V,iBACA,eAAAhL,EAAAO,IAAA8K,UAAAC,GAAA,uCAAArW,QAGAiV,EAAAgB,EAAAhB,GACAA,IACAA,EAAA7U,SAAAsZ,cAAA,QAEA1Z,KAAA45B,SAAA3kB,GACAjV,KAAA+4B,gBACAziB,EAAAtW,KAAAsf,MACAtf,KAAAihB,UAAA,YACA/gB,EAAA5B,KAAA0B,OAEAA,KAAA09B,MAAA,gBAAAx9B,GAEAF,OAqBApB,EAAA6I,UAAAizB,SAAA,SAAAllB,EAAA6kB,GACAr6B,KAAAo6B,SAAA5kB,EAAA6kB,IAcAz7B,EAAA6I,UAAA02B,SAAA,SAAAlpB,EAAA6T,EAAAxE,EAAAxJ,GACA,MAAAzY,IAAA4S,EAAAjV,KAAA8gB,UAAA,GAAA9gB,KAAAiV,EAAA6T,EAAAxE,EAAAxJ,IAkBA,QAAAlc,IAAA2c,GACAvb,KAAAqf,MAAA9D,GAoHA,QAAA6iB,IAAArtB,EAAAvH,EAAAyxB,GAGA,MAFAA,KAAA1P,SAAA0P,EAAA,MACAzxB,EAAAuE,EAAAvE,GACA,gBAAAA,GAAAuH,EAAAxC,MAAA0sB,IAAAzxB,GAAAuH,EAWA,QAAAstB,IAAAttB,EAAA/O,EAAAs8B,GAEA,GADAvtB,EAAAwtB,GAAAxtB,GACA,MAAA/O,EACA,MAAA+O,EAEA,sBAAA/O,GACA,MAAA+O,GAAAY,OAAA3P,EAGAA,IAAA,GAAAA,GAAAgN,aAQA,QADAtI,GAAAjB,EAAA/E,EAAAwG,EAJAsC,EAAA,OAAA80B,EAAA,IAEAv1B,EAAAmC,MAAAzD,UAAAjE,OAAA4H,SAAAmE,EAAApE,UAAA3B,IACAtH,KAEAoB,EAAA,EAAAgM,EAAAyB,EAAA7M,OAAiCZ,EAAAgM,EAAOhM,IAIxC,GAHAoD,EAAAqK,EAAAzN,GACA5C,EAAAgG,KAAA83B,QAAA93B,EACAQ,EAAA6B,EAAA7E,QAEA,KAAAgD,KAEA,GADAzB,EAAAsD,EAAA7B,GACA,SAAAzB,GAAAqR,GAAApQ,EAAA+3B,KAAAz8B,IAAA8U,GAAAkM,GAAAtiB,EAAA+E,GAAAzD,GAAA,CACAE,EAAAT,KAAAiF,EACA,YAGKoQ,IAAApQ,EAAA1E,IACLE,EAAAT,KAAAiF,EAGA,OAAAxE,GAUA,QAAAw8B,IAAA3tB,GAiCA,QAAA4tB,GAAAtwB,EAAAC,EAAAswB,GACA,GAAAC,GAAAC,EAAAF,EASA,OARAC,KACA,SAAAA,IACAhvB,EAAAxB,IAAA,UAAAA,SAAAmwB,QACA3uB,EAAAvB,IAAA,UAAAA,SAAAkwB,SAEAnwB,EAAAwB,EAAAxB,GAAA2U,GAAA3U,EAAAwwB,GAAAxwB,EACAC,EAAAuB,EAAAvB,GAAA0U,GAAA1U,EAAAuwB,GAAAvwB,GAEAD,IAAAC,EAAA,EAAAD,EAAAC,EAAAywB,KA1CA,GAAAC,GAAA,KACAF,EAAAv3B,MACAwJ,GAAAwtB,GAAAxtB,EAGA,IAAA9F,GAAAsE,EAAApE,UAAA,GACA4zB,EAAA9zB,IAAA/G,OAAA,EACA,iBAAA66B,IACAA,IAAA,OACA9zB,IAAA/G,OAAA,EAAA+G,EAAAsD,MAAA,MAAAtD,GAEA8zB,EAAA,CAIA,IAAAE,GAAAh0B,EAAA,EACA,OAAAg0B,IAEG,kBAAAA,GAEHD,EAAA,SAAA3wB,EAAAC,GACA,MAAA2wB,GAAA5wB,EAAAC,GAAAywB,IAIAD,EAAA5zB,MAAAzD,UAAAjE,OAAA4H,SAAAH,GACA+zB,EAAA,SAAA3wB,EAAAC,EAAAhL,GAEA,MADAA,MAAA,EACAA,GAAAw7B,EAAA56B,OAAA,EAAAy6B,EAAAtwB,EAAAC,EAAAhL,GAAAq7B,EAAAtwB,EAAAC,EAAAhL,IAAA07B,EAAA3wB,EAAAC,EAAAhL,EAAA,KAkBAyN,EAAAxC,QAAAsjB,KAAAmN,IA7BAjuB,EAuCA,QAAA+F,IAAApW,EAAAsB,GACA,GAAAsB,EACA,IAAAwM,EAAApP,GAAA,CACA,GAAAqI,GAAA3J,OAAA2J,KAAArI,EAEA,KADA4C,EAAAyF,EAAA7E,OACAZ,KACA,GAAAwT,GAAApW,EAAAqI,EAAAzF,IAAAtB,GACA,aAGG,IAAA2a,GAAAjc,IAEH,IADA4C,EAAA5C,EAAAwD,OACAZ,KACA,GAAAwT,GAAApW,EAAA4C,GAAAtB,GACA,aAGG,UAAAtB,EACH,MAAAA,GAAAgH,WAAAsH,cAAA8B,QAAA9O,MAwHA,QAAAk9B,IAAAtgC,GA2GA,QAAAugC,GAAAh5B,GAEA,UAAAie,UAAA,mBAAAnV,EAAA9I,GAAA,wCAnGAvH,EAAA2c,SACA2Y,cACAkL,qBACAltB,WACAmtB,eACA/5B,cACAg6B,YACA7wB,SAAA,GAOA7P,EAAAqC,QACArC,EAAA4U,UACA5U,EAAA2N,MACA3N,EAAA,UAAAwO,EACAxO,EAAAoM,YAMApM,EAAA2gC,YACA3gC,EAAAqrB,mBACArrB,EAAA81B,sBACA91B,EAAA4gC,SACA/d,QACArb,QACAtH,YACA2gC,aACAvsB,eASAtU,EAAAsrB,IAAA,CACA,IAAAA,GAAA,CAQAtrB,GAAAsG,OAAA,SAAAw6B,GACAA,OACA,IAAAC,GAAA3/B,KACA4/B,EAAA,IAAAD,EAAAzV,GACA,IAAA0V,GAAAF,EAAAG,MACA,MAAAH,GAAAG,KAEA,IAAA15B,GAAAu5B,EAAAv5B,MAAAw5B,EAAApkB,QAAApV,IACA,gBAAA4E,EAAAO,IAAA8K,WACA,mBAAA1I,KAAAvH,KACAkQ,GAAA,4BAAAlQ,EAAA,gFACAA,EAAA,MAGA,IAAA25B,GAAAX,EAAAh5B,GAAA,eAqBA,OApBA25B,GAAAr4B,UAAArI,OAAAqS,OAAAkuB,EAAAl4B,WACAq4B,EAAAr4B,UAAAsZ,YAAA+e,EACAA,EAAA5V,QACA4V,EAAAvkB,QAAAuB,GAAA6iB,EAAApkB,QAAAmkB,GACAI,EAAA,SAAAH,EAEAG,EAAA56B,OAAAy6B,EAAAz6B,OAGAsO,GAAAusB,YAAApgC,QAAA,SAAAR,GACA2gC,EAAA3gC,GAAAwgC,EAAAxgC,KAGAgH,IACA25B,EAAAvkB,QAAAjW,WAAAa,GAAA25B,GAGAF,IACAF,EAAAG,MAAAC,GAEAA,GAwBAlhC,EAAAohC,IAAA,SAAAC,GAEA,IAAAA,EAAAC,UAAA,CAIA,GAAAj1B,GAAAsE,EAAApE,UAAA,EAQA,OAPAF,GAAA/E,QAAAlG,MACA,kBAAAigC,GAAAE,QACAF,EAAAE,QAAA/0B,MAAA60B,EAAAh1B,GAEAg1B,EAAA70B,MAAA,KAAAH,GAEAg1B,EAAAC,WAAA,EACAlgC,OAQApB,EAAAye,MAAA,SAAAA,GACAze,EAAA2c,QAAAuB,GAAAle,EAAA2c,QAAA8B,IAWA7J,GAAAusB,YAAApgC,QAAA,SAAAR,GACAP,EAAAO,GAAA,SAAAf,EAAAgiC,GACA,MAAAA,IAIA,eAAAr1B,EAAAO,IAAA8K,UACA,cAAAjX,IAAAsc,GAAA/N,KAAAtP,IAAAsd,GAAAhO,KAAAtP,KACAiY,GAAA,kEAAAjY,GAGA,cAAAe,GAAA2Q,EAAAswB,KACAA,EAAAj6B,OACAi6B,EAAAj6B,KAAA/H,GAEAgiC,EAAAxhC,EAAAsG,OAAAk7B,IAEApgC,KAAAub,QAAApc,EAAA,KAAAf,GAAAgiC,EACAA,GAfApgC,KAAAub,QAAApc,EAAA,KAAAf,MAqBA8G,EAAAtG,EAAA+W,eArwTA,GAAArI,IAAAlO,OAAAqI,UAAA6F,eAoBAG,GAAA,iDA8EAiB,GAAA,SAiBAK,GAAA,oBAkBAG,GAAA,oBA4EAxH,GAAAtI,OAAAqI,UAAAC,SACAqI,GAAA,kBAaA4M,GAAAzR,MAAAyR,QAsGAsB,GAAA,gBAGAoiB,GAAA,mBAAAx/B,SAAA,oBAAAzB,OAAAqI,UAAAC,SAAApJ,KAAAuC,QAGAukB,GAAAib,IAAAx/B,OAAAy/B,6BAGAC,GAAAF,IAAAx/B,OAAA2/B,UAAAC,UAAAzxB,cACA0xB,GAAAH,OAAAzvB,QAAA,aACAyH,GAAAgoB,OAAAzvB,QAAA,cACA6vB,GAAAJ,OAAAzvB,QAAA,aACA8vB,GAAAL,IAAA,0BAAA7yB,KAAA6yB,IACAM,GAAAD,IAAAL,GAAAxuB,MAAA,eACA+uB,GAAAD,OAAA,GAAAhU,MAAA,KAGAkU,GAAAD,IAAA7yB,OAAA6yB,GAAA,QAAA7yB,OAAA6yB,GAAA,SAAAjgC,OAAAmgC,UAEAC,GAAA15B,OACAuO,GAAAvO,OACA25B,GAAA35B,OACA45B,GAAA55B,MAGA,IAAA84B,KAAA9nB,GAAA,CACA,GAAA6oB,IAAA75B,SAAA1G,OAAAwgC,iBAAA95B,SAAA1G,OAAAygC,sBACAC,GAAAh6B,SAAA1G,OAAA2gC,gBAAAj6B,SAAA1G,OAAA4gC,oBACAR,IAAAG,GAAA,gCACAtrB,GAAAsrB,GAAA,sCACAF,GAAAK,GAAA,8BACAJ,GAAAI,GAAA,oCAaA,GAAAv2B,IAAA,WAIA,QAAA02B,KACAC,GAAA,CACA,IAAAC,GAAAC,EAAAtzB,MAAA,EACAszB,KACA,QAAAv+B,GAAA,EAAmBA,EAAAs+B,EAAA19B,OAAmBZ,IACtCs+B,EAAAt+B,KARA,GAEAw+B,GAFAD,KACAF,GAAA,CAYA,uBAAAI,mBAAAhB,GAWG,CAIH,GAAAvwB,GAAA6vB,GAAAx/B,OAAA,mBAAAyL,OACAw1B,GAAAtxB,EAAAwxB,cAAAh4B,eAhBA,CACA,GAAAi4B,GAAA,EACAC,EAAA,GAAAH,kBAAAL,GACAS,EAAA/hC,SAAA+Z,eAAA8nB,EACAC,GAAAxjB,QAAAyjB,GACAC,eAAA,IAEAN,EAAA,WACAG,KAAA,KACAE,EAAA9hC,KAAA4hC,GASA,gBAAAhxB,EAAA5B,GACA,GAAAiB,GAAAjB,EAAA,WACA4B,EAAA3S,KAAA+Q,IACK4B,CACL4wB,GAAApgC,KAAA6O,GACAqxB,IACAA,GAAA,EACAG,EAAAJ,EAAA,QAIAtb,GAAA7e,MAEA,oBAAA86B,UAAA36B,WAAAqK,MAAA,eAEAqU,GAAAic,KAGAjc,GAAA,WACApmB,KAAAuM,IAAAnN,OAAAqS,OAAA,OAEA2U,GAAA3e,UAAAqd,IAAA,SAAArf,GACA,MAAA8B,UAAAvH,KAAAuM,IAAA9G,IAEA2gB,GAAA3e,UAAAmR,IAAA,SAAAnT,GACAzF,KAAAuM,IAAA9G,GAAA,GAEA2gB,GAAA3e,UAAAmf,MAAA,WACA5mB,KAAAuM,IAAAnN,OAAAqS,OAAA,OAWA,IAAAhT,IAAA4S,EAAA5J,SAaAhJ,IAAA0U,IAAA,SAAA1N,EAAAzG,GACA,GAAAgc,GAEAsnB,EAAAtiC,KAAA2S,IAAAlN,GAAA,EAoBA,OAnBA68B,KACAtiC,KAAA+D,OAAA/D,KAAAsG,QACA0U,EAAAhb,KAAAkJ,SAEAo5B,GACA78B,OAEAzF,KAAAwR,QAAA/L,GAAA68B,EACAtiC,KAAAuR,MACAvR,KAAAuR,KAAAgxB,MAAAD,EACAA,EAAAE,MAAAxiC,KAAAuR,MAEAvR,KAAAsR,KAAAgxB,EAEAtiC,KAAAuR,KAAA+wB,EACAtiC,KAAA+D,QAEAu+B,EAAAtjC,QAEAgc,GASAvc,GAAAyK,MAAA,WACA,GAAAo5B,GAAAtiC,KAAAsR,IAQA,OAPAgxB,KACAtiC,KAAAsR,KAAAtR,KAAAsR,KAAAixB,MACAviC,KAAAsR,KAAAkxB,MAAAj7B,OACA+6B,EAAAC,MAAAD,EAAAE,MAAAj7B,OACAvH,KAAAwR,QAAA8wB,EAAA78B,KAAA8B,OACAvH,KAAA+D,QAEAu+B,GAYA7jC,GAAAkU,IAAA,SAAAlN,EAAAg9B,GACA,GAAAH,GAAAtiC,KAAAwR,QAAA/L,EACA,IAAA8B,SAAA+6B,EACA,MAAAA,KAAAtiC,KAAAuR,KACAkxB,EAAAH,IAAAtjC,OAMAsjC,EAAAC,QACAD,IAAAtiC,KAAAsR,OACAtR,KAAAsR,KAAAgxB,EAAAC,OAEAD,EAAAC,MAAAC,MAAAF,EAAAE,OAEAF,EAAAE,QACAF,EAAAE,MAAAD,MAAAD,EAAAC,OAEAD,EAAAC,MAAAh7B,OACA+6B,EAAAE,MAAAxiC,KAAAuR,KACAvR,KAAAuR,OACAvR,KAAAuR,KAAAgxB,MAAAD,GAEAtiC,KAAAuR,KAAA+wB,EACAG,EAAAH,IAAAtjC,OAGA,IAQA4O,IACAzB,GACA3N,GACAyU,GACA3P,GACAgM,GACAsC,GACAgB,GACAC,GACAC,GACAC,GACAC,GAnBAN,GAAA,GAAArB,GAAA,KACAW,GAAA,4BACAI,GAAA,cAgJAqtB,GAAArgC,OAAAsjC,QACAnwB,mBAGAc,GAAA,yBACAY,GAAA1M,OACAuM,GAAAvM,OACAyM,GAAAzM,OA+HAwN,GAAA,aAiBA3O,GAAAhH,OAAAsjC,QACApvB,eACAY,YACAM,gBAGAf,IAAA,KAAqB,MACrBG,IAAA,MAA4B,OAE5BJ,GAAApU,OAAAujC,kBASA1oB,OAAA,EAQA2oB,QAAA,EAMAC,OAAA,EAOAC,sBAAA,EAOA1d,SAAA,eAAAra,EAAAO,IAAA8K,SASA2sB,oBAAA,EAQAhD,aAAA,4EAMAiD,mBACAzV,QAAA,EACAC,QAAA,EACAC,SAAA,GAOAnI,gBAAA,MAGA7R,YAOAd,IAAA,WACA,MAAAc,KAEAlH,IAAA,SAAA7L,GACA+S,GAAA/S,EACA4S,KAEAlD,cAAA,EACAH,YAAA,GAEA2D,kBACAjB,IAAA,WACA,MAAAiB,KAEArH,IAAA,SAAA7L,GACAkT,GAAAlT,EACA4S,KAEAlD,cAAA,EACAH,YAAA,KAIAoG,GAAA9O,OACA07B,GAAA17B,MAEA,gBAAAwD,EAAAO,IAAA8K,WACA,WACA,GAAA8sB,GAAA,mBAAA7G,QAEAhmB,IAAA,SAAA8sB,EAAAl2B,GACAi2B,IAAA1vB,GAAAovB,QACAvG,QAAA+G,MAAA,eAAAD,GAAAl2B,EAAAg2B,GAAAh2B,GAAA,MAIAg2B,GAAA,SAAAh2B,GACA,GAAA9G,GAAA8G,EAAAR,OAAAQ,EAAA6T,SAAA3a,KAAA8G,EAAA9G,IACA,OAAAA,GAAA,0BAAA2I,EAAA3I,GAAA,WAiFA,IAAAwP,IAAAvW,OAAAsjC,QACA1tB,uBACAK,uBACAE,uBACAJ,oBAuVAsF,GAAA,UA6FAgB,GAAA,mJACAC,GAAA,8BAEAM,GAAAzU,MACA,gBAAAwD,EAAAO,IAAA8K,WACA4F,GAAA,SAAA/G,EAAAV,GACA,MAAAA,GAAAzD,QAAA,QAEAmE,EAAA8L,cAAAlgB,OAAAwiC,oBAAApuB,EAAA8L,cAAAlgB,OAAAyiC,YAEA,qBAAA51B,KAAAuH,EAAAvN,cAIA,8CAAAgG,KAAA6G,IA2EA,IAAA0I,IAAAzJ,GAAA+vB,sBAAAnkC,OAAAqS,OAAA,KAwBAwL,IAAA5c,KAAA,SAAAgc,EAAAC,EAAArP,GACA,MAAAA,GAoBGoP,GAAAC,EACH,WAEA,GAAAknB,GAAA,kBAAAlnB,KAAAhe,KAAA2O,GAAAqP,EACAmnB,EAAA,kBAAApnB,KAAA/d,KAAA2O,GAAA1F,MACA,OAAAi8B,GACAvnB,GAAAunB,EAAAC,GAEAA,GARG,OAlBHnnB,EAGA,kBAAAA,IACA,eAAAvR,EAAAO,IAAA8K,UAAAC,GAAA,qGAAApJ,GACAoP,GAEAA,EAQA,WACA,MAAAJ,IAAAK,EAAAhe,KAAA0B,MAAAqc,EAAA/d,KAAA0B,QARAsc,EAPAD,GAmCAY,GAAAhI,GAAA,SAAAoH,EAAAC,EAAArP,GACA,IAAAA,GAAAqP,GAAA,kBAAAA,GAEA,YADA,eAAAvR,EAAAO,IAAA8K,UAAAC,GAAA,mGAAApJ,GAGA,IAAAyC,GAAA4M,GAAAD,CAEA,OAAApP,IAAA,kBAAAyC,KAAApR,KAAA2O,GAAAyC,GAOAuN,GAAA+N,KAAA/N,GAAAymB,QAAAzmB,GAAA/c,MAAA+c,GAAA0mB,SAAA1mB,GAAA2mB,SAAA3mB,GAAA4mB,cAAA5mB,GAAA6mB,SAAA7mB,GAAA8mB,cAAA9mB,GAAA+mB,UAAA/mB,GAAAgnB,SAAA,SAAA5nB,EAAAC,GACA,MAAAA,GAAAD,IAAA7Y,OAAA8Y,GAAAK,GAAAL,SAAAD,GAgBA7I,GAAAusB,YAAApgC,QAAA,SAAAR,GACA8d,GAAA9d,EAAA,KAAAid,KAUAa,GAAA5d,MAAA4d,GAAA6b,OAAA,SAAAzc,EAAAC,GACA,IAAAA,EAAA,MAAAD,EACA,KAAAA,EAAA,MAAAC,EACA,IAAA5M,KACAxK,GAAAwK,EAAA2M,EACA,QAAA5W,KAAA6W,GAAA,CACA,GAAA3F,GAAAjH,EAAAjK,GACAyT,EAAAoD,EAAA7W,EACAkR,KAAAgG,GAAAhG,KACAA,OAEAjH,EAAAjK,GAAAkR,IAAAnT,OAAA0V,OAEA,MAAAxJ,IAOAuN,GAAAle,MAAAke,GAAA9b,QAAA8b,GAAA4a,SAAA,SAAAxb,EAAAC,GACA,IAAAA,EAAA,MAAAD,EACA,KAAAA,EAAA,MAAAC,EACA,IAAA5M,GAAAtQ,OAAAqS,OAAA,KAGA,OAFAvM,GAAAwK,EAAA2M,GACAnX,EAAAwK,EAAA4M,GACA5M,EAOA,IAAAwN,IAAA,SAAAb,EAAAC,GACA,MAAA/U,UAAA+U,EAAAD,EAAAC,GA4KAqB,GAAA,CAgBAD,IAAAxI,OAAA,KAQAwI,GAAAjW,UAAAy8B,OAAA,SAAAC,GACAnkC,KAAA4d,KAAAnc,KAAA0iC,IASAzmB,GAAAjW,UAAA28B,UAAA,SAAAD,GACAnkC,KAAA4d,KAAAlc,QAAAyiC,IAOAzmB,GAAAjW,UAAA0X,OAAA,WACAzB,GAAAxI,OAAAmvB,OAAArkC,OAOA0d,GAAAjW,UAAAsF,OAAA,WAGA,OADA6Q,GAAArO,EAAAvP,KAAA4d,MACAta,EAAA,EAAAgM,EAAAsO,EAAA1Z,OAAkCZ,EAAAgM,EAAOhM,IACzCsa,EAAAta,GAAAs0B,SAIA,IAAA0M,IAAAp5B,MAAAzD,UACA2W,GAAAhf,OAAAqS,OAAA6yB,KAMC,0DAAA3kC,QAAA,SAAA+pB,GAED,GAAAvG,GAAAmhB,GAAA5a,EACA1Z,GAAAoO,GAAAsL,EAAA,WAKA,IAFA,GAAApmB,GAAA6H,UAAAjH,OACA+G,EAAA,GAAAC,OAAA5H,GACAA,KACA2H,EAAA3H,GAAA6H,UAAA7H,EAEA,IAEA2lB,GAFAroB,EAAAuiB,EAAA/X,MAAApL,KAAAiL,GACA0B,EAAA3M,KAAA4M,MAEA,QAAA8c,GACA,WACAT,EAAAhe,CACA,MACA,eACAge,EAAAhe,CACA,MACA,cACAge,EAAAhe,EAAAsD,MAAA,GAMA,MAHA0a,IAAAtc,EAAA2R,aAAA2K,GAEAtc,EAAAG,IAAAC,SACAnM,MAaAoP,EAAAs0B,GAAA,gBAAArlC,EAAAyB,GAIA,MAHAzB,IAAAe,KAAAkE,SACAlE,KAAAkE,OAAA+J,OAAAhP,GAAA,GAEAe,KAAA29B,OAAA1+B,EAAA,EAAAyB,GAAA,KASAsP,EAAAs0B,GAAA,mBAAA59B,GAEA,GAAA1G,KAAAkE,OAAA,CACA,GAAAjF,GAAA6R,EAAA9Q,KAAA0G,EACA,OAAAzH,MACAe,KAAA29B,OAAA1+B,EAAA,GADA,SAKA,IAAAof,IAAAjf,OAAAmlC,oBAAAnmB,IAYAN,IAAA,CAyCAC,IAAAtW,UAAA8W,KAAA,SAAAjX,GAEA,OADAyB,GAAA3J,OAAA2J,KAAAzB,GACAhE,EAAA,EAAAgM,EAAAvG,EAAA7E,OAAkCZ,EAAAgM,EAAOhM,IACzCtD,KAAA6M,QAAA9D,EAAAzF,GAAAgE,EAAAyB,EAAAzF,MAUAya,GAAAtW,UAAA6W,aAAA,SAAAkmB,GACA,OAAAlhC,GAAA,EAAAgM,EAAAk1B,EAAAtgC,OAAmCZ,EAAAgM,EAAOhM,IAC1Cob,GAAA8lB,EAAAlhC,KAYAya,GAAAtW,UAAAoF,QAAA,SAAApH,EAAA/E,GACAme,GAAA7e,KAAAhB,MAAAyG,EAAA/E,IAYAqd,GAAAtW,UAAAmX,MAAA,SAAA3R,IACAjN,KAAAgN,MAAAhN,KAAAgN,SAAAvL,KAAAwL,IAUA8Q,GAAAtW,UAAAkwB,SAAA,SAAA1qB,GACAjN,KAAAgN,IAAAtL,QAAAuL,GAuHA,IAAAhM,IAAA7B,OAAAsjC,QACA7jB,kBACAtS,MACAa,MACAZ,SACAe,YACAI,aACAG,YACAC,WACAI,YACAC,cACAI,WACAM,YACAG,WACAE,OACAI,UACArK,SACA2K,WACAC,gBACAE,MACAy0B,SAAAp0B,EACAS,UACAE,cACAG,aACAwL,WACAsB,YACAoiB,aACAjb,YACAsb,QACAnoB,SACAooB,aACAC,SACAC,mBACAC,cACAC,0BACAE,qBAAwB,MAAAA,KACxBnrB,yBAA4B,MAAAA,KAC5BorB,oBAAuB,MAAAA,KACvBC,wBAA2B,MAAAA,KAC3Bn2B,YACAob,WAAc,MAAAA,KACdnQ,QACAK,QACAS,UACAI,cACAC,cACA9B,SACAiC,QACA/B,SACAkC,UACAjJ,UACAnO,KACAsL,MACAyM,WACAK,YACAI,eACAE,kBACAQ,YACAJ,cACAU,gBACAO,WACAK,gBACAG,mBACAxB,cACA6B,gBACA4B,gBACAlB,gBACAN,sBACAG,eACAC,iBACArF,WAAc,MAAAA,OAGdwJ,GAAA,EAsGAkD,GAAA,GAAA1R,GAAA,KAGA6Q,GAAA,EACAI,GAAA,EACAC,GAAA,EACAC,GAAA,EAGAJ,GAAA,EACAsiB,GAAA,EACAC,GAAA,EACAC,GAAA,EACAniB,GAAA,EACAX,GAAA,EACAC,GAAA,EACAa,GAAA,EACAD,GAAA,EAEAD,KAEAA,IAAAN,KACAyiB,IAAAziB,IACA0iB,OAAAF,GAAA1iB,IACA6iB,KAAAtiB,IACAuiB,KAAApiB,KAGAF,GAAAgiB,KACAG,IAAAH,IACAO,KAAAN,IACAI,KAAAtiB,IACAuiB,KAAApiB,KAGAF,GAAAiiB,KACAE,IAAAF,IACAG,OAAAF,GAAA1iB,KAGAQ,GAAAkiB,KACAE,OAAAF,GAAA1iB,IACAxjB,GAAAkmC,GAAA1iB,IACAgjB,QAAAN,GAAA1iB,IACA2iB,IAAAH,GAAApiB,IACA2iB,KAAAN,GAAAriB,IACAyiB,KAAAtiB,GAAAH,IACA0iB,KAAApiB,GAAAN,KAGAI,GAAAD,KACA0iB,KAAArjB,GAAAI,IACAkjB,KAAArjB,GAAAG,IACA6iB,KAAAtiB,GAAAF,IACA8iB,KAAAX,GAAAliB,IACAwiB,IAAAriB,GACA2iB,QAAA7iB,GAAAP,KAGAQ,GAAAZ,KACAqjB,KAAA1iB,GAAAP,IACA8iB,IAAAriB,GACA2iB,QAAAxjB,GAAAI,KAGAQ,GAAAX,KACAqjB,KAAA3iB,GAAAP,IACA8iB,IAAAriB,GACA2iB,QAAAvjB,GAAAG,IA2MA,IAAAkB,GACA,gBAAArY,EAAAO,IAAA8K,WACAgN,GAAA,SAAA3B,EAAAxU,GACAoJ,GAAA,wCAAAoL,EAAAoB,IAAA,yIAAA5V,IAoDA,IAAAwU,IAAAriB,OAAAsjC,QACA5f,aACAE,WACAE,aAGAsB,GAAA,GAAAnT,GAAA,KAEAk0B,GAAA,qJACA7hB,GAAA,GAAA3P,QAAA,KAAAwxB,GAAA92B,QAAA,qBAGA+2B,GAAA,mQACA1hB,GAAA,GAAA/P,QAAA,KAAAyxB,GAAA/2B,QAAA,qBAEAwV,GAAA,MACAT,GAAA,MACAQ,GAAA,2IACAL,GAAA,WACAe,GAAA,6FACAR,GAAA,gCACAS,GAAA,+CAcApB,MAuKArQ,GAAA9T,OAAAsjC,QACAzf,mBACAwB,kBAUAja,MACAqa,MACAC,MACAC,MACAC,IAAA,EA6FAa,GAAA,CA0DAH,IAAAje,UAAAkL,IAAA,WACA3S,KAAAylC,WACA,IACAzmC,GADAslB,EAAAtkB,KAAAskB,OAAAtkB,KAAAiN,EAEA,KACAjO,EAAAgB,KAAAgf,OAAA1gB,KAAAgmB,KACG,MAAArgB,GACH,eAAA8G,EAAAO,IAAA8K,UAAA5C,GAAAsvB,sBACAzsB,GAAA,qCAAArW,KAAAkT,WAAA,MAAAjP,EAAAyD,WAAA1H,KAAAiN,IAkBA,MAbAjN,MAAAT,MACAknB,GAAAznB,GAEAgB,KAAA0lC,aACA1mC,EAAAgB,KAAA0lC,WAAA1mC,IAEAgB,KAAAkS,UACAlT,EAAAslB,EAAAwW,cAAA97B,EAAA,KAAAgB,KAAAkS,SAAA,IAEAlS,KAAA2lC,cACA3mC,EAAAgB,KAAA2lC,YAAA3mC,IAEAgB,KAAA4lC,WACA5mC,GASA0mB,GAAAje,UAAA8E,IAAA,SAAAvN,GACA,GAAAslB,GAAAtkB,KAAAskB,OAAAtkB,KAAAiN,EACAjN,MAAAkS,UACAlT,EAAAslB,EAAAwW,cAAA97B,EAAAgB,KAAAhB,MAAAgB,KAAAkS,SAAA,GAEA,KACAlS,KAAAif,OAAA3gB,KAAAgmB,IAAAtlB,GACG,MAAAiF,GACH,eAAA8G,EAAAO,IAAA8K,UAAA5C,GAAAsvB,sBACAzsB,GAAA,iCAAArW,KAAAkT,WAAA,MAAAjP,EAAAyD,WAAA1H,KAAAiN,IAIA,GAAA44B,GAAAvhB,EAAAwhB,WACA,IAAAD,KAAAE,QAAA/lC,KAAAkT,WAAA,CACA,GAAA2yB,EAAA3zB,QAEA,YADA,eAAAnH,EAAAO,IAAA8K,UAAAC,GAAA,4DAAArW,KAAAkT,WAAA,yJAAAlT,KAAAiN,IAGA44B,GAAAG,UAAA,WACA1hB,EAAAma,KAEAoH,EAAAtX,SAAAjK,EAAAma,MAAAz/B,EAEA6mC,EAAAtX,SAAAtuB,KAAAqkB,EAAA2hB,OAAAjnC,OAUA0mB,GAAAje,UAAAg+B,UAAA,WACA/nB,GAAAxI,OAAAlV,MASA0lB,GAAAje,UAAA48B,OAAA,SAAAv3B,GACA,GAAA1O,GAAA0O,EAAA1O,EACA4B,MAAAqmB,UAAAvB,IAAA1mB,KACA4B,KAAAqmB,UAAAzN,IAAAxa,GACA4B,KAAAkmB,QAAAzkB,KAAAqL,GACA9M,KAAAmmB,OAAArB,IAAA1mB,IACA0O,EAAAo3B,OAAAlkC,QASA0lB,GAAAje,UAAAm+B,SAAA,WACAloB,GAAAxI,OAAA,IAEA,KADA,GAAA5R,GAAAtD,KAAAimB,KAAA/hB,OACAZ,KAAA,CACA,GAAAwJ,GAAA9M,KAAAimB,KAAA3iB,EACAtD,MAAAqmB,UAAAvB,IAAAhY,EAAA1O,KACA0O,EAAAs3B,UAAApkC,MAGA,GAAAkmC,GAAAlmC,KAAAmmB,MACAnmB,MAAAmmB,OAAAnmB,KAAAqmB,UACArmB,KAAAqmB,UAAA6f,EACAlmC,KAAAqmB,UAAAO,QACAsf,EAAAlmC,KAAAimB,KACAjmB,KAAAimB,KAAAjmB,KAAAkmB,QACAlmB,KAAAkmB,QAAAggB,EACAlmC,KAAAkmB,QAAAhiB,OAAA,GAUAwhB,GAAAje,UAAAmwB,OAAA,SAAApR,GACAxmB,KAAAgmB,KACAhmB,KAAA+lB,OAAA,EACG/lB,KAAAg8B,OAAAxoB,GAAAqvB,MACH7iC,KAAA4K,OAIA5K,KAAAwmB,QAAAxmB,KAAAumB,SAAAC,GAAAxmB,KAAAwmB,YACAxmB,KAAAumB,QAAA,EAGA,eAAAxb,EAAAO,IAAA8K,UAAA5C,GAAAyG,QACAja,KAAAsmB,UAAA,GAAA3c,OAAA,4BAEA4b,GAAAvlB,QASA0lB,GAAAje,UAAAmD,IAAA,WACA,GAAA5K,KAAA8lB,OAAA,CACA,GAAA9mB,GAAAgB,KAAA2S,KACA,IAAA3T,IAAAgB,KAAAhB,QAKA6Q,EAAA7Q,IAAAgB,KAAAT,QAAAS,KAAAwmB,QAAA,CAEA,GAAAuU,GAAA/6B,KAAAhB,KACAgB,MAAAhB,OAIA,IAAAsnB,GAAAtmB,KAAAsmB,SAEA,mBAAAvb,EAAAO,IAAA8K,UAAA5C,GAAAyG,OAAAqM,EAAA,CACAtmB,KAAAsmB,UAAA,IACA,KACAtmB,KAAAiR,GAAA3S,KAAA0B,KAAAiN,GAAAjO,EAAA+7B,GACS,MAAA92B,GAIT,KAHA+G,IAAA,WACA,KAAAsb,IACW,GACXriB,OAGAjE,MAAAiR,GAAA3S,KAAA0B,KAAAiN,GAAAjO,EAAA+7B,GAGA/6B,KAAAumB,OAAAvmB,KAAAwmB,SAAA,IASAd,GAAAje,UAAAuvB,SAAA,WAGA,GAAAhzB,GAAA0Z,GAAAxI,MACAlV,MAAAhB,MAAAgB,KAAA2S,MACA3S,KAAA+lB,OAAA,EACArI,GAAAxI,OAAAlR,GAOA0hB,GAAAje,UAAA0X,OAAA,WAEA,IADA,GAAA7b,GAAAtD,KAAAimB,KAAA/hB,OACAZ,KACAtD,KAAAimB,KAAA3iB,GAAA6b,UAQAuG,GAAAje,UAAAkzB,SAAA,WACA,GAAA36B,KAAA8lB,OAAA,CAKA9lB,KAAAiN,GAAAsT,mBAAAvgB,KAAAiN,GAAAuT,eACAxgB,KAAAiN,GAAAyS,UAAAhe,QAAA1B,KAGA,KADA,GAAAsD,GAAAtD,KAAAimB,KAAA/hB,OACAZ,KACAtD,KAAAimB,KAAA3iB,GAAA8gC,UAAApkC,KAEAA,MAAA8lB,QAAA,EACA9lB,KAAAiN,GAAAjN,KAAAiR,GAAAjR,KAAAhB,MAAA,MAYA,IAAA2nB,IAAA,GAAAP,IA8BA+f,IAEAh3B,KAAA,WACAnP,KAAAktB,KAAA,IAAAltB,KAAAiV,GAAA4B,SAAA,sBAGA+gB,OAAA,SAAA54B,GACAgB,KAAAiV,GAAAjV,KAAAktB,MAAApf,EAAA9O,KAIAooB,GAAA,GAAA/V,GAAA,KACAqX,GAAA,GAAArX,GAAA,KAEAvL,IACA8hB,QAAA,SACAwe,QAAA,8BACAC,IAAA,uCACAC,KAAA,4DAGAxgC,IAAAygC,GAAAzgC,GAAA0gC,IAAA,gDAEA1gC,GAAA2gC,OAAA3gC,GAAA4gC,UAAA,8CAEA5gC,GAAA6gC,MAAA7gC,GAAA8gC,MAAA9gC,GAAA+gC,SAAA/gC,GAAAghC,QAAAhhC,GAAAihC,OAAA,wBAEAjhC,GAAAkhC,EAAAlhC,GAAAmhC,KAAAnhC,GAAAohC,OAAAphC,GAAAk6B,IAAAl6B,GAAAqhC,MAAArhC,GAAAM,KAAAN,GAAAshC,OAAAthC,GAAAuhC,QAAAvhC,GAAAwhC,KAAAxhC,GAAA2b,KAAA3b,GAAAyhC,QAAAzhC,GAAA0hC,SAAA1hC,GAAA6qB,MAAA,2JAcA,IAAArJ,IAAA,aACAE,GAAA,WACAE,GAAA,OA2FAW,GAAA,WAEA,GAAAgY,GAAA,CACA,GAAAhyB,GAAAjO,SAAAsZ,cAAA,MAEA,OADArL,GAAAlK,UAAA,0BACAkK,EAAAgN,WAAA,GAAA1D,WAAAxT,UAEA,YAKAokB,GAAA,WAEA,GAAA8X,GAAA,CACA,GAAAoH,GAAArnC,SAAAsZ,cAAA,WAEA,OADA+tB,GAAAC,YAAA,IACA,MAAAD,EAAApsB,WAAA,GAAArc,MAEA,YA4GAF,GAAAM,OAAAsjC,QACArnB,aACAmN,mBAGArmB,IAEAgN,KAAA,WAGA,IAAAnP,KAAAiV,GAAA4B,WAEA7W,KAAAib,SAEAjb,KAAAga,OAAAF,GAAA,UACArL,EAAAzO,KAAAiV,GAAAjV,KAAAga,UAIA4d,OAAA,SAAA54B,GACAA,EAAA8O,EAAA9O,GACAgB,KAAAib,MACAjb,KAAA2nC,KAAA3oC,GAEAgB,KAAAiV,GAAA9Q,UAAAnF,GAIA2oC,KAAA,SAAA3oC,GAGA,IADA,GAAAsE,GAAAtD,KAAAib,MAAA/W,OACAZ,KACAkS,EAAAxV,KAAAib,MAAA3X,GAIA,IAAAwX,GAAA0N,GAAAxpB,GAAA,KAEAgB,MAAAib,MAAA1L,EAAAuL,EAAAqO,YACA7T,EAAAwF,EAAA9a,KAAAga,SAqDA4O,IAAAnhB,UAAAkiB,SAAA,SAAAqP,GACA,GAAA11B,GAAAgM,CACA,KAAAhM,EAAA,EAAAgM,EAAAtP,KAAAgpB,WAAA9kB,OAAyCZ,EAAAgM,EAAOhM,IAChDtD,KAAAgpB,WAAA1lB,GAAAqmB,SAAAqP,EAEA,KAAA11B,EAAA,EAAAgM,EAAAtP,KAAA6gB,SAAA3c,OAAuCZ,EAAAgM,EAAOhM,IAC9C01B,EAAAh5B,KAAA6gB,SAAAvd,KA6EAslB,GAAAnhB,UAAAqiB,aAAA,WACA,GAAAxmB,GAAAgM,CACA,KAAAhM,EAAA,EAAAgM,EAAAtP,KAAAgpB,WAAA9kB,OAAyCZ,EAAAgM,EAAOhM,IAGhDtD,KAAAgpB,WAAA1lB,GAAAwmB,cAAA,EAEA,KAAAxmB,EAAA,EAAAgM,EAAAtP,KAAA6gB,SAAA3c,OAAuCZ,EAAAgM,EAAOhM,IAM9CtD,KAAA6gB,SAAAvd,GAAAo3B,UAAA,KAEA,IAAAjJ,GAAAzxB,KAAAkpB,OAAAuI,IACA,KAAAnuB,EAAA,EAAAgM,EAAAmiB,EAAAvtB,OAA8BZ,EAAAgM,EAAOhM,IAIrCmuB,EAAAnuB,GAAAskC,UAAAnW,EAAAnuB,GAAAskC,SAAAjN,YAQA/R,GAAAnhB,UAAAuiB,QAAA,WACAhqB,KAAA+oB,YACA/oB,KAAA+oB,WAAAC,WAAAtnB,QAAA1B,MAEAA,KAAAuW,KAAAiT,SAAA,KACAxpB,KAAAkpB,SA2BA,IAAAkB,IAAA,GAAA/Y,GAAA,IA4CA4Y,IAAAxiB,UAAAgK,OAAA,SAAAqX,EAAAxE,EAAAyE,GACA,GAAAjO,GAAAO,GAAArb,KAAAlB,SACA,WAAA8pB,IAAA5oB,KAAA6oB,OAAA7oB,KAAAiN,GAAA6N,EAAAgO,EAAAxE,EAAAyE,GAGA,IAAA8e,IAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KAEAC,GAAA,EAEAC,IAEAvW,SAAAoW,GACA/W,UAAA,EAEAmX,QAAA,sDAEAt5B,KAAA,WAEA,GAAAu5B,GAAA1oC,KAAAkT,WAAAnB,MAAA,sBACA,IAAA22B,EAAA,CACA,GAAAC,GAAAD,EAAA,GAAA32B,MAAA,gBACA42B,IACA3oC,KAAA4oC,SAAAD,EAAA,GAAA92B,OACA7R,KAAA+lC,MAAA4C,EAAA,GAAA92B,QAEA7R,KAAA+lC,MAAA2C,EAAA,GAAA72B,OAEA7R,KAAAkT,WAAAw1B,EAAA,GAGA,IAAA1oC,KAAA+lC,MAEA,YADA,eAAAh7B,EAAAO,IAAA8K,UAAAC,GAAA,6BAAArW,KAAAgyB,WAAAnP,IAAA,wBAAA7iB,KAAAiN,IAKAjN,MAAA5B,GAAA,eAAAmqC,EAQA,IAAAh0B,GAAAvU,KAAAiV,GAAA4E,OACA7Z,MAAA6oC,UAAA,WAAAt0B,GAAA,aAAAA,IAAA,WAAAvU,KAAAiV,GAAA2B,WAAAiD,QAGA7Z,KAAAyP,MAAAqK,GAAA,eACA9Z,KAAA2a,IAAAb,GAAA,aACArL,EAAAzO,KAAAiV,GAAAjV,KAAA2a,KACArF,EAAAtV,KAAAyP,MAAAzP,KAAA2a,KAGA3a,KAAAiU,MAAA7U,OAAAqS,OAAA,MAGAzR,KAAAo7B,QAAA,GAAAnR,IAAAjqB,KAAAiN,GAAAjN,KAAAiV,KAGA2iB,OAAA,SAAAv3B,GACAL,KAAA8oC,KAAAzoC,GACAL,KAAA+oC,YACA/oC,KAAAgpC,eAiBAF,KAAA,SAAAzoC,GAEA,GAYAiD,GAAAgM,EAAAwL,EAAArV,EAAAzG,EAAAiqC,EAZAviC,EAAArG,EAAA,GACA6oC,EAAAlpC,KAAAmpC,WAAAt5B,EAAAnJ,IAAA8F,EAAA9F,EAAA,SAAA8F,EAAA9F,EAAA,UAEAmkB,EAAA7qB,KAAAyoC,OAAAW,QACAC,EAAArpC,KAAAspC,MACAA,EAAAtpC,KAAAspC,MAAA,GAAAp+B,OAAA7K,EAAA6D,QACA6hC,EAAA/lC,KAAA+lC,MACA6C,EAAA5oC,KAAA4oC,SACAn5B,EAAAzP,KAAAyP,MACAkL,EAAA3a,KAAA2a,IACA0iB,EAAA/mB,EAAA7G,GACAub,GAAAqe,CAOA,KAAA/lC,EAAA,EAAAgM,EAAAjP,EAAA6D,OAAgCZ,EAAAgM,EAAOhM,IACvCoD,EAAArG,EAAAiD,GACAmC,EAAAyjC,EAAAxiC,EAAA+3B,KAAA,KACAz/B,EAAAkqC,EAAAxiC,EAAA83B,OAAA93B,EACAuiC,GAAAp5B,EAAA7Q,GACA8b,GAAAkQ,GAAAhrB,KAAAupC,cAAAvqC,EAAAsE,EAAAmC,GACAqV,GAEAA,EAAA0uB,QAAA,EAEA1uB,EAAAwJ,MAAA2hB,OAAA3iC,EAEAmC,IACAqV,EAAAwJ,MAAAma,KAAAh5B,GAGAmjC,IACA9tB,EAAAwJ,MAAAskB,GAAA,OAAAnjC,IAAAnC,IAIAunB,GAAAqe,GAAAD,IACAprB,GAAA,WACA/C,EAAAwJ,MAAAyhB,GAAA/mC,MAKA8b,EAAA9a,KAAAyR,OAAAzS,EAAA+mC,EAAAziC,EAAAmC,GACAqV,EAAA2uB,OAAAze,GAEAse,EAAAhmC,GAAAwX,EACAkQ,GACAlQ,EAAAxF,OAAAqF,EAKA,KAAAqQ,EAAA,CAOA,GAAA0e,GAAA,EACAC,EAAAN,EAAAnlC,OAAAolC,EAAAplC,MAKA,KADAlE,KAAAiN,GAAAuT,eAAA,EACAld,EAAA,EAAAgM,EAAA+5B,EAAAnlC,OAAoCZ,EAAAgM,EAAOhM,IAC3CwX,EAAAuuB,EAAA/lC,GACAwX,EAAA0uB,SACAxpC,KAAA4pC,iBAAA9uB,GACA9a,KAAAwV,OAAAsF,EAAA4uB,IAAAC,EAAAtM,GAGAr9B,MAAAiN,GAAAuT,eAAA,EACAkpB,IACA1pC,KAAAiN,GAAAyS,UAAA1f,KAAAiN,GAAAyS,UAAA/N,OAAA,SAAAk4B,GACA,MAAAA,GAAA/jB,SAMA,IAAAgkB,GAAAC,EAAAC,EACAC,EAAA,CACA,KAAA3mC,EAAA,EAAAgM,EAAAg6B,EAAAplC,OAAiCZ,EAAAgM,EAAOhM,IACxCwX,EAAAwuB,EAAAhmC,GAEAwmC,EAAAR,EAAAhmC,EAAA,GACAymC,EAAAD,IAAAI,UAAAJ,EAAAK,cAAAL,EAAAnvB,KAAAmvB,EAAAvzB,KAAA9G,EACAqL,EAAA0uB,SAAA1uB,EAAAovB,WACAF,EAAA3f,GAAAvP,EAAArL,EAAAzP,KAAA5B,IACA4rC,IAAAF,GAAAE,GAGA3f,GAAA2f,EAAAv6B,EAAAzP,KAAA5B,MAAA0rC,GACA9pC,KAAAoqC,KAAAtvB,EAAAivB,IAKA/pC,KAAAw8B,OAAA1hB,EAAAmvB,IAAAF,EAAA1M,GAEAviB,EAAA0uB,OAAA1uB,EAAA2uB,OAAA,IAcAh4B,OAAA,SAAAzS,EAAA+mC,EAAA9mC,EAAAwG,GACA,GAAAqjB,GAAA9oB,KAAAu5B,MAEA8Q,EAAArqC,KAAA2gB,QAAA3gB,KAAAiN,GACAqX,EAAAllB,OAAAqS,OAAA44B,EAEA/lB,GAAA9E,MAAApgB,OAAAqS,OAAA44B,EAAA7qB,OACA8E,EAAA7E,KAAArgB,OAAAqS,OAAA44B,EAAA5qB,MAEA6E,EAAA5e,QAAA2kC,EAEA/lB,EAAAwhB,YAAA9lC,KAIA6d,GAAA,WACAgB,GAAAyF,EAAAyhB,EAAA/mC,KAEA6f,GAAAyF,EAAA,SAAArlB,GACAwG,EACAoZ,GAAAyF,EAAA,OAAA7e,GACK6e,EAAAma,MAELzuB,EAAAsU,EAAA,aAEAtkB,KAAA4oC,UACA/pB,GAAAyF,EAAAtkB,KAAA4oC,SAAA,OAAAnjC,IAAAxG,EAEA,IAAA6b,GAAA9a,KAAAo7B,QAAA3pB,OAAAqX,EAAAxE,EAAAtkB,KAAA4gB,MAGA,OAFA9F,GAAAyP,MAAAvqB,KAAA5B,GACA4B,KAAAsqC,UAAAtrC,EAAA8b,EAAA7b,EAAAwG,GACAqV,GAOAiuB,UAAA,WACA,GAAAtU,GAAAz0B,KAAAgyB,WAAAyC,GACA,IAAAA,EAAA,CACA,GACAkF,GADApB,GAAAv4B,KAAA2gB,QAAA3gB,KAAAiN,IAAAuS,KAEAxf,MAAAmpC,YAGAxP,KACA35B,KAAAspC,MAAA3pC,QAAA,SAAAmb,GACA6e,EAAA7e,EAAAwJ,MAAAma,MAAAjU,GAAA1P,MAJA6e,EAAA35B,KAAAspC,MAAAxjC,IAAA0kB,IAOA+N,EAAA9D,GAAAkF,IAQAqP,YAAA,WACA,GAAAhpC,KAAA6oC,SAAA,CACA,GAAAlyB,GAAA3W,KAAAyP,MAAAmH,WACAjR,EAAAgR,KAAA4zB,SACA5kC,IACAA,EAAA6kC,gBAcAhO,OAAA,SAAA1hB,EAAA7b,EAAA8qC,EAAA1M,GACAviB,EAAAovB,YACApvB,EAAAovB,UAAAlnC,SACA8X,EAAAovB,UAAA,KAEA,IAAAO,GAAAzqC,KAAA0qC,WAAA5vB,EAAA7b,EAAA,aACA,IAAAo+B,GAAAoN,EAAA,CAIA,GAAAzwB,GAAAc,EAAAqvB,aACAnwB,KACAA,EAAAc,EAAAqvB,cAAArwB,GAAA,kBACAE,EAAAwP,SAAA1O,GAEAvD,EAAAyC,EAAA+vB,EACA,IAAAr0B,GAAAoF,EAAAovB,UAAAl5B,EAAA,WACA8J,EAAAovB,UAAA,KACApvB,EAAAxF,OAAA0E,GACAxE,EAAAwE,IAEAhQ,YAAA0L,EAAA+0B,OACK,CACL,GAAAv1B,GAAA60B,EAAAvyB,WAEAtC,KAGAqC,EAAAvX,KAAA2a,IAAAovB,GACA70B,EAAAlV,KAAA2a,KAEAG,EAAAxF,OAAAJ,KAaAM,OAAA,SAAAsF,EAAA7b,EAAA4E,EAAAw5B,GACA,GAAAviB,EAAAovB,UAQA,MAPApvB,GAAAovB,UAAAlnC,cACA8X,EAAAovB,UAAA,KAQA,IAAAO,GAAAzqC,KAAA0qC,WAAA5vB,EAAA7b,EAAA4E,EAAA,QACA,IAAAw5B,GAAAoN,EAAA,CACA,GAAA/0B,GAAAoF,EAAAovB,UAAAl5B,EAAA,WACA8J,EAAAovB,UAAA,KACApvB,EAAAtF,UAEAxL,YAAA0L,EAAA+0B,OAEA3vB,GAAAtF,UAYA40B,KAAA,SAAAtvB,EAAAivB,GAMAA,EAAAvyB,aACAxX,KAAA2a,IAAA/D,WAAAxB,YAAApV,KAAA2a,KAEAG,EAAAxF,OAAAy0B,EAAAvyB,aAAA,IAYA8yB,UAAA,SAAAtrC,EAAA8b,EAAA7b,EAAAwG,GACA,GAGArH,GAHAysB,EAAA7qB,KAAAyoC,OAAAW,QACAn1B,EAAAjU,KAAAiU,MACAg1B,GAAAp5B,EAAA7Q,EAEAyG,IAAAolB,GAAAoe,GACA7qC,EAAAwsB,GAAA3rB,EAAAwG,EAAAzG,EAAA6rB,GACA5W,EAAA7V,GAEO,WAAAysB,GACP,eAAA9f,EAAAO,IAAA8K,UAAApW,KAAA2qC,cAAA3rC,GAFAiV,EAAA7V,GAAA0c,IAKA1c,EAAA4B,KAAA5B,GACAoO,EAAAxN,EAAAZ,GACA,OAAAY,EAAAZ,GACAY,EAAAZ,GAAA0c,EAEA,eAAA/P,EAAAO,IAAA8K,UAAApW,KAAA2qC,cAAA3rC,GAEOI,OAAAuf,aAAA3f,GACPgR,EAAAhR,EAAAZ,EAAA0c,GACO,eAAA/P,EAAAO,IAAA8K,UACPC,GAAA,+FAGAyE,EAAA+H,IAAA7jB;EAYAuqC,cAAA,SAAAvqC,EAAAC,EAAAwG,GACA,GAEAqV,GAFA+P,EAAA7qB,KAAAyoC,OAAAW,QACAH,GAAAp5B,EAAA7Q,EAEA,IAAAyG,GAAAolB,GAAAoe,EAAA,CACA,GAAA7qC,GAAAwsB,GAAA3rB,EAAAwG,EAAAzG,EAAA6rB,EACA/P,GAAA9a,KAAAiU,MAAA7V,OAEA0c,GAAA9b,EAAAgB,KAAA5B,GAKA,OAHA0c,OAAA0uB,QAAA1uB,EAAA2uB,QACA,eAAA1+B,EAAAO,IAAA8K,UAAApW,KAAA2qC,cAAA3rC,GAEA8b,GASA8uB,iBAAA,SAAA9uB,GACA,GAAA9b,GAAA8b,EAAA+H,IACAgI,EAAA7qB,KAAAyoC,OAAAW,QACA9kB,EAAAxJ,EAAAwJ,MACArlB,EAAAqlB,EAAA2hB,OAGAxgC,EAAA+G,EAAA8X,EAAA,SAAAA,EAAAma,KACAwK,GAAAp5B,EAAA7Q,EACA,IAAA6rB,GAAAplB,GAAAwjC,EAAA,CACA,GAAA7qC,GAAAwsB,GAAA3rB,EAAAwG,EAAAzG,EAAA6rB,EACA7qB,MAAAiU,MAAA7V,GAAA,SAEAY,GAAAgB,KAAA5B,IAAA,KACA0c,EAAA+H,IAAA,MAaA6nB,WAAA,SAAA5vB,EAAA7b,EAAA4E,EAAA1E,GACAA,GAAA,SACA,IAAAyrC,GAAA9vB,EAAAvE,KAAAX,UACAC,EAAA+0B,KAAA/0B,MACAmjB,EAAAnjB,MAAA1W,IAAA0W,EAAAg1B,QACA,OAAA7R,KAAA16B,KAAAwc,EAAA7b,EAAA4E,GAAA5E,EAAAssB,SAAAvrB,KAAAyoC,OAAAtpC,IAAAa,KAAAyoC,OAAAoC,QAAA,KAQAC,YAAA,SAAA9rC,GAGA,MADAgB,MAAAuuB,SAAAvvB,EACAA,GAYA+rC,aAAA,SAAA/rC,GACA,GAAA2d,GAAA3d,GACA,MAAAA,EACK,IAAA8Q,EAAA9Q,GAAA,CAML,IAJA,GAGAyG,GAHAsD,EAAA3J,OAAA2J,KAAA/J,GACAsE,EAAAyF,EAAA7E,OACAhC,EAAA,GAAAgJ,OAAA5H,GAEAA,KACAmC,EAAAsD,EAAAzF,GACApB,EAAAoB,IACAm7B,KAAAh5B,EACA+4B,OAAAx/B,EAAAyG,GAGA,OAAAvD,GAKA,MAHA,gBAAAlD,IAAAkP,MAAAlP,KACAA,EAAA0rB,GAAA1rB,IAEAA,OAIAgsC,OAAA,WAIA,GAHAhrC,KAAAgyB,WAAAyC,OACAz0B,KAAA2gB,QAAA3gB,KAAAiN,IAAAuS,MAAAxf,KAAAgyB,WAAAyC,KAAA,MAEAz0B,KAAAspC,MAGA,IAFA,GACAxuB,GADAxX,EAAAtD,KAAAspC,MAAAplC,OAEAZ,KACAwX,EAAA9a,KAAAspC,MAAAhmC,GACAtD,KAAA4pC,iBAAA9uB,GACAA,EAAAkP,WAmFA,gBAAAjf,EAAAO,IAAA8K,WACAoyB,GAAAmC,cAAA,SAAA3rC,GACAqX,GAAA,mCAAArW,KAAAgyB,WAAAnP,IAAA,MAAAriB,KAAA4Q,UAAApS,GAAA,iEAAAgB,KAAAiN,KAIA,IAAAg+B,KAEAhZ,SAAAmW,GACA9W,UAAA,EAEAniB,KAAA,WACA,GAAA8F,GAAAjV,KAAAiV,EACA,IAAAA,EAAAwV,QAWA,eAAA1f,EAAAO,IAAA8K,UAAAC,GAAA,SAAArW,KAAAkT,WAAA,gDAAAlT,KAAAiN,IACAjN,KAAAkrC,SAAA,MAZA,CAEA,GAAAtwB,GAAA3F,EAAAk2B,kBACAvwB,IAAA,OAAA7D,EAAA6D,EAAA,YACApF,EAAAoF,GACA5a,KAAAorC,OAAAxwB,GAGA5a,KAAAga,OAAAF,GAAA,QACArL,EAAAwG,EAAAjV,KAAAga,UAOA4d,OAAA,SAAA54B,GACAgB,KAAAkrC,UACAlsC,EACAgB,KAAA8a,MACA9a,KAAAw8B,SAGAx8B,KAAAwV,WAIAgnB,OAAA,WACAx8B,KAAAqrC,WACArrC,KAAAqrC,SAAA71B,SACAxV,KAAAqrC,SAAA,MAGArrC,KAAAo7B,UACAp7B,KAAAo7B,QAAA,GAAAnR,IAAAjqB,KAAAiN,GAAAjN,KAAAiV,KAEAjV,KAAA8a,KAAA9a,KAAAo7B,QAAA3pB,OAAAzR,KAAAu5B,MAAAv5B,KAAA2gB,OAAA3gB,KAAA4gB,OACA5gB,KAAA8a,KAAAxF,OAAAtV,KAAAga,SAGAxE,OAAA,WACAxV,KAAA8a,OACA9a,KAAA8a,KAAAtF,SACAxV,KAAA8a,KAAA,MAEA9a,KAAAorC,SAAAprC,KAAAqrC,WACArrC,KAAAsrC,cACAtrC,KAAAsrC,YAAA,GAAArhB,IAAAjqB,KAAAorC,OAAA1qB,UAAA1gB,KAAAiN,GAAAjN,KAAAorC,SAEAprC,KAAAqrC,SAAArrC,KAAAsrC,YAAA75B,OAAAzR,KAAAu5B,MAAAv5B,KAAA2gB,OAAA3gB,KAAA4gB,OACA5gB,KAAAqrC,SAAA/1B,OAAAtV,KAAAga,UAIAgxB,OAAA,WACAhrC,KAAA8a,MACA9a,KAAA8a,KAAAkP,UAEAhqB,KAAAqrC,UACArrC,KAAAqrC,SAAArhB,YAKAuhB,IAEAp8B,KAAA,WAEA,GAAAyL,GAAA5a,KAAAiV,GAAAk2B,kBACAvwB,IAAA,OAAA7D,EAAA6D,EAAA,YACA5a,KAAAorC,OAAAxwB,IAIAgd,OAAA,SAAA54B,GACAgB,KAAAoL,MAAApL,KAAAiV,GAAAjW,GACAgB,KAAAorC,QACAprC,KAAAoL,MAAApL,KAAAorC,QAAApsC,IAIAoM,MAAA,SAAA6J,EAAAjW,GAMA,QAAAwsC,KACAv2B,EAAAuX,MAAAif,QAAAzsC,EAAA,UANAsX,EAAArB,GACAE,EAAAF,EAAAjW,EAAA,KAAAwsC,EAAAxrC,KAAAiN,IAEAu+B,MAQAE,IAEAv8B,KAAA,WACA,GAAA9N,GAAArB,KACAiV,EAAAjV,KAAAiV,GACA02B,EAAA,UAAA12B,EAAA9V,KACA6mB,EAAAhmB,KAAAyoC,OAAAziB,KACAkf,EAAAllC,KAAAyoC,OAAAvD,OACAT,EAAAzkC,KAAAyoC,OAAAhE,SASAmH,GAAA,CAkEA,IAjEAjL,IAAAgL,IACA3rC,KAAAM,GAAA,8BACAsrC,GAAA,IAEA5rC,KAAAM,GAAA,4BACAsrC,GAAA,EAMA5lB,GACA3kB,EAAAwqC,cAOA7rC,KAAA8rC,SAAA,EACAH,GAAA3lB,IACAhmB,KAAAM,GAAA,mBACAe,EAAAyqC,SAAA,IAEA9rC,KAAAM,GAAA,kBACAe,EAAAyqC,SAAA,EAEAzqC,EAAAuf,QAAAvf,EAAAuf,MAAAqI,UACA5nB,EAAA0qC,iBAMA/rC,KAAA6rC,SAAA7rC,KAAA+rC,YAAA,WACA,IAAAH,GAAAvqC,EAAAg4B,OAAA,CAGA,GAAA34B,GAAAwkC,GAAAyG,EAAA59B,EAAAkH,EAAAjW,OAAAiW,EAAAjW,KACAqC,GAAAkL,IAAA7L,GAGAsK,GAAA,WACA3J,EAAAg4B,SAAAh4B,EAAAyqC,SACAzqC,EAAAu2B,OAAAv2B,EAAAumC,SAAA5oC,WAMAylC,IACAzkC,KAAA6rC,SAAAx7B,EAAArQ,KAAA6rC,SAAApH,IAaAzkC,KAAAgsC,UAAA,kBAAAC,QACAjsC,KAAAgsC,UAAA,CACA,GAAAtiB,GAAAuiB,OAAA78B,GAAA9O,GAAA,WACA2rC,QAAAh3B,GAAAyU,GAAA,SAAA1pB,KAAA+rC,aACA/lB,GACAimB,OAAAh3B,GAAAyU,GAAA,QAAA1pB,KAAA6rC,cAGA7rC,MAAAM,GAAA,SAAAN,KAAA+rC,aACA/lB,GACAhmB,KAAAM,GAAA,QAAAN,KAAA6rC,WAKA7lB,GAAAzN,KACAvY,KAAAM,GAAA,iBACA0K,GAAA3J,EAAAwqC,YAEA7rC,KAAAM,GAAA,iBAAA2D,GACA,KAAAA,EAAAwnB,SAAA,IAAAxnB,EAAAwnB,SACApqB,EAAAwqC,eAMA52B,EAAAoC,aAAA,uBAAApC,EAAA4E,SAAA5E,EAAAjW,MAAA6S,UACA7R,KAAAksC,UAAAlsC,KAAA6rC,WAIAjU,OAAA,SAAA54B,GAGAA,EAAA8O,EAAA9O,GACAA,IAAAgB,KAAAiV,GAAAjW,QAAAgB,KAAAiV,GAAAjW,UAGAgsC,OAAA,WACA,GAAA/1B,GAAAjV,KAAAiV,EACA,IAAAjV,KAAAgsC,UAAA,CACA,GAAAtiB,GAAAuiB,OAAA78B,GAAAxD,IAAA,cACAqgC,QAAAh3B,GAAAyU,GAAA,SAAA1pB,KAAA6rC,UACAI,OAAAh3B,GAAAyU,GAAA,QAAA1pB,KAAA6rC,aAKAM,IAEAh9B,KAAA,WACA,GAAA9N,GAAArB,KACAiV,EAAAjV,KAAAiV,EAEAjV,MAAA8qB,SAAA,WAEA,GAAA7V,EAAA3H,eAAA,UACA,MAAA2H,GAAAiW,MAEA,IAAAxqB,GAAAuU,EAAAjW,KAIA,OAHAqC,GAAAonC,OAAAvD,SACAxkC,EAAAqN,EAAArN,IAEAA,GAGAV,KAAA6rC,SAAA,WACAxqC,EAAAkL,IAAAlL,EAAAypB,aAEA9qB,KAAAM,GAAA,SAAAN,KAAA6rC,UAEA52B,EAAAoC,aAAA,aACArX,KAAAksC,UAAAlsC,KAAA6rC,WAIAjU,OAAA,SAAA54B,GACAgB,KAAAiV,GAAArP,QAAAuL,EAAAnS,EAAAgB,KAAA8qB,cAIAshB,IAEAj9B,KAAA,WACA,GAAAk9B,GAAArsC,KAEAqB,EAAArB,KACAiV,EAAAjV,KAAAiV,EAGAjV,MAAAwqC,YAAA,WACAnpC,EAAAumC,UACAvmC,EAAAu2B,OAAAv2B,EAAAumC,SAAAj1B,OAKA,IAAA25B,GAAAtsC,KAAAssC,SAAAr3B,EAAAoC,aAAA,WAGArX,MAAA6rC,SAAA,WACA,GAAA7sC,GAAA8rB,GAAA7V,EAAAq3B,EACAttC,GAAAqC,EAAAonC,OAAAvD,OAAAvoB,GAAA3d,KAAA8G,IAAAiI,KAAA/O,KACAqC,EAAAkL,IAAAvN,IAEAgB,KAAAM,GAAA,SAAAN,KAAA6rC,SAGA,IAAAU,GAAAzhB,GAAA7V,EAAAq3B,GAAA,IACAA,GAAAC,EAAAroC,SAAAooC,GAAA,OAAAC,KACAvsC,KAAAksC,UAAAlsC,KAAA6rC,UAOA7rC,KAAAiN,GAAAorB,IAAA,2BACArtB,GAAAqhC,EAAA7B,eAEAl0B,EAAArB,IACAjK,GAAAhL,KAAAwqC,cAIA5S,OAAA,SAAA54B,GACA,GAAAiW,GAAAjV,KAAAiV,EACAA,GAAAu3B,gBAKA,KAJA,GAGA92B,GAAAhV,EAHAqqB,EAAA/qB,KAAAssC,UAAA3vB,GAAA3d,GACAuc,EAAAtG,EAAAsG,QACAjY,EAAAiY,EAAArX,OAEAZ,KACAoS,EAAA6F,EAAAjY,GACA5C,EAAAgV,EAAApI,eAAA,UAAAoI,EAAAwV,OAAAxV,EAAA1W,MAEA0W,EAAAuV,SAAAF,EAAAI,GAAAnsB,EAAA0B,MAAAyQ,EAAAnS,EAAA0B,IAKAsqC,OAAA,WAEAhrC,KAAAiN,GAAA2tB,KAAA,gBAAA56B,KAAAwqC,eAiDAiC,IAEAt9B,KAAA,WAQA,QAAAu9B,KACA,GAAAhsC,GAAAuU,EAAArP,OACA,OAAAlF,IAAAuU,EAAA3H,eAAA,cACA2H,EAAA03B,YAEAjsC,GAAAuU,EAAA3H,eAAA,eACA2H,EAAA23B,YAEAlsC,EAfA,GAAAW,GAAArB,KACAiV,EAAAjV,KAAAiV,EAEAjV,MAAA8qB,SAAA,WACA,MAAA7V,GAAA3H,eAAA,UAAA2H,EAAAiW,OAAA7pB,EAAAonC,OAAAvD,OAAAn3B,EAAAkH,EAAAjW,OAAAiW,EAAAjW,OAcAgB,KAAA6rC,SAAA,WACA,GAAAlmC,GAAAtE,EAAAumC,SAAA5oC,KACA,IAAA2d,GAAAhX,GAAA,CACA,GAAAjF,GAAAW,EAAAypB,UACA7V,GAAArP,QACAkL,EAAAnL,EAAAjF,GAAA,GACAiF,EAAAlE,KAAAf,GAGAiF,EAAAjE,QAAAhB,OAGAW,GAAAkL,IAAAmgC,MAIA1sC,KAAAM,GAAA,SAAAN,KAAA6rC,UACA52B,EAAAoC,aAAA,aACArX,KAAAksC,UAAAlsC,KAAA6rC,WAIAjU,OAAA,SAAA54B,GACA,GAAAiW,GAAAjV,KAAAiV,EACA0H,IAAA3d,GACAiW,EAAArP,QAAAkL,EAAA9R,EAAAgB,KAAA8qB,eAEA7V,EAAA3H,eAAA,cACA2H,EAAArP,QAAAuL,EAAAnS,EAAAiW,EAAA03B,YAEA13B,EAAArP,UAAA5G,IAMAw5B,IACApyB,KAAAslC,GACAS,SACAC,UACAK,aAGA9mC,IAEAssB,SAAA6V,GACA1jC,QAAA,EACAo0B,YACAiQ,QAAA,4BAaAt5B,KAAA,WAEAnP,KAAA6sC,eACA7sC,KAAA8sC,UAAA9sC,KAAA+sC,UACA,eAAAhiC,EAAAO,IAAA8K,UAAAC,GAAA,2DAAArW,KAAAgyB,WAAAnP,IAAA,wEAAA7iB,KAAAiN,GAEA,IAEAzN,GAFAyV,EAAAjV,KAAAiV,GACAV,EAAAU,EAAA4E,OAEA,cAAAtF,EACA/U,EAAAg5B,GAAAvjB,EAAA9V,OAAAq5B,GAAApyB,SACK,eAAAmO,EACL/U,EAAAg5B,GAAA4T,WACK,iBAAA73B,EAIL,YADA,eAAAxJ,EAAAO,IAAA8K,UAAAC,GAAA,0CAAA9B,EAAAvU,KAAAiN,IAFAzN,GAAAg5B,GAAApyB,KAKA6O,EAAAs1B,UAAAvqC,KACAR,EAAA2P,KAAA7Q,KAAA0B,MACAA,KAAA43B,OAAAp4B,EAAAo4B,OACA53B,KAAAgtC,QAAAxtC,EAAAwrC,QAOA6B,aAAA,WACA,GAAA36B,GAAAlS,KAAAkS,OACA,IAAAA,EAEA,IADA,GAAA5O,GAAA4O,EAAAhO,OACAZ,KAAA,CACA,GAAAqO,GAAAiK,GAAA5b,KAAAiN,GAAA6T,SAAA,UAAA5O,EAAA5O,GAAA6C,OACA,kBAAAwL,MAAAupB,QACAl7B,KAAA8sC,SAAA,GAEAn7B,EAAAqpB,QACAh7B,KAAA+sC,UAAA,KAKA/B,OAAA,WACAhrC,KAAAiV,GAAAs1B,UAAA,KACAvqC,KAAAgtC,SAAAhtC,KAAAgtC,YAKAxhB,IACAyhB,IAAA,GACAC,IAAA,EACAC,MAAA,GACAC,MAAA,GACAhsC,UAAA,MACAisC,GAAA,GACA/c,KAAA,GACAgd,MAAA,GACAC,KAAA,IA+CAC,IAEAvb,SAAA4V,GACA4F,iBAAA,EACAjiB,YAEArc,KAAA,WAEA,cAAAnP,KAAAiV,GAAA4E,SAAA,SAAA7Z,KAAAmS,IAAA,CACA,GAAA9Q,GAAArB,IACAA,MAAA0tC,WAAA,WACAptC,EAAAe,EAAA4T,GAAA04B,cAAAtsC,EAAA8Q,IAAA9Q,EAAA7B,QAAA6B,EAAAszB,UAAAiZ,UAEA5tC,KAAAM,GAAA,OAAAN,KAAA0tC,cAIA9V,OAAA,SAAAp4B,GAOA,GAJAQ,KAAAgyB,WAAAnP,MACArjB,EAAA,cAGA,kBAAAA,GAEA,YADA,eAAAuL,EAAAO,IAAA8K,UAAAC,GAAA,QAAArW,KAAAmS,IAAA,KAAAnS,KAAAkT,WAAA,mCAAA1T,EAAAQ,KAAAiN,IAKAjN,MAAA20B,UAAAkZ,OACAruC,EAAAksB,GAAAlsB,IAEAQ,KAAA20B,UAAAmZ,UACAtuC,EAAAosB,GAAApsB,IAEAQ,KAAA20B,UAAAtzB,OACA7B,EAAAssB,GAAAtsB,GAGA,IAAAuJ,GAAA3J,OAAA2J,KAAA/I,KAAA20B,WAAAhjB,OAAA,SAAAlM,GACA,eAAAA,GAAA,YAAAA,GAAA,SAAAA,GAAA,YAAAA,GAEAsD,GAAA7E,SACA1E,EAAA4rB,GAAA5rB,EAAAuJ,IAGA/I,KAAA+tC,QACA/tC,KAAAR,UAEAQ,KAAA0tC,WACA1tC,KAAA0tC,aAEAptC,EAAAN,KAAAiV,GAAAjV,KAAAmS,IAAAnS,KAAAR,QAAAQ,KAAA20B,UAAAiZ,UAIAG,MAAA,WACA,GAAA94B,GAAAjV,KAAA0tC,WAAA1tC,KAAAiV,GAAA04B,cAAA3tC,KAAAiV,EACAjV,MAAAR,SACAoM,EAAAqJ,EAAAjV,KAAAmS,IAAAnS,KAAAR,UAIAwrC,OAAA,WACAhrC,KAAA+tC,UAIAxhB,IAAA,2BACAG,IAAA,qBACAshB,GAAA,gBACA9hB,GAAA9sB,OAAAqS,OAAA,MAEA4a,GAAA,KAEAG,IAEAjtB,MAAA,EAEAq4B,OAAA,SAAA54B,GACA,gBAAAA,GACAgB,KAAAiV,GAAAuX,MAAAyhB,QAAAjvC,EACK2d,GAAA3d,GACLgB,KAAAkuC,aAAAlvC,EAAAmvC,OAAAjpC,OAEAlF,KAAAkuC,aAAAlvC,QAIAkvC,aAAA,SAAAlvC,GAGA,GACAmH,GAAAzF,EADAuT,EAAAjU,KAAAiU,QAAAjU,KAAAiU,SAEA,KAAA9N,IAAA8N,GACA9N,IAAAnH,KACAgB,KAAAouC,aAAAjoC,EAAA,YACA8N,GAAA9N,GAGA,KAAAA,IAAAnH,GACA0B,EAAA1B,EAAAmH,GACAzF,IAAAuT,EAAA9N,KACA8N,EAAA9N,GAAAzF,EACAV,KAAAouC,aAAAjoC,EAAAzF,KAKA0tC,aAAA,SAAAniB,EAAAjtB,GAEA,GADAitB,EAAAD,GAAAC,GAIA,GADA,MAAAjtB,OAAA,IACAA,EAAA,CACA,GAAAqvC,GAAAL,GAAAtgC,KAAA1O,GAAA,cACAqvC,IAEA,eAAAtjC,EAAAO,IAAA8K,UACAC,GAAA,6HAEArX,IAAAyP,QAAAu/B,GAAA,IAAAn8B,OACA7R,KAAAiV,GAAAuX,MAAA8hB,YAAAriB,EAAAQ,MAAAztB,EAAAqvC,IAEAruC,KAAAiV,GAAAuX,MAAAP,EAAAE,OAAAntB,MAGAgB,MAAAiV,GAAAuX,MAAAP,EAAAE,OAAA,KA4DAoiB,GAAA,+BACAC,GAAA,UAGAC,GAAA,sGAGAC,GAAA,qCAGAC,GAAA,6CAIAC,IACA5vC,MAAA,SACA6vC,aAAA,aACAC,cAAA,eAGAC,IAEA9c,SAAA8V,GAEA54B,KAAA,WACA,GAAA+d,GAAAltB,KAAAmS,IACAoC,EAAAvU,KAAAiV,GAAA4E,OAEAqT,KACAltB,KAAAT,MAAA,EAGA,IAAAyyB,GAAAhyB,KAAAgyB,WACAlgB,EAAAkgB,EAAA4D,MACA,IAAA9jB,IAEAkgB,EAAA2D,aACA31B,KAAAkT,WAAAsB,EAAA1C,EAAA9R,KAAA2gB,QAAA3gB,KAAAiN,MAIAwhC,GAAA/gC,KAAAwf,IAAA,SAAAA,IAAA,YAAA3Y,GAAA,SAAAA,MACA,eAAAxJ,EAAAO,IAAA8K,UAAAC,GAAA6W,EAAA,KAAA8E,EAAAnP,IAAA,yFAAA7iB,KAAAiN,IACAjN,KAAAiV,GAAAiC,gBAAAgW,GACAltB,KAAAkrC,SAAA,GAIA,eAAAngC,EAAAO,IAAA8K,UAAA,CACA,GAAAyM,GAAAqK,EAAA,KAAA8E,EAAAnP,IAAA,KAEA,SAAAqK,GACA7W,GAAAwM,EAAA,qFAAA7iB,KAAAiN,IAIA,UAAAigB,GACA7W,GAAAwM,EAAA,8HAAA7iB,KAAAiN,MAMA2qB,OAAA,SAAA54B,GACA,IAAAgB,KAAAkrC,QAAA,CAGA,GAAAhe,GAAAltB,KAAAmS,GACAnS,MAAAmS,IACAnS,KAAAouC,aAAAlhB,EAAAluB,GAEAgB,KAAAkuC,aAAAlvC,SAKAkvC,aAAA1hB,GAAA0hB,aAEAE,aAAA,SAAAlhB,EAAAluB,GACA,GAAAiW,GAAAjV,KAAAiV,GACA2gB,EAAA51B,KAAAgyB,WAAA4D,MAIA,IAHA51B,KAAA20B,UAAAxI,QACAe,EAAA1e,EAAA0e,KAEA0I,GAAA8Y,GAAAhhC,KAAAwf,QAAAjY,GAAA,CACA,GAAA+5B,GAAA,UAAA9hB,GAAA,MAAAluB,EACA,GAAAA,CAEAiW,GAAAiY,KAAA8hB,IACA/5B,EAAAiY,GAAA8hB,GAIA,GAAAC,GAAAL,GAAA1hB,EACA,KAAA0I,GAAAqZ,EAAA,CACAh6B,EAAAg6B,GAAAjwC,CAEA,IAAA2G,GAAAsP,EAAAs1B,SACA5kC,IACAA,EAAAkmC,WAIA,gBAAA3e,GAAA,aAAAjY,EAAA4E,YACA5E,GAAAiC,gBAAAgW,QAIAyhB,GAAAjhC,KAAAwf,GACAjY,EAAAwD,aAAAyU,EAAAluB,EAAA,gBACK,MAAAA,QAAA,EACL,UAAAkuB,GAGAjY,EAAAW,YACA5W,GAAA,IAAAiW,EAAAW,UAAAxX,GAAA,eAEAia,EAAApD,EAAAjW,IACOwvC,GAAA9gC,KAAAwf,GACPjY,EAAAi6B,eAAAX,GAAArhB,EAAAluB,KAAA,KAAAA,GAEAiW,EAAAwD,aAAAyU,EAAAluB,KAAA,KAAAA,GAGAiW,EAAAiC,gBAAAgW,MAKAjY,IAEAgd,SAAAgW,GAEA94B,KAAA,WAEA,GAAAnP,KAAAmS,IAAA,CAGA,GAAA/T,GAAA4B,KAAA5B,GAAAoQ,EAAAxO,KAAAmS,KACAwnB,GAAA35B,KAAA2gB,QAAA3gB,KAAAiN,IAAAwS,IACAjT,GAAAmtB,EAAAv7B,GACAu7B,EAAAv7B,GAAA4B,KAAAiV,GAEA4J,GAAA8a,EAAAv7B,EAAA4B,KAAAiV,MAIA+1B,OAAA,WACA,GAAArR,IAAA35B,KAAA2gB,QAAA3gB,KAAAiN,IAAAwS,IACAka,GAAA35B,KAAA5B,MAAA4B,KAAAiV,KACA0kB,EAAA35B,KAAA5B,IAAA,QAKAq2B,IACAtlB,KAAA,WACA,eAAApE,EAAAO,IAAA8K,UAAAC,GAAA,SAAArW,KAAAmS,IAAA,iDAAAnS,KAAAiV,GAAA4E,QAAA7K,cAAA,KAAAhP,KAAAiN,MAIAkiC,IACAhgC,KAAA,WACA,GAAA8F,GAAAjV,KAAAiV,EACAjV,MAAAiN,GAAAywB,MAAA,+BACAzoB,EAAAiC,gBAAA,eAMAgd,IACA9tB,KAAA+/B,GACAhkC,QACAitC,MAAA5G,GACA6G,KAAApE,GACAM,QACA5lC,SACArF,GAAAktC,GACAr+B,KAAA4/B,GACA95B,MACAwf,OACA0a,UAGAG,IAEA/vC,MAAA,EAEAq4B,OAAA,SAAA54B,GACAA,EAEK,gBAAAA,GACLgB,KAAAqY,SAAArZ,EAAA6S,OAAAgb,MAAA,QAEA7sB,KAAAqY,SAAAsU,GAAA3tB,IAJAgB,KAAAuvC,WAQAl3B,SAAA,SAAArZ,GACAgB,KAAAuvC,QAAAvwC,EACA,QAAAsE,GAAA,EAAAgM,EAAAtQ,EAAAkF,OAAqCZ,EAAAgM,EAAOhM,IAAA,CAC5C,GAAA5C,GAAA1B,EAAAsE,EACA5C,IACA0K,GAAApL,KAAAiV,GAAAvU,EAAAgY,IAGA1Y,KAAAwvC,SAAAxwC,GAGAuwC,QAAA,SAAAvwC,GACA,GAAAwwC,GAAAxvC,KAAAwvC,QACA,IAAAA,EAEA,IADA,GAAAlsC,GAAAksC,EAAAtrC,OACAZ,KAAA,CACA,GAAAmC,GAAA+pC,EAAAlsC,KACAtE,KAAA8R,QAAArL,GAAA,IACA2F,GAAApL,KAAAiV,GAAAxP,EAAAqT,OA+DAja,IAEAozB,SAAAiW,GAEAO,QAAA,kDAYAt5B,KAAA,WACAnP,KAAAiV,GAAAwV,QAkCA,eAAA1f,EAAAO,IAAA8K,UAAAC,GAAA,2BAAArW,KAAAkT,WAAA,iCAAAlT,KAAAiV,KAhCAjV,KAAAyvC,UAAAzvC,KAAAyoC,OAAAgH,UACAzvC,KAAAyvC,YACAzvC,KAAAiU,UAGAjU,KAAAyoC,OAAAiH,iBAEA1vC,KAAA0vC,eAAA12B,GAAAhZ,KAAAiV,IAAA,IAGAjV,KAAA2vC,mBAAA3vC,KAAA4vC,UAAA,KAEA5vC,KAAA6vC,gBAAA,EACA7vC,KAAA8vC,iBAAA,KAEA9vC,KAAAga,OAAAF,GAAA,eACArL,EAAAzO,KAAAiV,GAAAjV,KAAAga,QAKAha,KAAAiV,GAAAiC,gBAAA,MACAlX,KAAAiV,GAAAiC,gBAAA,OAEAlX,KAAAgyB,WAAAyC,KACAz0B,KAAAiV,GAAAiC,gBAAA,SAAApI,EAAA9O,KAAAgyB,WAAAyC,MAGAz0B,KAAA40B,SACA50B,KAAA+vC,aAAA/vC,KAAAkT,cAYA0kB,OAAA,SAAA54B,GACAgB,KAAA40B,SACA50B,KAAA+vC,aAAA/wC,IAiBA+wC,aAAA,SAAA/wC,EAAAiS,GAEA,GADAjR,KAAAgwC,oBACAhxC,EAKK,CACL,GAAAqC,GAAArB,IACAA,MAAAiwC,iBAAAjxC,EAAA,WACAqC,EAAA6uC,eAAAj/B,SANAjR,MAAAmwC,SAAA,GACAnwC,KAAAwV,OAAAxV,KAAAowC,QAAAn/B,GACAjR,KAAAowC,QAAA,MAiBAH,iBAAA,SAAAjxC,EAAAiS,GACA,GAAA5P,GAAArB,IACAA,MAAA2vC,mBAAA3+B,EAAA,SAAA4+B,GACAvuC,EAAAgvC,cAAAT,EAAAr0B,QAAApV,OAAA,gBAAAnH,KAAA,MACAqC,EAAAuuC,YACA3+B,MAEAjR,KAAAiN,GAAAkuB,kBAAAn8B,EAAAgB,KAAA2vC,qBAYAO,eAAA,SAAAj/B,GAEAjR,KAAAmwC,SAAA,EACA,IAAA9uC,GAAArB,KACAswC,EAAAtwC,KAAA4vC,UAAAr0B,QAAA0oB,SACAsM,EAAAvwC,KAAAwwC,YACAC,EAAAzwC,KAAA0wC,OACAJ,KAAAC,GACAvwC,KAAA2wC,WAAAF,EACA3jB,GAAAwjB,EAAAG,EAAA,WACApvC,EAAAsvC,aAAAF,IAGApvC,EAAAsvC,WAAA,KACAtvC,EAAAsU,WAAA86B,EAAAx/B,QAIAs/B,GACAE,EAAAzvB,aAEAhhB,KAAA2V,WAAA86B,EAAAx/B,KAUA++B,kBAAA,WACAhwC,KAAA2vC,qBACA3vC,KAAA2vC,mBAAA3sC,SACAhD,KAAA2vC,mBAAA,OAaAe,MAAA,SAAAE,GACA,GAAAL,GAAAvwC,KAAAwwC,WACA,IAAAD,EACA,MAAAA,EAEA,IAAAvwC,KAAA4vC,UAAA,CAEA,GAAAr0B,IACApV,KAAAnG,KAAAqwC,cACAp7B,GAAAoG,GAAArb,KAAAiV,IACAnW,SAAAkB,KAAA0vC,eAIA/4B,OAAA3W,KAAAu5B,OAAAv5B,KAAAiN,GAGAgtB,iBAAAj6B,KAAA0vC,eACAhW,KAAA15B,KAAAgyB,WAAAyC,IACAtD,cAAA,EACA0f,cAAA7wC,KAAA6wC,cAIAnwB,SAAA1gB,KAAAiN,GAKA0T,OAAA3gB,KAAA2gB,OAKAC,MAAA5gB,KAAA4gB,MAKAgwB,IACA1rC,EAAAqW,EAAAq1B,EAEA,IAAA13B,GAAA,GAAAlZ,MAAA4vC,UAAAr0B,EAQA,OAPAvb,MAAAyvC,YACAzvC,KAAAiU,MAAAjU,KAAA4vC,UAAA1lB,KAAAhR,GAGA,eAAAnO,EAAAO,IAAA8K,UAAApW,KAAAiV,GAAAoC,aAAA,eAAA6B,EAAA8G,aACA3J,GAAA,+DAAA6C,EAAA4H,SAAAhiB,SAAAoa,GAEAA,IAUAs3B,UAAA,WACA,MAAAxwC,MAAAyvC,WAAAzvC,KAAAiU,MAAAjU,KAAA4vC,UAAA1lB,MAUAimB,QAAA,SAAAW,GACA9wC,KAAA2wC,aACA3wC,KAAAyvC,WACAzvC,KAAA2wC,WAAAjW,WAEA16B,KAAA2wC,WAAA,KAEA,IAAAz3B,GAAAlZ,KAAAowC,OACA,QAAAl3B,GAAAlZ,KAAAyvC,eACAv2B,IAEAA,EAAA63B,WAAA,EACA73B,EAAA8H,YAAA,SAOA9H,GAAAwhB,UAAA,EAAAoW,IAUAt7B,OAAA,SAAA0D,EAAAjI,GACA,GAAAw+B,GAAAzvC,KAAAyvC,SACA,IAAAv2B,EAAA,CAKAlZ,KAAA6vC,kBACA7vC,KAAA8vC,iBAAA7+B,CACA,IAAA5P,GAAArB,IACAkZ,GAAAxX,QAAA,WACAL,EAAAwuC,kBACAJ,GAAAv2B,EAAAohB,YACAj5B,EAAAwuC,iBAAAxuC,EAAAyuC,mBACAzuC,EAAAyuC,mBACAzuC,EAAAyuC,iBAAA,YAGK7+B,IACLA,KAYA0E,WAAA,SAAAT,EAAAjE,GACA,GAAA5P,GAAArB,KACAgE,EAAAhE,KAAAowC,OAKA,QAHApsC,MAAA+sC,WAAA,GACA77B,EAAA67B,WAAA,EACA/wC,KAAAowC,QAAAl7B,EACA7T,EAAAonC,OAAAuI,gBACA,aACA97B,EAAAioB,QAAA97B,EAAA2Y,OAAA,WACA3Y,EAAAmU,OAAAxR,EAAAiN,IAEA,MACA,cACA5P,EAAAmU,OAAAxR,EAAA,WACAkR,EAAAioB,QAAA97B,EAAA2Y,OAAA/I,IAEA,MACA,SACA5P,EAAAmU,OAAAxR,GACAkR,EAAAioB,QAAA97B,EAAA2Y,OAAA/I,KAQA+5B,OAAA,WAKA,GAJAhrC,KAAAgwC,oBAEAhwC,KAAAmwC,UAEAnwC,KAAAiU,MAAA,CACA,OAAAxO,KAAAzF,MAAAiU,MACAjU,KAAAiU,MAAAxO,GAAAi1B,UAEA16B,MAAAiU,MAAA,QA0BAqZ,GAAA9Z,GAAAwvB,kBACA5V,MAGAC,GAAA,sBACAM,GAAA,uDAgXAsjB,GAAAz9B,GAAAwvB,kBAEA5U,IAEAjf,KAAA,WACA,GAAA+J,GAAAlZ,KAAAiN,GACA0J,EAAAuC,EAAAwH,SAEAuL,EAAAjsB,KAAAgyB,WAAA/F,KACAilB,EAAAjlB,EAAAxK,KACA0vB,EAAAllB,EAAA2B,WACAxpB,EAAA6nB,EAAApK,OAAAovB,GAAAzjB,QAEA4jB,EAAApxC,KAAAoxC,cAAA,GAAA1rB,IAAA/O,EAAAw6B,EAAA,SAAAzwC,GACAmuB,GAAA3V,EAAA+S,EAAAvrB,KAEA0D,SACA8N,QAAA+Z,EAAA/Z,QAGAoS,MAAAtkB,KAAA2gB,QAOA,IAHAuN,GAAAhV,EAAA+S,EAAAmlB,EAAApyC,OAGAoF,EAAA,CAGA,GAAA/C,GAAArB,IACAkZ,GAAAwkB,MAAA,8BACAr8B,EAAAgwC,aAAA,GAAA3rB,IAAAxM,EAAAg4B,EAAA,SAAAxwC,GACA0wC,EAAA7kC,IAAA7L,KAKAs7B,MAAA,QAMAgP,OAAA,WACAhrC,KAAAoxC,cAAAzW,WACA36B,KAAAqxC,cACArxC,KAAAqxC,aAAA1W,aAKAjL,MACAnJ,IAAA,EAkCAiK,GAAA,aACAC,GAAA,YACA6gB,GAAArQ,GAAA,WACAsQ,GAAArQ,GAAA,WAiBAsQ,GAAAnR,IAAAx/B,OAAA4wC,sBACAC,GAAAF,GAEA,SAAApiC,GACAoiC,GAAA,WACAA,GAAApiC,MAEC,SAAAA,GACDpF,WAAAoF,EAAA,KAsCAuiC,GAAA7hB,GAAAroB,SA2BAkqC,IAAAxE,MAAA,SAAAz3B,EAAAzE,GACAjR,KAAA4xC,gBACA5xC,KAAA2pB,SAAA,eACA3pB,KAAAiR,KACAyH,GAAA1Y,KAAAiV,GAAAjV,KAAA+vB,YACAra,IACA1V,KAAAqwB,SAAA,EACArwB,KAAA6xC,eAAA,SACA7xC,KAAAqwB,UAGArwB,KAAAgD,OAAAhD,KAAA6V,OAAA7V,KAAA6V,MAAAi8B,eACAtiB,GAAAxvB,KAAA+xC,iBASAJ,GAAAI,cAAA,WACA,GAAA1F,GAAArsC,IAGAA,MAAAowB,aAAA,EACAshB,GAAA,WACArF,EAAAjc,aAAA,GAEA,IAAA4hB,GAAAhyC,KAAAgyC,UACA7yC,EAAAa,KAAAiyC,qBAAAjyC,KAAA+vB,WACA/vB,MAAAmwB,YAUGhxB,IAAAqxB,IACH1X,GAAA9Y,KAAAiV,GAAAjV,KAAA+vB,YAVA5wB,IAAAqxB,IAEA1X,GAAA9Y,KAAAiV,GAAAjV,KAAA+vB,YACA/vB,KAAAkyC,WAAAp8B,GAAAk8B,IACK7yC,IAAAsxB,GACLzwB,KAAAkyC,WAAA/Q,GAAA6Q,GAEAA,KAWAL,GAAAK,UAAA,WACAhyC,KAAAqwB,SAAA,EACArwB,KAAAgD,OAAAhD,KAAAmwB,YAAA,KACArX,GAAA9Y,KAAAiV,GAAAjV,KAAA+vB,YACA/vB,KAAA2pB,SAAA,cACA3pB,KAAAiR,IAAAjR,KAAAiR,MAwBA0gC,GAAAQ,MAAA,SAAAz8B,EAAAzE,GACAjR,KAAA4xC,gBACA5xC,KAAA2pB,SAAA,eACA3pB,KAAA0V,KACA1V,KAAAiR,KACAyH,GAAA1Y,KAAAiV,GAAAjV,KAAAgwB,YACAhwB,KAAAswB,MAAA,EACAtwB,KAAA6xC,eAAA,SACA7xC,KAAAswB,OAGAtwB,KAAAgD,OAAAhD,KAAA6V,OAAA7V,KAAA6V,MAAAu8B,eAKApyC,KAAA0V,KAAA1V,KAAAmwB,cAIAnwB,KAAAowB,YACApwB,KAAAqyC,YAEA7iB,GAAAxvB,KAAAsyC,kBASAX,GAAAW,cAAA,WACA,GAAAnzC,GAAAa,KAAAiyC,qBAAAjyC,KAAAgwB,WACA,IAAA7wB,EAAA,CACA,GAAA0Y,GAAA1Y,IAAAqxB,GAAA1a,GAAAqrB,EACAnhC,MAAAkyC,WAAAr6B,EAAA7X,KAAAqyC,eAEAryC,MAAAqyC,aAQAV,GAAAU,UAAA,WACAryC,KAAAswB,MAAA,EACAtwB,KAAAgD,OAAAhD,KAAAmwB,YAAA,KACAnwB,KAAA0V,KACAoD,GAAA9Y,KAAAiV,GAAAjV,KAAAgwB,YACAhwB,KAAA2pB,SAAA,cACA3pB,KAAAiR,IAAAjR,KAAAiR,KACAjR,KAAA0V,GAAA,MAQAi8B,GAAAC,cAAA,WACA5xC,KAAA0V,GAAA1V,KAAAiR,GAAA,IACA,IAAAshC,IAAA,CACAvyC,MAAAkwB,eACAqiB,GAAA,EACA3mC,EAAA5L,KAAAiV,GAAAjV,KAAAiwB,gBAAAjwB,KAAAkwB,cACAlwB,KAAAiwB,gBAAAjwB,KAAAkwB,aAAA,MAEAlwB,KAAAmwB,cACAoiB,GAAA,EACAvyC,KAAAmwB,YAAAntB,SACAhD,KAAAmwB,YAAA,MAEAoiB,IACAz5B,GAAA9Y,KAAAiV,GAAAjV,KAAA+vB,YACAjX,GAAA9Y,KAAAiV,GAAAjV,KAAAgwB,aAEAhwB,KAAAgD,SACAhD,KAAAgD,OAAA1E,KAAA0B,KAAAiN,GAAAjN,KAAAiV,IACAjV,KAAAgD,OAAA,OAUA2uC,GAAAhoB,SAAA,SAAAxqB,GACAa,KAAA6V,OAAA7V,KAAA6V,MAAA1W,IACAa,KAAA6V,MAAA1W,GAAAb,KAAA0B,KAAAiN,GAAAjN,KAAAiV,KAeA08B,GAAAE,eAAA,SAAA1yC,GACA,GAAA65B,GAAAh5B,KAAA6V,OAAA7V,KAAA6V,MAAA1W,EACA65B,KACAA,EAAA90B,OAAA,IACAlE,KAAAmwB,YAAAnf,EAAAhR,KAAAb,EAAA,UAEA65B,EAAA16B,KAAA0B,KAAAiN,GAAAjN,KAAAiV,GAAAjV,KAAAmwB,eAYAwhB,GAAAM,qBAAA,SAAA95B,GAEA,MAAArC,IAMA1V,SAAAoyC,QAEAxyC,KAAA6V,OAAA7V,KAAA6V,MAAA48B,OAAA,GAEA/hB,GAAA1wB,KAAAiV,KAVA,CAaA,GAAA9V,GAAAa,KAAAb,MAAAa,KAAAuwB,UAAApY,EACA,IAAAhZ,EAAA,MAAAA,EACA,IAAAuzC,GAAA1yC,KAAAiV,GAAAuX,MACAmmB,EAAA9xC,OAAA+xC,iBAAA5yC,KAAAiV,IACA49B,EAAAH,EAAApB,KAAAqB,EAAArB,GACA,IAAAuB,GAAA,OAAAA,EACA1zC,EAAAqxB,OACG,CACH,GAAAsiB,GAAAJ,EAAAnB,KAAAoB,EAAApB,GACAuB,IAAA,OAAAA,IACA3zC,EAAAsxB,IAMA,MAHAtxB,KACAa,KAAAuwB,UAAApY,GAAAhZ,GAEAA,IAUAwyC,GAAAO,WAAA,SAAAr6B,EAAA5G,GACAjR,KAAAiwB,gBAAApY,CACA,IAAAxW,GAAArB,KACAiV,EAAAjV,KAAAiV,GACA89B,EAAA/yC,KAAAkwB,aAAA,SAAAjsB,GACAA,EAAAiR,SAAAD,IACArJ,EAAAqJ,EAAA4C,EAAAk7B,GACA1xC,EAAA4uB,gBAAA5uB,EAAA6uB,aAAA,MACA7uB,EAAA8uB,aAAAlf,GACAA,KAIA3Q,GAAA2U,EAAA4C,EAAAk7B,GAsBA,IAAAC,KAEA/gB,SAAA+V,GAEApQ,OAAA,SAAAx5B,EAAA60C,GACA,GAAAh+B,GAAAjV,KAAAiV,GAEAY,EAAA+F,GAAA5b,KAAAiN,GAAA6T,SAAA,cAAA1iB,EACAA,MAAA,IACA60C,KAAA,IACAh+B,EAAAW,UAAA,GAAAka,IAAA7a,EAAA7W,EAAAyX,EAAA7V,KAAAiN,IACA6L,GAAA7D,EAAAg+B,EAAA,eACAv6B,GAAAzD,EAAA7W,EAAA,iBAIAs2B,IACAlI,SACA0mB,QAAA5D,GACAzwC,aACAotB,KAAAmC,GACAzY,WAAAq9B,IAIAhd,GAAA,cACA7C,GAAA,YACAkC,GAAA,yBACAD,GAAA,YACAW,GAAA,2BAGA7D,GAAA,IACAoD,GAAA,GAgjBAR,IAAAxD,UAAA,CAkNA,IAAAkF,IAAA,aAwMA+I,GAAAngC,OAAAsjC,QACArgC,WACAkwB,uBACAG,eACAwD,cACAO,kBAmPA0B,GAAA,WAqOAgB,IAAA1xB,UAAAsqB,MAAA,WACA,GAAA5rB,GAAAnG,KAAAmG,KACA6rB,EAAAhyB,KAAAgyB,UAGA,eAAA7rB,GAAAnG,KAAAiN,GAAA8I,cAAA/V,KAAAiV,IAAAjV,KAAAiV,GAAAiC,gBAAA,CACA,GAAAgW,GAAA8E,EAAA9E,MAAA,KAAA/mB,CACAnG,MAAAiV,GAAAiC,gBAAAgW,GAIA,GAAAld,GAAAgiB,EAAAhiB,GAgBA,IAfA,kBAAAA,GACAhQ,KAAA43B,OAAA5nB,EAEA9K,EAAAlF,KAAAgQ,GAIAhQ,KAAAmzC,eAGAnzC,KAAAmP,MACAnP,KAAAmP,OAEAnP,KAAAq5B,QAAA,EAEAr5B,KAAA40B,QACA50B,KAAA43B,QAAA53B,KAAA43B,OAAA5F,EAAAnP,SACG,KAAA7iB,KAAAkT,YAAAlT,KAAA20B,aAAA30B,KAAA43B,QAAA53B,KAAAoE,UAAApE,KAAAozC,kBAAA,CAEH,GAAAjnC,GAAAnM,IACAA,MAAA43B,OACA53B,KAAAqzC,QAAA,SAAA3yC,EAAA4yC,GACAnnC,EAAAitB,SACAjtB,EAAAyrB,OAAAl3B,EAAA4yC,IAIAtzC,KAAAqzC,QAAAna,EAEA,IAAAwM,GAAA1lC,KAAA8qC,YAAA37B,EAAAnP,KAAA8qC,YAAA9qC,MAAA,KACA2lC,EAAA3lC,KAAA+qC,aAAA57B,EAAAnP,KAAA+qC,aAAA/qC,MAAA,KACAqlB,EAAArlB,KAAA4nC,SAAA,GAAAliB,IAAA1lB,KAAAiN,GAAAjN,KAAAkT,WAAAlT,KAAAqzC,SAEAnhC,QAAAlS,KAAAkS,QACA9N,OAAApE,KAAAoE,OACA7E,KAAAS,KAAAT,KACAmmC,aACAC,cACArhB,MAAAtkB,KAAA2gB,QAKA3gB,MAAAksC,UACAlsC,KAAAksC,YACKlsC,KAAA43B,QACL53B,KAAA43B,OAAAvS,EAAArmB,SAUAm6B,GAAA1xB,UAAA0rC,aAAA,WACA,GAAAnzC,KAAAyoC,OAAA,CAGA,GAAAA,GAAAzoC,KAAAyoC,MAEAzoC,MAAAyoC,OAAArpC,OAAAqS,OAAA,KAGA,KAFA,GACAhM,GAAA/E,EAAA6yC,EADAjwC,EAAAmlC,EAAAvkC,OAEAZ,KACAmC,EAAAqJ,EAAA25B,EAAAnlC,IACAiwC,EAAA/kC,EAAA/I,GACA/E,EAAAyW,EAAAnX,KAAAiV,GAAAxP,GACA,MAAA/E,EAEAV,KAAAwzC,mBAAAD,EAAA7yC,IAGAA,EAAAqW,EAAA/W,KAAAiV,GAAAxP,GACA,MAAA/E,IACAV,KAAAyoC,OAAA8K,GAAA,KAAA7yC,SAaAy4B,GAAA1xB,UAAA+rC,mBAAA,SAAA/tC,EAAAyN,GACA,GAAA7R,GAAArB,KACA+sB,GAAA,EACA0mB,GAAAzzC,KAAA2gB,QAAA3gB,KAAAiN,IAAA8uB,OAAA7oB,EAAA,SAAAxS,EAAA4yC,GAIA,GAHAjyC,EAAAonC,OAAAhjC,GAAA/E,EAGAqsB,EAAA,CACA,GAAA9b,GAAA5P,EAAAqyC,eAAAryC,EAAAqyC,cAAAjuC,EACAwL,IACAA,EAAA3S,KAAA+C,EAAAX,EAAA4yC,OAGAvmB,IAAA,IAGAkP,WAAA,EACAxW,MAAA,KACKzlB,KAAA2zC,mBAAA3zC,KAAA2zC,sBAAAlyC,KAAAgyC,IAcLta,GAAA1xB,UAAA2rC,gBAAA,WACA,GAAAlgC,GAAAlT,KAAAkT,UACA,IAAAA,GAAAlT,KAAAytC,kBAAAhpB,GAAAvR,GAAA,CACA,GAAA9D,GAAA6T,GAAA/P,GAAAP,IACA2R,EAAAtkB,KAAA2gB,QAAA3gB,KAAAiN,GACAzN,EAAA,SAAAyE,GACAqgB,EAAAsvB,OAAA3vC,EACAmL,EAAA9Q,KAAAgmB,KACAA,EAAAsvB,OAAA,KAMA,OAJA5zC,MAAAkS,UACA1S,EAAA8kB,EAAAwW,cAAAt7B,EAAA,KAAAQ,KAAAkS,UAEAlS,KAAA43B,OAAAp4B,IACA,IAaA25B,GAAA1xB,UAAA8E,IAAA,SAAAvN,GAEAgB,KAAAoE,OACApE,KAAAgmC,UAAA,WACAhmC,KAAA4nC,SAAAr7B,IAAAvN,KAEG,eAAA+L,EAAAO,IAAA8K,UACHC,GAAA,8DAWA8iB,GAAA1xB,UAAAu+B,UAAA,SAAA52B,GACA,GAAA/N,GAAArB,IACAqB,GAAA+3B,SAAA,EACAhqB,EAAA9Q,KAAA+C,GACA2J,GAAA,WACA3J,EAAA+3B,SAAA,KAcAD,GAAA1xB,UAAAnH,GAAA,SAAAuX,EAAArY,EAAAsY,GACAxX,EAAAN,KAAAiV,GAAA4C,EAAArY,EAAAsY,IAA0C9X,KAAAs5B,aAAAt5B,KAAAs5B,gBAAA73B,MAAAoW,EAAArY,KAO1C25B,GAAA1xB,UAAA6qB,UAAA,WACA,GAAAtyB,KAAAq5B,OAAA,CACAr5B,KAAAq5B,QAAA,EACAr5B,KAAAgrC,QACAhrC,KAAAgrC,SAEAhrC,KAAA4nC,UACA5nC,KAAA4nC,SAAAjN,UAEA,IACAr3B,GADAuwC,EAAA7zC,KAAAs5B,UAEA,IAAAua,EAEA,IADAvwC,EAAAuwC,EAAA3vC,OACAZ,KACAsI,EAAA5L,KAAAiV,GAAA4+B,EAAAvwC,GAAA,GAAAuwC,EAAAvwC,GAAA,GAGA,IAAAwwC,GAAA9zC,KAAA2zC,gBACA,IAAAG,EAEA,IADAxwC,EAAAwwC,EAAA5vC,OACAZ,KACAwwC,EAAAxwC,IAGA,gBAAAyH,EAAAO,IAAA8K,UAAApW,KAAAiV,IACAjV,KAAAiV,GAAAukB,gBAAA93B,QAAA1B,MAEAA,KAAAiN,GAAAjN,KAAAiV,GAAAjV,KAAA4nC,SAAA5nC,KAAAs5B,WAAA,MAoVA,IAAA4C,IAAA,YAgoBA9c,IAAAxgB,IACAi4B,GAAAj4B,IACAq5B,GAAAr5B,IACA66B,GAAA76B,IACAi8B,GAAAj8B,IAGA88B,GAAA98B,IACA29B,GAAA39B,IACA2+B,GAAA3+B,IACAs/B,GAAAt/B,GAEA,IAAAm1C,KAEA9hB,SAAAqW,GACAG,QAAA,QAEAt5B,KAAA,WAEA,GAAAhJ,GAAAnG,KAAAyoC,OAAAtiC,MAAA,UACAmT,EAAAtZ,KAAAiN,GAAA0pB,eAAA32B,KAAAiN,GAAA0pB,cAAAxwB,EACAmT,MAAAC,gBAGAvZ,KAAAqC,QAAAiX,EAAA+B,WAAA,GAAArb,KAAAiN,GAAAyT,SAAA1gB,KAAAiN,IAFAjN,KAAAg0C,YAMA3xC,QAAA,SAAAiX,EAAA9I,EAAAsY,GACA,GAAAxP,GAAA9I,EAAA,CACA,GAAAxQ,KAAAiV,GAAAsE,iBAAA,IAAAD,EAAA6P,WAAAjlB,QAAA,IAAAoV,EAAA6P,WAAA,GAAAtS,UAAAyC,EAAA6P,WAAA,GAAA9R,aAAA,SAGA,GAAA48B,GAAA7zC,SAAAsZ,cAAA,WACAu6B,GAAAx7B,aAAA,aACAw7B,EAAA9vC,UAAAnE,KAAAiV,GAAA9Q,UAEA8vC,EAAAvzB,SAAA1gB,KAAAiN,GACAqM,EAAAlE,YAAA6+B,GAEA,GAAA3vB,GAAAwE,IAAAnI,OAAA3gB,KAAA2gB,MACA3gB,MAAAkpB,OAAA1Y,EAAA2tB,SAAA7kB,EAAAwP,EAAAxE,EAAAtkB,KAAA4gB,OAEAtH,EACA7K,EAAAzO,KAAAiV,GAAAqE,GAEA9D,EAAAxV,KAAAiV,KAIA++B,SAAA,WACAh0C,KAAAqC,QAAA2W,GAAAhZ,KAAAiV,IAAA,GAAAjV,KAAAiN,KAGA+9B,OAAA,WACAhrC,KAAAkpB,QACAlpB,KAAAkpB,WAKA+H,IAEAgB,SAAAkW,GAEAM,QAAA,QAGAiL,eACAvtC,KAAA,SAAAnH,GACAisC,GAAAz1B,OAAAlX,KAAA0B,MACAhB,GACAgB,KAAAw8B,OAAAx9B,KAKAmQ,KAAA,WACAnP,KAAAga,OAAAF,GAAA,aACArL,EAAAzO,KAAAiV,GAAAjV,KAAAga,QACAha,KAAAw8B,OAAAx8B,KAAAyoC,OAAAtiC,OAGAq2B,OAAA,SAAAp+B,GACA,GAAA6yB,GAAArV,GAAA5b,KAAAiN,GAAA6T,SAAA,WAAA1iB,GAAA,EACA6yB,KACAjxB,KAAAo7B,QAAA,GAAAnR,IAAAjqB,KAAAiN,GAAAgkB,GACAga,GAAAzO,OAAAl+B,KAAA0B,QAIAgrC,OAAA,WACAhrC,KAAA8a,MACA9a,KAAA8a,KAAAkP,YAKAoV,IACA2U,QACA9iB,YAGAsN,GAAAiK,GAAAuC,aAiJAmJ,GAAA,iBAGAhiC,IAEAwsB,WACAL,YACAD,WAQA79B,MACA26B,KAAA,SAAAl8B,EAAAm1C,GACA,sBAAAn1C,KAAAwB,KAAA4Q,UAAApS,EAAA,KAAAmM,UAAAjH,OAAA,EAAAiwC,EAAA,IAEAnZ,MAAA,SAAAh8B,GACA,IACA,MAAAwB,MAAAC,MAAAzB,GACO,MAAAiF,GACP,MAAAjF,MASAo1C,WAAA,SAAAp1C,GACA,MAAAA,IAAA,IAAAA,GACAA,IAAA0I,WACA1I,EAAAye,OAAA,GAAA5O,cAAA7P,EAAAuP,MAAA,IAFA,IASA8lC,UAAA,SAAAr1C,GACA,MAAAA,IAAA,IAAAA,IAAA0I,WAAAmH,cAAA,IAOAylC,UAAA,SAAAt1C,GACA,MAAAA,IAAA,IAAAA,IAAA0I,WAAAsH,cAAA,IAUAulC,SAAA,SAAAv1C,EAAAw1C,EAAAC,GAEA,GADAz1C,EAAA01C,WAAA11C,IACA21C,SAAA31C,QAAA,IAAAA,EAAA,QACAw1C,GAAA,MAAAA,IAAA,IACAC,EAAA,MAAAA,IAAA,CACA,IAAAG,GAAA90C,KAAA+0C,IAAA71C,GAAA0F,QAAA+vC,GACAK,EAAAL,EAAAG,EAAArmC,MAAA,KAAAkmC,GAAAG,EACAtxC,EAAAwxC,EAAA5wC,OAAA,EACAoN,EAAAhO,EAAA,EAAAwxC,EAAAvmC,MAAA,EAAAjL,IAAAwxC,EAAA5wC,OAAA,aACA6wC,EAAAN,EAAAG,EAAArmC,SAAAkmC,GAAA,GACAO,EAAAh2C,EAAA,QACA,OAAAg2C,GAAAR,EAAAljC,EAAAwjC,EAAAvmC,MAAAjL,GAAAmL,QAAAylC,GAAA,OAAAa,GAgBAE,UAAA,SAAAj2C,GACA,GAAAiM,GAAAsE,EAAApE,UAAA,GACAjH,EAAA+G,EAAA/G,MACA,IAAAA,EAAA,GACA,GAAAjF,GAAAD,EAAA,IACA,OAAAC,KAAAgM,KAAAhM,GAAAgM,EAAA/G,EAAA,GAEA,MAAA+G,GAAA,QAAAjM,EAAA,SAYAylC,SAAA,SAAAjlC,EAAA01C,GACA,GAAA11C,EAIA,MAHA01C,KACAA,EAAA,KAEA7kC,EAAA7Q,EAAA01C,IAwLAhW,IAAAtgC,IAEAA,GAAA4M,QAAA,SAIAxB,WAAA,WACAwJ,GAAA4R,WACAA,GACAA,GAAArZ,KAAA,OAAAnN,IACK,eAAAmM,EAAAO,IAAA8K,UAAAiqB,IAAA,cAAA3yB,KAAA7M,OAAA2/B,UAAAC,YACLpE,QAAAC,IAAA,2GAGC,GAEDn+B,EAAAD,QAAAU,KLsjC8BN,KAAKJ,EAAU,WAAa,MAAO8B,SAAYjC,EAAoB","file":"vuec.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(23)\r\n\t__webpack_require__(12)\n\n/***/ },\n\n/***/ 12:\n/***/ function(module, exports) {\n\n\tVue.component('V_source', {\r\n\t    template: '<div class=\"source\"><div class=\"media\" v-for=\"v in value\"><div class=\"pull-right\"><a class=\"delete\" @click=\"delete(v)\" href=\"javascript:;\">删除</a></div><div class=\"pull-left\"><span class=\"name\">{{v.farmerName}}</span></div><div class=\"media-body\"><span class=\"proName\">{{v.proName}}</span><div>库存：<input type=\"text\" digits=\"true\" mi=\"true\" required :name=\\'\"stock\" + index + $index\\' class=\"stock-input\" v-model=\"v.stock\" /></div></div></div><a class=\"add\" @click=\"addSource()\" href=\"javascript:;\">设置商品来源</a></div>',\r\n\t    props: {\r\n\t        value: {},\r\n\t        index: {},\r\n\t        rowData: {\r\n\t            type: Object\r\n\t        }\r\n\t    },\r\n\t    watch: {\r\n\t        'rowData.traceList': {\r\n\t            deep: true,\r\n\t            handler: function (newVal) {\r\n\t                var stock = 0\r\n\t                newVal.forEach(function (v) {\r\n\t                    var st = +v.stock\r\n\t                    if( typeof st === 'number' && st === st) {\r\n\t                        stock = Math.round((stock + st) * 100) / 100\r\n\t                    }\r\n\t                })\r\n\t                this.$set('rowData.stock', stock)\r\n\t            }\r\n\t        }\r\n\t    },\r\n\t    ready: function () {\r\n\t        if(!$(document).data('sourceReady')) {\r\n\t            $(document).data('sourceReady', true)\r\n\t            $(document).on('click', '.source-sel', function () {\r\n\t                var json = JSON.parse($(this).val())\r\n\t                var isExist = (function () {\r\n\t                    var result = false\r\n\t                    window.currentSource.rowData.traceList.forEach(function (v) {\r\n\t                        if(json.farmerProductId === v.farmerProductId) {\r\n\t                            result = true\r\n\t                        }\r\n\t                    })\r\n\t                    return result\r\n\t                })()\r\n\t                if (isExist){\r\n\t                    util.alert('此来源已存在，请不要重复添加哦')\r\n\t                }\r\n\t            })\r\n\t        }\r\n\t    },\r\n\t    methods: {\r\n\t        delete: function (v) {\r\n\t            var self = this\r\n\t            if (v.id) {\r\n\t                if (!this.$root.$get('delSkuTraceIdList')) {\r\n\t                    this.$root.$set('delSkuTraceIdList', [])\r\n\t                }\r\n\t                ///////////////////////////////delSkuTraceIdList\r\n\t                this.$root.delSkuTraceIdList.push(v.id)\r\n\t            }\r\n\t            this.rowData.traceList.$remove(v)\r\n\t            var stock = 0\r\n\t            self.rowData.traceList.forEach(function (v) {\r\n\t                stock = Math.round((stock + v.stock) * 100) / 100\r\n\t            })\r\n\t            self.$set('rowData.stock', stock)\r\n\t        },\r\n\t        sourceData: function (currentPage) {\r\n\t            return util.ajax({\r\n\t                url: '../trace/farmerProductListData.json',\r\n\t                data: {\r\n\t                    pageSize: 5,\r\n\t                    currentPage: currentPage\r\n\t                }\r\n\t            })\r\n\t        },\r\n\t        search: function (currentPage, template) {\r\n\t            this.sourceData(currentPage).done(function (res) {\r\n\t                var html = Handlebars.compile(template)(res.result)\r\n\t                $('#source_table').html(html)\r\n\t            })\r\n\t        },\r\n\t        addSource: function () {\r\n\t            window.currentSource = this\r\n\t\r\n\t            window.currentSource.sourceData(1).done(function(res) {\r\n\t                var strWrap = '<div id=\"source_main\" class=\"bootbox-body-inner\"><div id=\"source_table\"></div><div id=\"pagination-source\" class=\"table-footer table-footer-noborder clearfix\"></div></div>'\r\n\t                var $wrap = $(strWrap)\r\n\t                var strTable = '<table class=\"table table-condensed table-hover\" id=\"table-list\"><thead><tr><th>农户姓名</th><th>农产品名称</th><th>农产品数量</th><th>收购价(元)</th></tr></thead><tbody>        {{\\#if this}}        {{#each this}}<tr><td><label><input class=\"source-sel\" data-count=\"{{productCount}}\" value=\\'{\"farmerName\": \"{{farmerName}}\", \"farmerId\": {{farmerId}},\"farmerProductId\": {{id}}, \"proName\": \"{{productName}}\", \"stock\": {{productCount}} }\\' type=\"checkbox\" name=\"farmer\"/>{{farmerName}}</label></td><td>{{productName}}</td><td>{{productCount}}</td><td>{{productBuyPrice}}</td></tr>        {{/each}}        {{else}}<tr><td colspan=\\'4\\'>暂无数据</td></tr>        {{/if}}</tbody></table>'\r\n\t                var html = Handlebars.compile(strTable)(res.result)\r\n\t                $wrap.find('#source_table').html(html)\r\n\t                window.currentSource.dialog = bootbox.dialog({\r\n\t                    title: '商品来源',\r\n\t                    message: $wrap.html(),\r\n\t                    buttons: {\r\n\t                        cancel: {\r\n\t                            label: '取消'\r\n\t                        },\r\n\t                        success: {\r\n\t                            label: '确定',\r\n\t                            callback: function () {\r\n\t                                var array = []\r\n\t                                $('.source-sel:checked').each(function (i, v) {\r\n\t                                    var o = JSON.parse($(this).val())\r\n\t                                    array.push(o)\r\n\t                                })\r\n\t                                window.currentSource.rowData.traceList = window.currentSource.rowData.traceList.concat(array)\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                })\r\n\t                new Pagination({\r\n\t                    element: '#pagination-source',\r\n\t                    maxPagerCount: 7,\r\n\t                }).render({\r\n\t                    total: res.count,\r\n\t                    size: 5,\r\n\t                    current: 1\r\n\t                })\r\n\t                $('#pagination-source').on('change', function(e, current, size) {\r\n\t                    window.currentSource.search(current, strTable);\r\n\t                })\r\n\t            })\r\n\t\r\n\t\r\n\t            /*bootbox.dialog({\r\n\t                message: '<div id=\"source_select\" class=\"bootbox-body-inner\"><div class=\"media\"><div class=\"pull-left\"><label class=\"control-label\">商品来源</label></div><div class=\"pull-right\"><a id=\"btn-source\" class=\"btn\" href=\"javascript:;\">选择来源</a></div><div class=\"media-body\"><input id=\"source-text\" class=\"form-control\" readonly type=\"text\"/></div></div><input id=\"source-val\" type=\"hidden\"/><div class=\"media\"><div class=\"pull-left\"><label class=\"control-label\">商品库存</label></div><div class=\"media-body\"><input id=\"source-stock\" class=\"form-control\" type=\"text\"/></div></div></div>',\r\n\t                buttons: {\r\n\t                    success: {\r\n\t                        label: '确定',\r\n\t                        className: 'btn-primary',\r\n\t                        callback: function () {\r\n\t                            var o = $('#source-val').data('value')\r\n\t                            var st = +$('#source-stock').val()\r\n\t                            if (typeof st !== 'number' || st !== st){\r\n\t                                util.alert('库存必须是数字')\r\n\t                                return false\r\n\t                            }\r\n\t                            if(!o) {\r\n\t                                util.alert('请选择来源')\r\n\t                                return false\r\n\t                            }\r\n\t                            o.stock = st\r\n\t                            self.rowData.traceList.forEach(function (v) {\r\n\t                                if(v.productSkuId) {\r\n\t                                    o.productSkuId = v.productSkuId\r\n\t                                }\r\n\t                            })\r\n\t                            self.rowData.traceList.push(o)\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            })*/\r\n\t\r\n\t        }\r\n\t    }\r\n\t})\r\n\tVue.component('V_routing', {\r\n\t    template: $('#template_routing').length ?  $('#template_routing')[0].innerHTML : '<div class=\"routing\"><div class=\"row \"><div class=\"col-md-4\"><div class=\"lbl\">农户</div><input class=\"form-control\" decimal=\"true\" required :name=\"\\'farmerSplitFee\\' + index\" placeholder=\"农户\" v-model=\"value.farmerSplitFee\" type=\"text\"/></div><div class=\"col-md-4\"><div class=\"lbl\">邮政</div><input class=\"form-control\" decimal=\"true\" required :name=\"\\'postSplitFee\\' + index\" placeholder=\"邮政\" v-model=\"value.postSplitFee\" type=\"text\"/></div><div class=\"col-md-4\"><div class=\"lbl\">村站</div><input class=\"form-control\" decimal=\"true\" required :name=\"\\'villageSplitFee\\' + index\" placeholder=\"村站\" v-model=\"value.villageSplitFee\" type=\"text\"/></div></div></div>',\r\n\t    props: {\r\n\t        value: {\r\n\t            twoWay: true,\r\n\t            type: Object\r\n\t        },\r\n\t        index: {},\r\n\t        rowData: {\r\n\t            type: Object\r\n\t        }\r\n\t    },\r\n\t    watch: {\r\n\t        value: {\r\n\t            deep: true,\r\n\t            handler: function (newVal) {\r\n\t                var v\r\n\t                if (newVal.farmerSplitFee && newVal.postSplitFee && newVal.villageSplitFee) {\r\n\t                    v = +newVal.farmerSplitFee + +newVal.postSplitFee + +newVal.villageSplitFee\r\n\t                    this.$set('rowData.salePrice', Math.round(v * 100) / 100)\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t})\r\n\tVue.component('V_price1', {\r\n\t    template: '<input class=\"form-control text\" than=\"[\\'<\\', \\'[name=salePrice{{index}}]\\']\" decimal=\"true\" required data-msg-required=\"请输入商品批发价\" data-msg-than=\"批发价不能大于售价哦\" :name=\"field + index\" v-model=\"value\" type=\"text\"/>',\r\n\t    props: {\r\n\t        value: {\r\n\t            twoWay: true\r\n\t        },\r\n\t        index: {},\r\n\t        field: {},\r\n\t        rowData: {\r\n\t            type: Object\r\n\t        }\r\n\t    }\r\n\t})\r\n\tVue.component('V_price2', {\r\n\t    template: '<input class=\"form-control text\" than=\"[\\'>\\', \\'[name=wholesalePrice{{index}}]\\']\" decimal=\"true\" required data-msg-required=\"请输入建议最低售价\" data-msg-than=\"建议最低售价需要大于或等于批发价哦\" :name=\"field + index\" v-model=\"value\" type=\"text\"/>',\r\n\t    props: {\r\n\t        value: {\r\n\t            twoWay: true\r\n\t        },\r\n\t        index: {},\r\n\t        field: {},\r\n\t        rowData: {\r\n\t            type: Object\r\n\t        }\r\n\t    }\r\n\t})\r\n\tVue.component('V_price3', {\r\n\t    template: '<input class=\"form-control text\" than=\"[\\'>\\', \\'[name=minSuggestPrice{{index}}]\\']\" required data-msg-required=\"请输入建议最高售价\" data-msg-than=\"建议最高售价需要大于或等于建议最低售价哦\" :name=\"field + index\" v-model=\"value\" type=\"text\"/>',\r\n\t    props: {\r\n\t        value: {\r\n\t            twoWay: true\r\n\t        },\r\n\t        index: {},\r\n\t        field: {},\r\n\t        rowData: {\r\n\t            type: Object\r\n\t        }\r\n\t    }\r\n\t})\r\n\tvar V_price = Vue.component('V_price', {\r\n\t    template: $('#template_price').length ? $('#template_price')[0].innerHTML : '<input class=\"form-control\" min=\"0.01\" number=\"true\" required :name=\"field + index\" v-model=\"value\" type=\"text\"/>',\r\n\t    props: {\r\n\t        value: {\r\n\t            twoWay: true\r\n\t        },\r\n\t        index: {},\r\n\t        field: {},\r\n\t        rowData: {\r\n\t            type: Object\r\n\t        }\r\n\t    },\r\n\t    ready: function () {\r\n\t        if (typeof this.value === 'number') {\r\n\t            this.value = this.value.toFixed(2)\r\n\t        }\r\n\t    }\r\n\t})\r\n\tvar V_number = Vue.component('V_number', {\r\n\t    template: '<input class=\"form-control\" digits=\"true\" required :name=\"field + index\" v-model=\"value\" type=\"text\"/>',\r\n\t    props: {\r\n\t        value: {\r\n\t            twoWay: true\r\n\t        },\r\n\t        index: {},\r\n\t        field: {},\r\n\t        rowData: {\r\n\t            type: Object\r\n\t        }\r\n\t    }\r\n\t})\r\n\tvar V_source = Vue.component('V_source')\r\n\tvar V_price1 = Vue.component('V_price1')\r\n\tvar V_price2 = Vue.component('V_price2')\r\n\tvar V_price3 = Vue.component('V_price3')\r\n\tvar V_routing = Vue.component('V_routing')\r\n\tvar VRender = Vue.extend({\r\n\t    template: '<component v-if=\"render\" :value.sync=\"value\" :field=\"field\" :index=\"index\" :row-data.sync=\"rowData\" :is=\"currentCom\"></component><span v-else=\"render\">{{value}}<input :name=\"field + index\" :value=\"value\" type=\"hidden\"/></span>',\r\n\t    props: {\r\n\t        rowData: {\r\n\t            type: Object,\r\n\t            default: function () {\r\n\t                return {}\r\n\t            }\r\n\t        },\r\n\t        value: {},\r\n\t        index: {},\r\n\t        field: {},\r\n\t        render: {}\r\n\t    },\r\n\t    data: function () {\r\n\t        return {\r\n\t            currentCom: ''\r\n\t        }\r\n\t    },\r\n\t    ready: function () {\r\n\t        this.currentCom = this.getCurrentCom()\r\n\t    },\r\n\t    methods: {\r\n\t        getCurrentCom: function () {\r\n\t            return 'V_' + this.render\r\n\t        }\r\n\t    },\r\n\t    components: {\r\n\t        V_source: V_source,\r\n\t        V_price1: V_price1,\r\n\t        V_price2: V_price2,\r\n\t        V_price3: V_price3,\r\n\t        V_routing: V_routing,\r\n\t        V_price: V_price,\r\n\t        V_number:V_number\r\n\t    }\r\n\t})\r\n\tvar VBatch = Vue.extend({\r\n\t    template: '<div class=\"vol clearfix\"><div class=\"col-md-4\"><div class=\"media\"><div class=\"pull-left\"><label class=\"control-label\">批设置批发价</label></div><div class=\"media-body\"><div class=\"media\"><div class=\"pull-right\"><a href=\"javascript:;\" @click=\"volSet(\\'wholesalePrice\\', volWholesalePrice)\" class=\"btn\" data-id=\"{{id}}\">确定</a></div><div class=\"media-body\"><input v-model=\"volWholesalePrice\" class=\"form-control\" type=\"text\"/></div></div></div></div></div><div class=\"col-md-4\"><div class=\"media\"><div class=\"pull-left\"><label class=\"control-label\">批设置建议最低售价</label></div><div class=\"media-body\"><div class=\"media\"><div class=\"pull-right\"><a href=\"javascript:;\" @click=\"volSet(\\'minSuggestPrice\\', volMinSuggestPrice)\" class=\"btn\" data-id=\"{{id}}\">确定</a></div><div class=\"media-body\"><input v-model=\"volMinSuggestPrice\" class=\"form-control\" type=\"text\"/></div></div></div></div></div><div class=\"col-md-4\"><div class=\"media\"><div class=\"pull-left\"><label class=\"control-label\">批设置建议最高售价</label></div><div class=\"media-body\"><div class=\"media\"><div class=\"pull-right\"><a href=\"javascript:;\" @click=\"volSet(\\'maxSuggestPrice\\', volMaxSuggestPrice)\" class=\"btn\">确定</a></div><div class=\"media-body\"><input v-model=\"volMaxSuggestPrice\" class=\"form-control\" type=\"text\"/></div></div></div></div></div></div>',\r\n\t    methods: {\r\n\t        volSet: function (key, val) {\r\n\t            this.$parent.model.forEach(function (v) {\r\n\t                if (!v.checked) {\r\n\t                    v[key] = val\r\n\t                }\r\n\t            })\r\n\t        }\r\n\t    }\r\n\t})\r\n\t/*var sku = [\r\n\t    {\r\n\t        text: '颜色',\r\n\t        key: 'firstStandard',\r\n\t        data: [\r\n\t            {\r\n\t                value: 'a',\r\n\t                checked: true\r\n\t            },\r\n\t            {\r\n\t                value: 'b',\r\n\t                checked: true\r\n\t            }\r\n\t        ],\r\n\t    }\r\n\t]\r\n\tvar model = [\r\n\t    {\r\n\t        /!*firstStandard: 'a',*!/\r\n\t        stock: 324,\r\n\t        wholesalePrice: 45,\r\n\t        minSuggestPrice: 234,\r\n\t        maxSuggestPrice: 334,\r\n\t        skuSplit: {farmerSplitFee: 32, postSplitFee: 111, villageSplitFee: 11 },\r\n\t        traceList: []\r\n\t    }\r\n\t]*/\r\n\twindow.SkuEditor = Vue.extend({\r\n\t    template: '<div><a @click=\"addSkuAttr()\" class=\"control-desc\" href=\"javascript:;\"><i class=\" fa fa-plus\"></i> 新增规格</a><div class=\"attrs\"><div class=\"media attr\" v-for=\"item in sku\"><div class=\"pull-left\"><span class=\"control-label\">{{item.text}}</span></div><div class=\"media-body\"><div class=\"check-group\"><label class=\"checkbox-inline\" v-for=\"k in item.data\"><input value=\"k.value\" type=\"checkbox\" v-model.sync=\"k.checked\" name=\"item.key\" @change=\"changeModel(k, item)\"><span>{{k.value}}</span></label><a @click=\"addSku(item.data, item)\" href=\"javascript:;\">添加{{item.text}}</a></div></div></div></div><table class=\"table table-bordered table-hover\"><thead><tr><th v-for=\"key in columns\" class=\"{{key.className}}\" :class=\"{active: sortKey == key.field}\" >{{key.name}}</th></tr></thead><tbody><tr v-for=\"(index, entry) in model\" v-if=\"!entry.checked\"><td v-for=\"key in columns\" :class=\"key.className\"><v-render :value.sync=\"entry[key.field]\" :field=\"key.field\" :index=\"index\" :row-data.sync=\"entry\" :render=\"key.render\"></v-render></td></tr></tbody></table></div>',\r\n\t    props: ['model', 'columns', 'map', 'sku', 'limit'],\r\n\t    data: function () {\r\n\t        return {\r\n\t            map: {},\r\n\t            //用于搜索\r\n\t            temp: null,\r\n\t            sku: [],\r\n\t            columns: [],\r\n\t            //注： model 中 checked 为 true 表示删除的数据\r\n\t            model: []\r\n\t        }\r\n\t    },\r\n\t    ready: function () {\r\n\t        var self = this\r\n\t        this.sku.forEach(function (v) {\r\n\t            self.columns.unshift({\r\n\t                name: v.text,\r\n\t                field: v.key\r\n\t            })\r\n\t        })\r\n\t    },\r\n\t    methods: {\r\n\t        volSet: function (key, val) {\r\n\t            this.model.forEach(function (v) {\r\n\t                if (!v.checked) {\r\n\t                    v[key] = val\r\n\t                }\r\n\t            })\r\n\t        },\r\n\t        // 支持map\r\n\t        key: function (index) {\r\n\t            return this.map[index + 1] || '_' + (index + 1)\r\n\t        },\r\n\t        // 添加SKU属性名\r\n\t        addSkuAttr: function () {\r\n\t            var self = this\r\n\t            if (self.sku.length >= self.limit) {\r\n\t                util.alert('最多添加' + self.limit + '个规格哦')\r\n\t                return\r\n\t            }\r\n\t            util.prompt({\r\n\t                title: \"规格名称\",\r\n\t                success: function(result) {\r\n\t                    var isRepeat = false\r\n\t                    self.sku.forEach(function (v) {\r\n\t                        if (v.text === result) {\r\n\t                            isRepeat = true\r\n\t                            return\r\n\t                        }\r\n\t                    })\r\n\t                    if (!isRepeat) {\r\n\t\r\n\t                        var index = self.sku.length\r\n\t                        self.sku.push({\r\n\t                            text: result,\r\n\t                            key: self.key(index),\r\n\t                            data: []\r\n\t                        })\r\n\t                        self.columns.unshift({\r\n\t                            name: result,\r\n\t                            field: self.key(index)\r\n\t                        })\r\n\t                    } else {\r\n\t                        util.alert('相同的规格已添加，请勿重复添加')\r\n\t                    }\r\n\t                }\r\n\t            })\r\n\t        },\r\n\t        // 添加SKU值\r\n\t        addSku: function (v, item) {\r\n\t            var self = this\r\n\t            util.prompt({\r\n\t                title: \"规格值\",\r\n\t                success: function(result) {\r\n\t                    if(result.length > 10) {\r\n\t                        util.alert('规格名称过长')\r\n\t                        return\r\n\t                    }\r\n\t                    var isExist = false\r\n\t                    item.data.forEach(function (it) {\r\n\t                        it.value === result && (isExist = true)\r\n\t                    })\r\n\t\r\n\t                    if(!isExist) {\r\n\t                        var o = {\r\n\t                            value: result,\r\n\t                            checked: true\r\n\t                        }\r\n\t                        v.push(o)\r\n\t                        self.changeModel(o, item)\r\n\t                    } else {\r\n\t                        util.alert('您设置的值已存在，请勿重复添加');\r\n\t                    }\r\n\t\r\n\t                },\r\n\t            });\r\n\t\r\n\t        },\r\n\t        // === 单SKU处理Start\r\n\t        isSkuZero: function (isChecked) {\r\n\t            // 从0个sku到1个sku临界值判断\r\n\t            var self = this\r\n\t            var result = (function () {\r\n\t                var rNotChecked = true\r\n\t                var rChecked = 0\r\n\t                self.sku.forEach(function (sk) {\r\n\t                    for (var i = 0, j = sk.data.length; i < j; i++) {\r\n\t                        var v = sk.data[i];\r\n\t                        if (v.checked) {\r\n\t                            rNotChecked = false\r\n\t                            rChecked ++\r\n\t                        }\r\n\t                    }\r\n\t                })\r\n\t\r\n\t                return isChecked ? rChecked === 1 : rNotChecked\r\n\t            })()\r\n\t            return result\r\n\t        },\r\n\t        singleSKUMain: function (v, item) {\r\n\t            var self = this\r\n\t            var rowData = this.getRowData(v.value, item.key)[0]\r\n\t            // 单SKU处理\r\n\t            if (v.checked) {\r\n\t                // 0个SKU到1个SKU\r\n\t                if (self.isSkuZero(true)) {\r\n\t                    var o = {}\r\n\t                    o[item.key] = v.value\r\n\t                    var isExsitColumn = (function () {\r\n\t                        var result = false\r\n\t                        for (var i = 0, j = self.columns.length; i < j; i++) {\r\n\t                            var obj = self.columns[i];\r\n\t                            if (item.key === obj.field) {\r\n\t                                result = true\r\n\t                                break\r\n\t                            }\r\n\t                        }\r\n\t                        return result\r\n\t                    })()\r\n\t                    if (!isExsitColumn) {\r\n\t                        self.columns.unshift({\r\n\t                            name: item.text,\r\n\t                            field: item.key\r\n\t                        })\r\n\t                    }\r\n\t                    this.$set('model[' + 0 + ']', $.extend({}, this.model[0], o))\r\n\t\r\n\t                } else {\r\n\t                    rowData ? (rowData.rowData.checked = undefined) : this.addRowData(v.value, item)\r\n\t                }\r\n\t\r\n\t            } else {\r\n\t                if (self.isSkuZero(false)) {\r\n\t                    this.model.forEach(function (v, i) {\r\n\t                        if (!i) {\r\n\t                            self.sku.forEach(function (sk) {\r\n\t                                if (v[sk.key]) {\r\n\t                                    for (var m = 0, j = self.columns.length; m < j; m++) {\r\n\t                                        var o = self.columns[m];\r\n\t                                        if (o.field === sk.key) {\r\n\t                                            self.columns.$remove(o)\r\n\t                                            break\r\n\t                                        }\r\n\t                                    }\r\n\t                                    v[sk.key] = undefined\r\n\t                                }\r\n\t                            })\r\n\t                            v.checked = undefined\r\n\t                        } else {\r\n\t                            v.checked = true\r\n\t                        }\r\n\t                    })\r\n\t                } else {\r\n\t                    // 单sku删除\r\n\t                    this.$set('model[' + rowData.index + '].checked', true)\r\n\t                }\r\n\t\r\n\t            }\r\n\t        },\r\n\t        // 单个sku添加\r\n\t        addRowData: function (value, item) {\r\n\t            var columns = this.columns\r\n\t            var result = {}\r\n\t            columns.forEach(function (v) {\r\n\t                if (v.field === item.key) {\r\n\t                    result[v.field] = value\r\n\t                } else {\r\n\t                    if (Object.prototype.toString.call(v.default) === '[object Array]') {\r\n\t                        result[v.field] = [].concat(v.default)\r\n\t                    } else if (Object.prototype.toString.call(v.default) === \"[object Object]\") {\r\n\t                        result[v.field] = $.extend({}, v.default)\r\n\t                    } else {\r\n\t                        result[v.field] = v.default || ''\r\n\t                    }\r\n\t                }\r\n\t            })\r\n\t            this.model.push(result)\r\n\t        },\r\n\t        // === 单SKU处理END\r\n\t\r\n\t        // 获取 行数据和行号\r\n\t        getRowData: function (value, key) {\r\n\t            var result = []\r\n\t            this.model.forEach(function (v, i) {\r\n\t                var r = {}\r\n\t                if (v[key] === value) {\r\n\t                    r.index = i\r\n\t                    r.rowData = v\r\n\t                    result.push(r)\r\n\t                }\r\n\t            })\r\n\t            return result\r\n\t        },\r\n\t\r\n\t        // === 多SKU处理Start\r\n\t        multiSKUMain: function (v, item) {\r\n\t            // 多sku添加\r\n\t            if (v.checked) {\r\n\t                this.addRows(v.value, item)\r\n\t            } else {\r\n\t                // 多sku删除\r\n\t                // 判断是否删除单行内的全部sku\r\n\t                var isSKUExist = (function () {\r\n\t                    var result = false\r\n\t                    item.data.forEach(function (v) {\r\n\t                        if (v.checked) {\r\n\t                            result = true\r\n\t                            return\r\n\t                        }\r\n\t                    })\r\n\t                    return result\r\n\t                })()\r\n\t                if (isSKUExist) {\r\n\t                    // 多SKU删除行\r\n\t                    this.deleteRow(v.value, item)\r\n\t                } else {\r\n\t                    // 多SKU删除列\r\n\t                    this.deleteCol(v.value, item)\r\n\t                }\r\n\t            }\r\n\t        },\r\n\t\r\n\t        deleteRow: function (value, item) {\r\n\t            var self = this\r\n\t            var rowData = this.getRowData(value, item.key)\r\n\t            rowData.forEach(function (v, i) {\r\n\t                v.rowData.checked = true\r\n\t\r\n\t                self.$set('model[' + v.index + ']', $.extend({}, v.rowData))\r\n\t            })\r\n\t        },\r\n\t        deleteCol: function (value, item) {\r\n\t            var self = this\r\n\t            this.columns.forEach(function (v) {\r\n\t                if (v['field'] === item.key) {\r\n\t                    self.columns.$remove(v)\r\n\t                }\r\n\t            })\r\n\t            this.model.forEach(function (v, i) {\r\n\t                self.$set('model[' + i + '].' + item.key, 'undefined')\r\n\t            })\r\n\t        },\r\n\t        addTh: function (item) {\r\n\t            var isExistTH = false\r\n\t            this.columns.forEach(function (v) {\r\n\t                if (item.key === v['field']) {\r\n\t                    isExistTH = true\r\n\t                }\r\n\t            })\r\n\t            if (isExistTH) return\r\n\t            this.columns.unshift({\r\n\t                name: item.text,\r\n\t                field: item.key\r\n\t            })\r\n\t        },\r\n\t        addRows: function (value, item) {\r\n\t            var self = this\r\n\t            var data = this._dataHandler2()\r\n\t            var smp = data[0]\r\n\t            var index = (function () {\r\n\t                var i = 0\r\n\t                for (var k in smp) {\r\n\t                    i++\r\n\t                }\r\n\t                return i\r\n\t            })()\r\n\t            // 添加列\r\n\t            this.addTh(item)\r\n\t            var len = self.sku.length\r\n\t            self.temp = [].concat(self.model)\r\n\t            // 新增sku 第一个sku添加 需要保留之前的数据\r\n\t            var isFirst = self.sku[len - 1].data.length === 1 || (function () {\r\n\t                    var result = true\r\n\t                    var flg = false\r\n\t                    self.sku[len - 1].data.forEach(function (v) {\r\n\t                        if (v.checked) {\r\n\t                            if (flg) {\r\n\t                                result = false\r\n\t                            }\r\n\t                            flg = true\r\n\t                        }\r\n\t                    })\r\n\t                    return result\r\n\t                })()\r\n\t            if (isFirst) {\r\n\t                self.$set('model', [])\r\n\t                data.forEach(function (d, i) {\r\n\t                    var res = self.searchModel(d, index)\r\n\t                    if (res) {\r\n\t                        if (res.checked) {\r\n\t                            res.checked = undefined\r\n\t                        }\r\n\t                        self.model.push($.extend({}, res, d))\r\n\t                    } else {\r\n\t                        self.model.push(self.createRowData(d))\r\n\t                    }\r\n\t                })\r\n\t            } else {\r\n\t                data.forEach(function (d, i) {\r\n\t                    var res = self.searchModel(d, index + 1)\r\n\t                    if (!res) {\r\n\t                        self.model.push(self.createRowData(d))\r\n\t                    } else {\r\n\t                        res.checked = undefined\r\n\t                        //self.$set('model[' + i + '].checked', undefined)\r\n\t                    }\r\n\t                })\r\n\t            }\r\n\t        },\r\n\t        /*\r\n\t         * 处理数据成\r\n\t         * [\r\n\t         *   [{ firstStandard:'xxx', checked: false}, { secondStandard:'xxx'}],\r\n\t         * ...] 用来后期处理数据使用\r\n\t         * */\r\n\t        _dataHandler1: function () {\r\n\t            var result\r\n\t            var watingForComb = []\r\n\t            this.sku.forEach(function (sk) {\r\n\t                var r = []\r\n\t                sk.data.forEach(function (v) {\r\n\t                    var o = {}\r\n\t                    o[sk.key] = v.value\r\n\t                    if (v.checked) {\r\n\t                        r.push(o)\r\n\t                    }\r\n\t                    /* else {\r\n\t                     o['checked'] = false\r\n\t                     r.push(o)\r\n\t                     }*/\r\n\t                })\r\n\t                watingForComb.push(r)\r\n\t            })\r\n\t\r\n\t            result = this.combination(watingForComb)\r\n\t            return result\r\n\t        },\r\n\t        /*\r\n\t         * 处理数据成\r\n\t         * [\r\n\t         *   { firstStandard:'xxx', secondStandard: 'yyy'},\r\n\t         *   { firstStandard:'xxx', secondStandard: 'yzy' },\r\n\t         * ...] 用于mix rowData\r\n\t         * */\r\n\t        _dataHandler2: function () {\r\n\t            var result = []\r\n\t            var array = this._dataHandler1()\r\n\t            array.forEach(function (keys) {\r\n\t                var o = {}\r\n\t                keys.forEach(function (v) {\r\n\t                    $.extend(o, v)\r\n\t                })\r\n\t                result.push(o)\r\n\t            })\r\n\t            return result\r\n\t        },\r\n\t        searchModel: function (d, index) {\r\n\t            var result\r\n\t            var condition = this.condition(d, index)\r\n\t            result = _search(this.temp, condition)\r\n\t            return result\r\n\t            // 递归搜索\r\n\t            function _search(data, condition) {\r\n\t                var d = []\r\n\t                var c = condition[0]\r\n\t                data.forEach(function (v) {\r\n\t                    for (var k in c) {\r\n\t                        if (v[k] === c[k]) {\r\n\t                            d.push(v)\r\n\t                        }\r\n\t                    }\r\n\t                })\r\n\t                condition.shift()\r\n\t                if (d.length) {\r\n\t                    if (condition.length) {\r\n\t                        return _search(d, condition)\r\n\t                    } else {\r\n\t                        return d[0]\r\n\t                    }\r\n\t                } else {\r\n\t                    return null\r\n\t                }\r\n\t            }\r\n\t        },\r\n\t        /*\r\n\t         * 处理数据成\r\n\t         * [\r\n\t         *   { firstStandard:'xxx'},\r\n\t         *   { secondStandard:'xxx'},\r\n\t         * ...] 用于model搜索\r\n\t         * */\r\n\t        condition: function (o, index) {\r\n\t            var result = []\r\n\t            for (var i = 0; i < index - 1; i++) {\r\n\t                var r = {}\r\n\t                var k = this.key(i)\r\n\t                r[k] = o[k]\r\n\t                result.push(r)\r\n\t            }\r\n\t            return result\r\n\t        },\r\n\t\r\n\t        /*\r\n\t         * 处理数据成\r\n\t         * { firstStandard: 'a', stock: 324, price: '',  a: '', b: '', c: '', routing: {farmer: '', zip: '', village: ''}, source: [] },\r\n\t         * 用来后期处理数据使用\r\n\t         * */\r\n\t        createRowData: function (o) {\r\n\t            var columns = this.columns\r\n\t            var result = {}\r\n\t            columns.forEach(function (v) {\r\n\t                if (o[v.field]) {\r\n\t                    result[v.field] = o[v.field]\r\n\t                } else {\r\n\t                    if (Object.prototype.toString.call(v.default) === '[object Array]') {\r\n\t                        result[v.field] = [].concat(v.default)\r\n\t                    } else if (Object.prototype.toString.call(v.default) === \"[object Object]\") {\r\n\t                        result[v.field] = $.extend({}, v.default)\r\n\t                    } else {\r\n\t                        result[v.field] = v.default || ''\r\n\t                    }\r\n\t                }\r\n\t            })\r\n\t            return result\r\n\t        },\r\n\t        // === 多SKU处理END\r\n\t        changeModel: function (v, item) {\r\n\t            var self = this\r\n\t            var isSingleSKU = this.sku.length === 1 || (function () {\r\n\t                    var index = 0\r\n\t                    self.sku.forEach(function (it) {\r\n\t                        for (var i = 0, j = it.data.length; i < j; i++) {\r\n\t                            var d = it.data[i];\r\n\t                            if (d.checked) {\r\n\t                                index++\r\n\t                                break\r\n\t                            }\r\n\t                        }\r\n\t                    })\r\n\t                    // 多个SKU变成单个SKU的临界值\r\n\t                    var flg = false\r\n\t                    item.data.forEach(function (r) {\r\n\t                        if (r.checked) {\r\n\t                            flg = true\r\n\t                        }\r\n\t                    })\r\n\t\r\n\t                    return !flg ? index !== 1 : index <= 1\r\n\t                })()\r\n\t            if (isSingleSKU) {\r\n\t                this.singleSKUMain(v, item)\r\n\t            } else {\r\n\t                this.multiSKUMain(v, item)\r\n\t            }\r\n\t        },\r\n\t        //\r\n\t        combination: function (combArray) {\r\n\t            var heads = combArray[0];\r\n\t            for (var i = 1, j = combArray.length; i < j; i++) {\r\n\t                heads = this.addNewType(heads, combArray[i]);\r\n\t            }\r\n\t            return heads;\r\n\t        },\r\n\t        addNewType: function (heads, choices) {\r\n\t            var result = [];\r\n\t            for (var i = 0, j = heads.length; i < j; i++) {\r\n\t                var obj = heads[i];\r\n\t                for (var m = 0, n = choices.length; m < n; m++) {\r\n\t                    result.push([heads[i]].concat([choices[m]]))\r\n\t                }\r\n\t            }\r\n\t            return result;\r\n\t        }\r\n\t    },\r\n\t    components: {\r\n\t        VRender: VRender,\r\n\t        VBatch: VBatch\r\n\t    }\r\n\t})\r\n\t// delSkuTraceIdList\n\n/***/ },\n\n/***/ 22:\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n\n/***/ 23:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {/*!\n\t * Vue.js v1.0.26\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE = UA && UA.indexOf('trident') > 0;\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n\tvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\n\tvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\t\n\t// detecting iOS UIWebView by indexedDB\n\tvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    if (this.size === this.limit) {\n\t      removed = this.shift();\n\t    }\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: process.env.NODE_ENV !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (process.env.NODE_ENV !== 'production') {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  if (!node) return false;\n\t  var doc = node.ownerDocument.documentElement;\n\t  var parent = node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (process.env.NODE_ENV !== 'production') {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        // Firefox returns unknown for some \"Interactive elements.\"\n\t        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (process.env.NODE_ENV !== 'production') {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (process.env.NODE_ENV !== 'production') {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (process.env.NODE_ENV !== 'production') {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      var mixin = child.mixins[i];\n\t      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n\t      parent = mergeOptions(parent, mixinOptions, vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE: isIE,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIos: isIos,\n\t\tiosVersionMatch: iosVersionMatch,\n\t\tiosVersion: iosVersion,\n\t\thasMutationObserverBug: hasMutationObserverBug,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (process.env.NODE_ENV !== 'production') {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here because the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      /* istanbul ignore if */\n\t      if (e.toString().match(/unsafe-eval|CSP/)) {\n\t        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n\t      } else {\n\t        warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t      }\n\t    }\n\t    return noop;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat literal values as paths\n\t  !literalValueRE$1.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  var _again = true;\n\t\n\t  _function: while (_again) {\n\t    _again = false;\n\t\n\t    runBatcherQueue(queue);\n\t    runBatcherQueue(userQueue);\n\t    // user watchers triggered more watchers,\n\t    // keep flushing until it depletes\n\t    if (queue.length) {\n\t      _again = true;\n\t      continue _function;\n\t    }\n\t    // dev tool hook\n\t    /* istanbul ignore if */\n\t    if (devtools && config.devtools) {\n\t      devtools.emit('flush');\n\t    }\n\t    resetBatcherState();\n\t  }\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  queue.length = 0;\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (process.env.NODE_ENV !== 'production' && config.debug) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if ((isA || isO) && Object.isExtensible(val)) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\tvar commentRE = /<!--/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t  var commentMatch = commentRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch && !commentMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (process.env.NODE_ENV !== 'production') {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * watcher's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (process.env.NODE_ENV !== 'production') {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    // #3029 only update when the value changes. This prevent\n\t    // browsers from overwriting values like selectionStart\n\t    value = _toString(value);\n\t    if (value !== this.el.value) this.el.value = value;\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var _this = this;\n\t\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', function () {\n\t      nextTick(_this.forceUpdate);\n\t    });\n\t    if (!inDoc(el)) {\n\t      nextTick(this.forceUpdate);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (process.env.NODE_ENV !== 'production') {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (process.env.NODE_ENV !== 'production') {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (process.env.NODE_ENV !== 'production') {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value, vm);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value, vm) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  if (typeof coerce === 'function') {\n\t    return coerce(value);\n\t  } else {\n\t    process.env.NODE_ENV !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n\t    return value;\n\t  }\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (process.env.NODE_ENV !== 'production') {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    oldId = oldId || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    removeClass(el, oldId + '-transition');\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (process.env.NODE_ENV === 'production') {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (process.env.NODE_ENV !== 'production' && !destroying) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = _toString(value);\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (process.env.NODE_ENV !== 'production') {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node, true);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (process.env.NODE_ENV !== 'production') {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (process.env.NODE_ENV !== 'production' && this.el) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop$1;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (process.env.NODE_ENV !== 'production') {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (process.env.NODE_ENV !== 'production' && this.el) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    var length = args.length;\n\t    if (length > 1) {\n\t      var index = value % 10 - 1;\n\t      return index in args ? args[index] : args[length - 1];\n\t    } else {\n\t      return args[0] + (value === 1 ? '' : 's');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (process.env.NODE_ENV !== 'production') {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          if (!definition.name) {\n\t            definition.name = id;\n\t          }\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.26';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(22)))\n\n/***/ }\n\n/******/ });\n\n\n/** WEBPACK FOOTER **\n ** vuec.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap cf7598e3ece2d5dc0fde\n **/","require('vue')\r\nrequire('./assets/vue.skuEditor')\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./vuec.js\n ** module id = 0\n ** module chunks = 1\n **/","Vue.component('V_source', {\r\n    template: '<div class=\"source\"><div class=\"media\" v-for=\"v in value\"><div class=\"pull-right\"><a class=\"delete\" @click=\"delete(v)\" href=\"javascript:;\">删除</a></div><div class=\"pull-left\"><span class=\"name\">{{v.farmerName}}</span></div><div class=\"media-body\"><span class=\"proName\">{{v.proName}}</span><div>库存：<input type=\"text\" digits=\"true\" mi=\"true\" required :name=\\'\"stock\" + index + $index\\' class=\"stock-input\" v-model=\"v.stock\" /></div></div></div><a class=\"add\" @click=\"addSource()\" href=\"javascript:;\">设置商品来源</a></div>',\r\n    props: {\r\n        value: {},\r\n        index: {},\r\n        rowData: {\r\n            type: Object\r\n        }\r\n    },\r\n    watch: {\r\n        'rowData.traceList': {\r\n            deep: true,\r\n            handler: function (newVal) {\r\n                var stock = 0\r\n                newVal.forEach(function (v) {\r\n                    var st = +v.stock\r\n                    if( typeof st === 'number' && st === st) {\r\n                        stock = Math.round((stock + st) * 100) / 100\r\n                    }\r\n                })\r\n                this.$set('rowData.stock', stock)\r\n            }\r\n        }\r\n    },\r\n    ready: function () {\r\n        if(!$(document).data('sourceReady')) {\r\n            $(document).data('sourceReady', true)\r\n            $(document).on('click', '.source-sel', function () {\r\n                var json = JSON.parse($(this).val())\r\n                var isExist = (function () {\r\n                    var result = false\r\n                    window.currentSource.rowData.traceList.forEach(function (v) {\r\n                        if(json.farmerProductId === v.farmerProductId) {\r\n                            result = true\r\n                        }\r\n                    })\r\n                    return result\r\n                })()\r\n                if (isExist){\r\n                    util.alert('此来源已存在，请不要重复添加哦')\r\n                }\r\n            })\r\n        }\r\n    },\r\n    methods: {\r\n        delete: function (v) {\r\n            var self = this\r\n            if (v.id) {\r\n                if (!this.$root.$get('delSkuTraceIdList')) {\r\n                    this.$root.$set('delSkuTraceIdList', [])\r\n                }\r\n                ///////////////////////////////delSkuTraceIdList\r\n                this.$root.delSkuTraceIdList.push(v.id)\r\n            }\r\n            this.rowData.traceList.$remove(v)\r\n            var stock = 0\r\n            self.rowData.traceList.forEach(function (v) {\r\n                stock = Math.round((stock + v.stock) * 100) / 100\r\n            })\r\n            self.$set('rowData.stock', stock)\r\n        },\r\n        sourceData: function (currentPage) {\r\n            return util.ajax({\r\n                url: '../trace/farmerProductListData.json',\r\n                data: {\r\n                    pageSize: 5,\r\n                    currentPage: currentPage\r\n                }\r\n            })\r\n        },\r\n        search: function (currentPage, template) {\r\n            this.sourceData(currentPage).done(function (res) {\r\n                var html = Handlebars.compile(template)(res.result)\r\n                $('#source_table').html(html)\r\n            })\r\n        },\r\n        addSource: function () {\r\n            window.currentSource = this\r\n\r\n            window.currentSource.sourceData(1).done(function(res) {\r\n                var strWrap = '<div id=\"source_main\" class=\"bootbox-body-inner\"><div id=\"source_table\"></div><div id=\"pagination-source\" class=\"table-footer table-footer-noborder clearfix\"></div></div>'\r\n                var $wrap = $(strWrap)\r\n                var strTable = '<table class=\"table table-condensed table-hover\" id=\"table-list\"><thead><tr><th>农户姓名</th><th>农产品名称</th><th>农产品数量</th><th>收购价(元)</th></tr></thead><tbody>        {{\\#if this}}        {{#each this}}<tr><td><label><input class=\"source-sel\" data-count=\"{{productCount}}\" value=\\'{\"farmerName\": \"{{farmerName}}\", \"farmerId\": {{farmerId}},\"farmerProductId\": {{id}}, \"proName\": \"{{productName}}\", \"stock\": {{productCount}} }\\' type=\"checkbox\" name=\"farmer\"/>{{farmerName}}</label></td><td>{{productName}}</td><td>{{productCount}}</td><td>{{productBuyPrice}}</td></tr>        {{/each}}        {{else}}<tr><td colspan=\\'4\\'>暂无数据</td></tr>        {{/if}}</tbody></table>'\r\n                var html = Handlebars.compile(strTable)(res.result)\r\n                $wrap.find('#source_table').html(html)\r\n                window.currentSource.dialog = bootbox.dialog({\r\n                    title: '商品来源',\r\n                    message: $wrap.html(),\r\n                    buttons: {\r\n                        cancel: {\r\n                            label: '取消'\r\n                        },\r\n                        success: {\r\n                            label: '确定',\r\n                            callback: function () {\r\n                                var array = []\r\n                                $('.source-sel:checked').each(function (i, v) {\r\n                                    var o = JSON.parse($(this).val())\r\n                                    array.push(o)\r\n                                })\r\n                                window.currentSource.rowData.traceList = window.currentSource.rowData.traceList.concat(array)\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n                new Pagination({\r\n                    element: '#pagination-source',\r\n                    maxPagerCount: 7,\r\n                }).render({\r\n                    total: res.count,\r\n                    size: 5,\r\n                    current: 1\r\n                })\r\n                $('#pagination-source').on('change', function(e, current, size) {\r\n                    window.currentSource.search(current, strTable);\r\n                })\r\n            })\r\n\r\n\r\n            /*bootbox.dialog({\r\n                message: '<div id=\"source_select\" class=\"bootbox-body-inner\"><div class=\"media\"><div class=\"pull-left\"><label class=\"control-label\">商品来源</label></div><div class=\"pull-right\"><a id=\"btn-source\" class=\"btn\" href=\"javascript:;\">选择来源</a></div><div class=\"media-body\"><input id=\"source-text\" class=\"form-control\" readonly type=\"text\"/></div></div><input id=\"source-val\" type=\"hidden\"/><div class=\"media\"><div class=\"pull-left\"><label class=\"control-label\">商品库存</label></div><div class=\"media-body\"><input id=\"source-stock\" class=\"form-control\" type=\"text\"/></div></div></div>',\r\n                buttons: {\r\n                    success: {\r\n                        label: '确定',\r\n                        className: 'btn-primary',\r\n                        callback: function () {\r\n                            var o = $('#source-val').data('value')\r\n                            var st = +$('#source-stock').val()\r\n                            if (typeof st !== 'number' || st !== st){\r\n                                util.alert('库存必须是数字')\r\n                                return false\r\n                            }\r\n                            if(!o) {\r\n                                util.alert('请选择来源')\r\n                                return false\r\n                            }\r\n                            o.stock = st\r\n                            self.rowData.traceList.forEach(function (v) {\r\n                                if(v.productSkuId) {\r\n                                    o.productSkuId = v.productSkuId\r\n                                }\r\n                            })\r\n                            self.rowData.traceList.push(o)\r\n                        }\r\n                    }\r\n                }\r\n            })*/\r\n\r\n        }\r\n    }\r\n})\r\nVue.component('V_routing', {\r\n    template: $('#template_routing').length ?  $('#template_routing')[0].innerHTML : '<div class=\"routing\"><div class=\"row \"><div class=\"col-md-4\"><div class=\"lbl\">农户</div><input class=\"form-control\" decimal=\"true\" required :name=\"\\'farmerSplitFee\\' + index\" placeholder=\"农户\" v-model=\"value.farmerSplitFee\" type=\"text\"/></div><div class=\"col-md-4\"><div class=\"lbl\">邮政</div><input class=\"form-control\" decimal=\"true\" required :name=\"\\'postSplitFee\\' + index\" placeholder=\"邮政\" v-model=\"value.postSplitFee\" type=\"text\"/></div><div class=\"col-md-4\"><div class=\"lbl\">村站</div><input class=\"form-control\" decimal=\"true\" required :name=\"\\'villageSplitFee\\' + index\" placeholder=\"村站\" v-model=\"value.villageSplitFee\" type=\"text\"/></div></div></div>',\r\n    props: {\r\n        value: {\r\n            twoWay: true,\r\n            type: Object\r\n        },\r\n        index: {},\r\n        rowData: {\r\n            type: Object\r\n        }\r\n    },\r\n    watch: {\r\n        value: {\r\n            deep: true,\r\n            handler: function (newVal) {\r\n                var v\r\n                if (newVal.farmerSplitFee && newVal.postSplitFee && newVal.villageSplitFee) {\r\n                    v = +newVal.farmerSplitFee + +newVal.postSplitFee + +newVal.villageSplitFee\r\n                    this.$set('rowData.salePrice', Math.round(v * 100) / 100)\r\n                }\r\n            }\r\n        }\r\n    }\r\n})\r\nVue.component('V_price1', {\r\n    template: '<input class=\"form-control text\" than=\"[\\'<\\', \\'[name=salePrice{{index}}]\\']\" decimal=\"true\" required data-msg-required=\"请输入商品批发价\" data-msg-than=\"批发价不能大于售价哦\" :name=\"field + index\" v-model=\"value\" type=\"text\"/>',\r\n    props: {\r\n        value: {\r\n            twoWay: true\r\n        },\r\n        index: {},\r\n        field: {},\r\n        rowData: {\r\n            type: Object\r\n        }\r\n    }\r\n})\r\nVue.component('V_price2', {\r\n    template: '<input class=\"form-control text\" than=\"[\\'>\\', \\'[name=wholesalePrice{{index}}]\\']\" decimal=\"true\" required data-msg-required=\"请输入建议最低售价\" data-msg-than=\"建议最低售价需要大于或等于批发价哦\" :name=\"field + index\" v-model=\"value\" type=\"text\"/>',\r\n    props: {\r\n        value: {\r\n            twoWay: true\r\n        },\r\n        index: {},\r\n        field: {},\r\n        rowData: {\r\n            type: Object\r\n        }\r\n    }\r\n})\r\nVue.component('V_price3', {\r\n    template: '<input class=\"form-control text\" than=\"[\\'>\\', \\'[name=minSuggestPrice{{index}}]\\']\" required data-msg-required=\"请输入建议最高售价\" data-msg-than=\"建议最高售价需要大于或等于建议最低售价哦\" :name=\"field + index\" v-model=\"value\" type=\"text\"/>',\r\n    props: {\r\n        value: {\r\n            twoWay: true\r\n        },\r\n        index: {},\r\n        field: {},\r\n        rowData: {\r\n            type: Object\r\n        }\r\n    }\r\n})\r\nvar V_price = Vue.component('V_price', {\r\n    template: $('#template_price').length ? $('#template_price')[0].innerHTML : '<input class=\"form-control\" min=\"0.01\" number=\"true\" required :name=\"field + index\" v-model=\"value\" type=\"text\"/>',\r\n    props: {\r\n        value: {\r\n            twoWay: true\r\n        },\r\n        index: {},\r\n        field: {},\r\n        rowData: {\r\n            type: Object\r\n        }\r\n    },\r\n    ready: function () {\r\n        if (typeof this.value === 'number') {\r\n            this.value = this.value.toFixed(2)\r\n        }\r\n    }\r\n})\r\nvar V_number = Vue.component('V_number', {\r\n    template: '<input class=\"form-control\" digits=\"true\" required :name=\"field + index\" v-model=\"value\" type=\"text\"/>',\r\n    props: {\r\n        value: {\r\n            twoWay: true\r\n        },\r\n        index: {},\r\n        field: {},\r\n        rowData: {\r\n            type: Object\r\n        }\r\n    }\r\n})\r\nvar V_source = Vue.component('V_source')\r\nvar V_price1 = Vue.component('V_price1')\r\nvar V_price2 = Vue.component('V_price2')\r\nvar V_price3 = Vue.component('V_price3')\r\nvar V_routing = Vue.component('V_routing')\r\nvar VRender = Vue.extend({\r\n    template: '<component v-if=\"render\" :value.sync=\"value\" :field=\"field\" :index=\"index\" :row-data.sync=\"rowData\" :is=\"currentCom\"></component><span v-else=\"render\">{{value}}<input :name=\"field + index\" :value=\"value\" type=\"hidden\"/></span>',\r\n    props: {\r\n        rowData: {\r\n            type: Object,\r\n            default: function () {\r\n                return {}\r\n            }\r\n        },\r\n        value: {},\r\n        index: {},\r\n        field: {},\r\n        render: {}\r\n    },\r\n    data: function () {\r\n        return {\r\n            currentCom: ''\r\n        }\r\n    },\r\n    ready: function () {\r\n        this.currentCom = this.getCurrentCom()\r\n    },\r\n    methods: {\r\n        getCurrentCom: function () {\r\n            return 'V_' + this.render\r\n        }\r\n    },\r\n    components: {\r\n        V_source: V_source,\r\n        V_price1: V_price1,\r\n        V_price2: V_price2,\r\n        V_price3: V_price3,\r\n        V_routing: V_routing,\r\n        V_price: V_price,\r\n        V_number:V_number\r\n    }\r\n})\r\nvar VBatch = Vue.extend({\r\n    template: '<div class=\"vol clearfix\"><div class=\"col-md-4\"><div class=\"media\"><div class=\"pull-left\"><label class=\"control-label\">批设置批发价</label></div><div class=\"media-body\"><div class=\"media\"><div class=\"pull-right\"><a href=\"javascript:;\" @click=\"volSet(\\'wholesalePrice\\', volWholesalePrice)\" class=\"btn\" data-id=\"{{id}}\">确定</a></div><div class=\"media-body\"><input v-model=\"volWholesalePrice\" class=\"form-control\" type=\"text\"/></div></div></div></div></div><div class=\"col-md-4\"><div class=\"media\"><div class=\"pull-left\"><label class=\"control-label\">批设置建议最低售价</label></div><div class=\"media-body\"><div class=\"media\"><div class=\"pull-right\"><a href=\"javascript:;\" @click=\"volSet(\\'minSuggestPrice\\', volMinSuggestPrice)\" class=\"btn\" data-id=\"{{id}}\">确定</a></div><div class=\"media-body\"><input v-model=\"volMinSuggestPrice\" class=\"form-control\" type=\"text\"/></div></div></div></div></div><div class=\"col-md-4\"><div class=\"media\"><div class=\"pull-left\"><label class=\"control-label\">批设置建议最高售价</label></div><div class=\"media-body\"><div class=\"media\"><div class=\"pull-right\"><a href=\"javascript:;\" @click=\"volSet(\\'maxSuggestPrice\\', volMaxSuggestPrice)\" class=\"btn\">确定</a></div><div class=\"media-body\"><input v-model=\"volMaxSuggestPrice\" class=\"form-control\" type=\"text\"/></div></div></div></div></div></div>',\r\n    methods: {\r\n        volSet: function (key, val) {\r\n            this.$parent.model.forEach(function (v) {\r\n                if (!v.checked) {\r\n                    v[key] = val\r\n                }\r\n            })\r\n        }\r\n    }\r\n})\r\n/*var sku = [\r\n    {\r\n        text: '颜色',\r\n        key: 'firstStandard',\r\n        data: [\r\n            {\r\n                value: 'a',\r\n                checked: true\r\n            },\r\n            {\r\n                value: 'b',\r\n                checked: true\r\n            }\r\n        ],\r\n    }\r\n]\r\nvar model = [\r\n    {\r\n        /!*firstStandard: 'a',*!/\r\n        stock: 324,\r\n        wholesalePrice: 45,\r\n        minSuggestPrice: 234,\r\n        maxSuggestPrice: 334,\r\n        skuSplit: {farmerSplitFee: 32, postSplitFee: 111, villageSplitFee: 11 },\r\n        traceList: []\r\n    }\r\n]*/\r\nwindow.SkuEditor = Vue.extend({\r\n    template: '<div><a @click=\"addSkuAttr()\" class=\"control-desc\" href=\"javascript:;\"><i class=\" fa fa-plus\"></i> 新增规格</a><div class=\"attrs\"><div class=\"media attr\" v-for=\"item in sku\"><div class=\"pull-left\"><span class=\"control-label\">{{item.text}}</span></div><div class=\"media-body\"><div class=\"check-group\"><label class=\"checkbox-inline\" v-for=\"k in item.data\"><input value=\"k.value\" type=\"checkbox\" v-model.sync=\"k.checked\" name=\"item.key\" @change=\"changeModel(k, item)\"><span>{{k.value}}</span></label><a @click=\"addSku(item.data, item)\" href=\"javascript:;\">添加{{item.text}}</a></div></div></div></div><table class=\"table table-bordered table-hover\"><thead><tr><th v-for=\"key in columns\" class=\"{{key.className}}\" :class=\"{active: sortKey == key.field}\" >{{key.name}}</th></tr></thead><tbody><tr v-for=\"(index, entry) in model\" v-if=\"!entry.checked\"><td v-for=\"key in columns\" :class=\"key.className\"><v-render :value.sync=\"entry[key.field]\" :field=\"key.field\" :index=\"index\" :row-data.sync=\"entry\" :render=\"key.render\"></v-render></td></tr></tbody></table></div>',\r\n    props: ['model', 'columns', 'map', 'sku', 'limit'],\r\n    data: function () {\r\n        return {\r\n            map: {},\r\n            //用于搜索\r\n            temp: null,\r\n            sku: [],\r\n            columns: [],\r\n            //注： model 中 checked 为 true 表示删除的数据\r\n            model: []\r\n        }\r\n    },\r\n    ready: function () {\r\n        var self = this\r\n        this.sku.forEach(function (v) {\r\n            self.columns.unshift({\r\n                name: v.text,\r\n                field: v.key\r\n            })\r\n        })\r\n    },\r\n    methods: {\r\n        volSet: function (key, val) {\r\n            this.model.forEach(function (v) {\r\n                if (!v.checked) {\r\n                    v[key] = val\r\n                }\r\n            })\r\n        },\r\n        // 支持map\r\n        key: function (index) {\r\n            return this.map[index + 1] || '_' + (index + 1)\r\n        },\r\n        // 添加SKU属性名\r\n        addSkuAttr: function () {\r\n            var self = this\r\n            if (self.sku.length >= self.limit) {\r\n                util.alert('最多添加' + self.limit + '个规格哦')\r\n                return\r\n            }\r\n            util.prompt({\r\n                title: \"规格名称\",\r\n                success: function(result) {\r\n                    var isRepeat = false\r\n                    self.sku.forEach(function (v) {\r\n                        if (v.text === result) {\r\n                            isRepeat = true\r\n                            return\r\n                        }\r\n                    })\r\n                    if (!isRepeat) {\r\n\r\n                        var index = self.sku.length\r\n                        self.sku.push({\r\n                            text: result,\r\n                            key: self.key(index),\r\n                            data: []\r\n                        })\r\n                        self.columns.unshift({\r\n                            name: result,\r\n                            field: self.key(index)\r\n                        })\r\n                    } else {\r\n                        util.alert('相同的规格已添加，请勿重复添加')\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        // 添加SKU值\r\n        addSku: function (v, item) {\r\n            var self = this\r\n            util.prompt({\r\n                title: \"规格值\",\r\n                success: function(result) {\r\n                    if(result.length > 10) {\r\n                        util.alert('规格名称过长')\r\n                        return\r\n                    }\r\n                    var isExist = false\r\n                    item.data.forEach(function (it) {\r\n                        it.value === result && (isExist = true)\r\n                    })\r\n\r\n                    if(!isExist) {\r\n                        var o = {\r\n                            value: result,\r\n                            checked: true\r\n                        }\r\n                        v.push(o)\r\n                        self.changeModel(o, item)\r\n                    } else {\r\n                        util.alert('您设置的值已存在，请勿重复添加');\r\n                    }\r\n\r\n                },\r\n            });\r\n\r\n        },\r\n        // === 单SKU处理Start\r\n        isSkuZero: function (isChecked) {\r\n            // 从0个sku到1个sku临界值判断\r\n            var self = this\r\n            var result = (function () {\r\n                var rNotChecked = true\r\n                var rChecked = 0\r\n                self.sku.forEach(function (sk) {\r\n                    for (var i = 0, j = sk.data.length; i < j; i++) {\r\n                        var v = sk.data[i];\r\n                        if (v.checked) {\r\n                            rNotChecked = false\r\n                            rChecked ++\r\n                        }\r\n                    }\r\n                })\r\n\r\n                return isChecked ? rChecked === 1 : rNotChecked\r\n            })()\r\n            return result\r\n        },\r\n        singleSKUMain: function (v, item) {\r\n            var self = this\r\n            var rowData = this.getRowData(v.value, item.key)[0]\r\n            // 单SKU处理\r\n            if (v.checked) {\r\n                // 0个SKU到1个SKU\r\n                if (self.isSkuZero(true)) {\r\n                    var o = {}\r\n                    o[item.key] = v.value\r\n                    var isExsitColumn = (function () {\r\n                        var result = false\r\n                        for (var i = 0, j = self.columns.length; i < j; i++) {\r\n                            var obj = self.columns[i];\r\n                            if (item.key === obj.field) {\r\n                                result = true\r\n                                break\r\n                            }\r\n                        }\r\n                        return result\r\n                    })()\r\n                    if (!isExsitColumn) {\r\n                        self.columns.unshift({\r\n                            name: item.text,\r\n                            field: item.key\r\n                        })\r\n                    }\r\n                    this.$set('model[' + 0 + ']', $.extend({}, this.model[0], o))\r\n\r\n                } else {\r\n                    rowData ? (rowData.rowData.checked = undefined) : this.addRowData(v.value, item)\r\n                }\r\n\r\n            } else {\r\n                if (self.isSkuZero(false)) {\r\n                    this.model.forEach(function (v, i) {\r\n                        if (!i) {\r\n                            self.sku.forEach(function (sk) {\r\n                                if (v[sk.key]) {\r\n                                    for (var m = 0, j = self.columns.length; m < j; m++) {\r\n                                        var o = self.columns[m];\r\n                                        if (o.field === sk.key) {\r\n                                            self.columns.$remove(o)\r\n                                            break\r\n                                        }\r\n                                    }\r\n                                    v[sk.key] = undefined\r\n                                }\r\n                            })\r\n                            v.checked = undefined\r\n                        } else {\r\n                            v.checked = true\r\n                        }\r\n                    })\r\n                } else {\r\n                    // 单sku删除\r\n                    this.$set('model[' + rowData.index + '].checked', true)\r\n                }\r\n\r\n            }\r\n        },\r\n        // 单个sku添加\r\n        addRowData: function (value, item) {\r\n            var columns = this.columns\r\n            var result = {}\r\n            columns.forEach(function (v) {\r\n                if (v.field === item.key) {\r\n                    result[v.field] = value\r\n                } else {\r\n                    if (Object.prototype.toString.call(v.default) === '[object Array]') {\r\n                        result[v.field] = [].concat(v.default)\r\n                    } else if (Object.prototype.toString.call(v.default) === \"[object Object]\") {\r\n                        result[v.field] = $.extend({}, v.default)\r\n                    } else {\r\n                        result[v.field] = v.default || ''\r\n                    }\r\n                }\r\n            })\r\n            this.model.push(result)\r\n        },\r\n        // === 单SKU处理END\r\n\r\n        // 获取 行数据和行号\r\n        getRowData: function (value, key) {\r\n            var result = []\r\n            this.model.forEach(function (v, i) {\r\n                var r = {}\r\n                if (v[key] === value) {\r\n                    r.index = i\r\n                    r.rowData = v\r\n                    result.push(r)\r\n                }\r\n            })\r\n            return result\r\n        },\r\n\r\n        // === 多SKU处理Start\r\n        multiSKUMain: function (v, item) {\r\n            // 多sku添加\r\n            if (v.checked) {\r\n                this.addRows(v.value, item)\r\n            } else {\r\n                // 多sku删除\r\n                // 判断是否删除单行内的全部sku\r\n                var isSKUExist = (function () {\r\n                    var result = false\r\n                    item.data.forEach(function (v) {\r\n                        if (v.checked) {\r\n                            result = true\r\n                            return\r\n                        }\r\n                    })\r\n                    return result\r\n                })()\r\n                if (isSKUExist) {\r\n                    // 多SKU删除行\r\n                    this.deleteRow(v.value, item)\r\n                } else {\r\n                    // 多SKU删除列\r\n                    this.deleteCol(v.value, item)\r\n                }\r\n            }\r\n        },\r\n\r\n        deleteRow: function (value, item) {\r\n            var self = this\r\n            var rowData = this.getRowData(value, item.key)\r\n            rowData.forEach(function (v, i) {\r\n                v.rowData.checked = true\r\n\r\n                self.$set('model[' + v.index + ']', $.extend({}, v.rowData))\r\n            })\r\n        },\r\n        deleteCol: function (value, item) {\r\n            var self = this\r\n            this.columns.forEach(function (v) {\r\n                if (v['field'] === item.key) {\r\n                    self.columns.$remove(v)\r\n                }\r\n            })\r\n            this.model.forEach(function (v, i) {\r\n                self.$set('model[' + i + '].' + item.key, 'undefined')\r\n            })\r\n        },\r\n        addTh: function (item) {\r\n            var isExistTH = false\r\n            this.columns.forEach(function (v) {\r\n                if (item.key === v['field']) {\r\n                    isExistTH = true\r\n                }\r\n            })\r\n            if (isExistTH) return\r\n            this.columns.unshift({\r\n                name: item.text,\r\n                field: item.key\r\n            })\r\n        },\r\n        addRows: function (value, item) {\r\n            var self = this\r\n            var data = this._dataHandler2()\r\n            var smp = data[0]\r\n            var index = (function () {\r\n                var i = 0\r\n                for (var k in smp) {\r\n                    i++\r\n                }\r\n                return i\r\n            })()\r\n            // 添加列\r\n            this.addTh(item)\r\n            var len = self.sku.length\r\n            self.temp = [].concat(self.model)\r\n            // 新增sku 第一个sku添加 需要保留之前的数据\r\n            var isFirst = self.sku[len - 1].data.length === 1 || (function () {\r\n                    var result = true\r\n                    var flg = false\r\n                    self.sku[len - 1].data.forEach(function (v) {\r\n                        if (v.checked) {\r\n                            if (flg) {\r\n                                result = false\r\n                            }\r\n                            flg = true\r\n                        }\r\n                    })\r\n                    return result\r\n                })()\r\n            if (isFirst) {\r\n                self.$set('model', [])\r\n                data.forEach(function (d, i) {\r\n                    var res = self.searchModel(d, index)\r\n                    if (res) {\r\n                        if (res.checked) {\r\n                            res.checked = undefined\r\n                        }\r\n                        self.model.push($.extend({}, res, d))\r\n                    } else {\r\n                        self.model.push(self.createRowData(d))\r\n                    }\r\n                })\r\n            } else {\r\n                data.forEach(function (d, i) {\r\n                    var res = self.searchModel(d, index + 1)\r\n                    if (!res) {\r\n                        self.model.push(self.createRowData(d))\r\n                    } else {\r\n                        res.checked = undefined\r\n                        //self.$set('model[' + i + '].checked', undefined)\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        /*\r\n         * 处理数据成\r\n         * [\r\n         *   [{ firstStandard:'xxx', checked: false}, { secondStandard:'xxx'}],\r\n         * ...] 用来后期处理数据使用\r\n         * */\r\n        _dataHandler1: function () {\r\n            var result\r\n            var watingForComb = []\r\n            this.sku.forEach(function (sk) {\r\n                var r = []\r\n                sk.data.forEach(function (v) {\r\n                    var o = {}\r\n                    o[sk.key] = v.value\r\n                    if (v.checked) {\r\n                        r.push(o)\r\n                    }\r\n                    /* else {\r\n                     o['checked'] = false\r\n                     r.push(o)\r\n                     }*/\r\n                })\r\n                watingForComb.push(r)\r\n            })\r\n\r\n            result = this.combination(watingForComb)\r\n            return result\r\n        },\r\n        /*\r\n         * 处理数据成\r\n         * [\r\n         *   { firstStandard:'xxx', secondStandard: 'yyy'},\r\n         *   { firstStandard:'xxx', secondStandard: 'yzy' },\r\n         * ...] 用于mix rowData\r\n         * */\r\n        _dataHandler2: function () {\r\n            var result = []\r\n            var array = this._dataHandler1()\r\n            array.forEach(function (keys) {\r\n                var o = {}\r\n                keys.forEach(function (v) {\r\n                    $.extend(o, v)\r\n                })\r\n                result.push(o)\r\n            })\r\n            return result\r\n        },\r\n        searchModel: function (d, index) {\r\n            var result\r\n            var condition = this.condition(d, index)\r\n            result = _search(this.temp, condition)\r\n            return result\r\n            // 递归搜索\r\n            function _search(data, condition) {\r\n                var d = []\r\n                var c = condition[0]\r\n                data.forEach(function (v) {\r\n                    for (var k in c) {\r\n                        if (v[k] === c[k]) {\r\n                            d.push(v)\r\n                        }\r\n                    }\r\n                })\r\n                condition.shift()\r\n                if (d.length) {\r\n                    if (condition.length) {\r\n                        return _search(d, condition)\r\n                    } else {\r\n                        return d[0]\r\n                    }\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        },\r\n        /*\r\n         * 处理数据成\r\n         * [\r\n         *   { firstStandard:'xxx'},\r\n         *   { secondStandard:'xxx'},\r\n         * ...] 用于model搜索\r\n         * */\r\n        condition: function (o, index) {\r\n            var result = []\r\n            for (var i = 0; i < index - 1; i++) {\r\n                var r = {}\r\n                var k = this.key(i)\r\n                r[k] = o[k]\r\n                result.push(r)\r\n            }\r\n            return result\r\n        },\r\n\r\n        /*\r\n         * 处理数据成\r\n         * { firstStandard: 'a', stock: 324, price: '',  a: '', b: '', c: '', routing: {farmer: '', zip: '', village: ''}, source: [] },\r\n         * 用来后期处理数据使用\r\n         * */\r\n        createRowData: function (o) {\r\n            var columns = this.columns\r\n            var result = {}\r\n            columns.forEach(function (v) {\r\n                if (o[v.field]) {\r\n                    result[v.field] = o[v.field]\r\n                } else {\r\n                    if (Object.prototype.toString.call(v.default) === '[object Array]') {\r\n                        result[v.field] = [].concat(v.default)\r\n                    } else if (Object.prototype.toString.call(v.default) === \"[object Object]\") {\r\n                        result[v.field] = $.extend({}, v.default)\r\n                    } else {\r\n                        result[v.field] = v.default || ''\r\n                    }\r\n                }\r\n            })\r\n            return result\r\n        },\r\n        // === 多SKU处理END\r\n        changeModel: function (v, item) {\r\n            var self = this\r\n            var isSingleSKU = this.sku.length === 1 || (function () {\r\n                    var index = 0\r\n                    self.sku.forEach(function (it) {\r\n                        for (var i = 0, j = it.data.length; i < j; i++) {\r\n                            var d = it.data[i];\r\n                            if (d.checked) {\r\n                                index++\r\n                                break\r\n                            }\r\n                        }\r\n                    })\r\n                    // 多个SKU变成单个SKU的临界值\r\n                    var flg = false\r\n                    item.data.forEach(function (r) {\r\n                        if (r.checked) {\r\n                            flg = true\r\n                        }\r\n                    })\r\n\r\n                    return !flg ? index !== 1 : index <= 1\r\n                })()\r\n            if (isSingleSKU) {\r\n                this.singleSKUMain(v, item)\r\n            } else {\r\n                this.multiSKUMain(v, item)\r\n            }\r\n        },\r\n        //\r\n        combination: function (combArray) {\r\n            var heads = combArray[0];\r\n            for (var i = 1, j = combArray.length; i < j; i++) {\r\n                heads = this.addNewType(heads, combArray[i]);\r\n            }\r\n            return heads;\r\n        },\r\n        addNewType: function (heads, choices) {\r\n            var result = [];\r\n            for (var i = 0, j = heads.length; i < j; i++) {\r\n                var obj = heads[i];\r\n                for (var m = 0, n = choices.length; m < n; m++) {\r\n                    result.push([heads[i]].concat([choices[m]]))\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    },\r\n    components: {\r\n        VRender: VRender,\r\n        VBatch: VBatch\r\n    }\r\n})\r\n// delSkuTraceIdList\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./assets/vue.skuEditor.js\n ** module id = 12\n ** module chunks = 1\n **/","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/.npminstall/process/0.11.9/process/browser.js\n ** module id = 22\n ** module chunks = 1\n **/","/*!\n * Vue.js v1.0.26\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && UA.indexOf('trident') > 0;\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\nvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\n// detecting iOS UIWebView by indexedDB\nvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    if (this.size === this.limit) {\n      removed = this.shift();\n    }\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        // Firefox returns unknown for some \"Interactive elements.\"\n        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n      parent = mergeOptions(parent, mixinOptions, vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tiosVersionMatch: iosVersionMatch,\n\tiosVersion: iosVersion,\n\thasMutationObserverBug: hasMutationObserverBug,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\nfunction noop() {}\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here because the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if (e.toString().match(/unsafe-eval|CSP/)) {\n        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n      } else {\n        warn('Invalid expression. ' + 'Generated function body: ' + body);\n      }\n    }\n    return noop;\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat literal values as paths\n  !literalValueRE$1.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if ((isA || isO) && Object.isExtensible(val)) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\nvar commentRE = /<!--/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n  var commentMatch = commentRE.test(templateString);\n\n  if (!tagMatch && !entityMatch && !commentMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * watcher's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    // #3029 only update when the value changes. This prevent\n    // browsers from overwriting values like selectionStart\n    value = _toString(value);\n    if (value !== this.el.value) this.el.value = value;\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var _this = this;\n\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', function () {\n      nextTick(_this.forceUpdate);\n    });\n    if (!inDoc(el)) {\n      nextTick(this.forceUpdate);\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value, vm);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value, vm) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  if (typeof coerce === 'function') {\n    return coerce(value);\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n    return value;\n  }\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    oldId = oldId || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    removeClass(el, oldId + '-transition');\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = _toString(value);\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop$1() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop$1;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    var length = args.length;\n    if (length > 1) {\n      var index = value % 10 - 1;\n      return index in args ? args[index] : args[length - 1];\n    } else {\n      return args[0] + (value === 1 ? '' : 's');\n    }\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          if (!definition.name) {\n            definition.name = id;\n          }\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.26';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 23\n ** module chunks = 1\n **/"],"sourceRoot":""}